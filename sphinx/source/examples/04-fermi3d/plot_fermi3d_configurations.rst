
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\04-fermi3d\plot_fermi3d_configurations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_04-fermi3d_plot_fermi3d_configurations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_04-fermi3d_plot_fermi3d_configurations.py:


.. _ref_plot_fermi3d_configurations:

Plotting with Configurations in `pyprocar`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This example illustrates how to utilize various configurations for plotting the 3D Fermi surface using the `pyprocar` package. It provides a structured way to explore and demonstrate different configurations for the `plot_fermi_surface` function. 

Symmetry does not currently work! Make sure for Fermi surface calculations to turn off symmetry.

Preparation
-----------
Before diving into plotting, we need to download the example files. Use the following code to do this. Once downloaded, specify the `data_dir` to point to the location of the downloaded data.

.. code-block::
   :caption: Downloading example

    data_dir = pyprocar.download_example(save_dir='', 
                                material='Fe',
                                code='vasp', 
                                spin_calc_type='non-spin-polarized',
                                calc_type='fermi')

.. GENERATED FROM PYTHON SOURCE LINES 24-42

.. code-block:: default


    import pyvista
    # You do not need this. This is to ensure an image is rendered off screen when generating example gallery.
    pyvista.OFF_SCREEN = True

    import os
    import pyprocar

    data_dir = f"{pyprocar.utils.ROOT}{os.sep}data{os.sep}examples{os.sep}Fe{os.sep}vasp{os.sep}non-spin-polarized{os.sep}fermi"

    # First create the FermiHandler object, this loads the data into memory. Then you can call class methods to plot.
    # Symmetry only works for specific space groups currently. 
    # For the actual calculations turn off symmetry and set 'apply_symmetry'=False.
    fermiHandler = pyprocar.FermiHandler(
                                        code="vasp",
                                        dirname=data_dir,
                                        apply_symmetry=True)



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "Z:\Research Projects\pyprocar\examples\04-fermi3d\plot_fermi3d_configurations.py", line 37, in <module>
        fermiHandler = pyprocar.FermiHandler(
      File "z:\research projects\pyprocar\pyprocar\scripts\scriptFermiHandler.py", line 51, in __init__
        parser = io.Parser(code = code, dir = dirname)
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 27, in __init__
        self.parse()
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 49, in parse
        self.parse_vasp()
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 232, in parse_vasp
        poscar = vasp.Poscar(poscar,rotations = None)
      File "z:\research projects\pyprocar\pyprocar\io\vasp.py", line 284, in __init__
        self.structure = Structure(
      File "z:\research projects\pyprocar\pyprocar\core\structure.py", line 73, in __init__
        self.get_wyckoff_positions()
      File "z:\research projects\pyprocar\pyprocar\core\structure.py", line 340, in get_wyckoff_positions
        spglib.get_symmetry_dataset(self._spglib_cell, symprec)["wyckoffs"]
    TypeError: 'NoneType' object is not subscriptable




.. GENERATED FROM PYTHON SOURCE LINES 43-65

.. code-block:: default


    # Section 1: Plain Mode
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates how to plot the 3D Fermi surface using default settings.


    # Section 1: Locating and Printing Configuration Files
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates where the configuration files are located in the package.
    # It also shows how to print the configurations by setting print_plot_opts=True.
    #

    # Path to the configuration files in the package
    config_path = os.path.join(pyprocar.__path__[0], 'cfg')
    print(f"Configuration files are located at: {config_path}")

    fermiHandler.plot_fermi_surface(mode="plain",
                                    show=True,
                                    print_plot_opts=True)


.. GENERATED FROM PYTHON SOURCE LINES 66-82

.. code-block:: default


    # Section 2: Parametric Mode with Custom Settings
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates how to customize the appearance of the 3D Fermi surface in parametric mode.
    # We'll adjust the colormap, color limits, and other settings.

    atoms=[0]
    orbitals=[4,5,6,7,8]
    spins=[0]
    fermiHandler.plot_fermi_surface(mode="parametric",
                                  atoms=atoms,
                                  orbitals=orbitals,
                                  spins=spins,
                                  surface_cmap='viridis',
                                  surface_clim=[0, 1],
                                  show=True)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.023 seconds)


.. _sphx_glr_download_examples_04-fermi3d_plot_fermi3d_configurations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_fermi3d_configurations.py <plot_fermi3d_configurations.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_fermi3d_configurations.ipynb <plot_fermi3d_configurations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
