
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\00-band_structure\plot_unfolding.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_00-band_structure_plot_unfolding.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-band_structure_plot_unfolding.py:


.. _ref_plot_unfolding:

Unfolding Band Structure
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Unfolding Band Structure example.

First download the example files with the code below. Then replace data_dir below.

.. code-block::
   :caption: Downloading example

    supercell_dir = pyprocar.download_example(save_dir='', 
                                material='MgB2',
                                code='vasp', 
                                spin_calc_type='non-spin-polarized',
                                calc_type='supercell_bands')

    primitive_dir = pyprocar.download_example(save_dir='', 
                                material='MgB2',
                                code='vasp', 
                                spin_calc_type='non-spin-polarized',
                                calc_type='primitive_bands')

.. GENERATED FROM PYTHON SOURCE LINES 29-30

importing pyprocar and specifying local data_dir

.. GENERATED FROM PYTHON SOURCE LINES 30-39

.. code-block:: default

    import os
    import pyprocar

    import numpy as np

    supercell_dir = f"{pyprocar.utils.ROOT}{os.sep}data{os.sep}examples{os.sep}MgB2_unfold{os.sep}vasp{os.sep}non-spin-polarized{os.sep}supercell_bands"
    primitive_dir = f"{pyprocar.utils.ROOT}{os.sep}data{os.sep}examples{os.sep}MgB2_unfold{os.sep}vasp{os.sep}non-spin-polarized{os.sep}primitive_bands"









.. GENERATED FROM PYTHON SOURCE LINES 40-42

Plotting primitive bands
+++++++++++++++++++++++++++++++++++++++

.. GENERATED FROM PYTHON SOURCE LINES 42-50

.. code-block:: default


    pyprocar.bandsplot(
                    code='vasp', 
                    mode='plain',
                    elimit=[-15,5],
                    dirname=primitive_dir)





.. image-sg:: /examples/00-band_structure/images/sphx_glr_plot_unfolding_001.png
   :alt: plot unfolding
   :srcset: /examples/00-band_structure/images/sphx_glr_plot_unfolding_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


                --------------------------------------------------------
                There are additional plot options that are defined in a configuration file. 
                You can change these configurations by passing the keyword argument to the function
                To print a list of plot options set print_plot_opts=True

                Here is a list modes : plain , parametric , scatter , atomic , overlay , overlay_species , overlay_orbitals , ipr
                --------------------------------------------------------
            

    (<Figure size 900x600 with 1 Axes>, <Axes: xlabel='K vector', ylabel='E - E$_F$ (eV)'>)



.. GENERATED FROM PYTHON SOURCE LINES 51-58

Unfolding of the supercell bands
+++++++++++++++++++++++++++++++++++++++

Here we do unfolding of the supercell bands. In this calculation, 
the POSCAR and KPOINTS will be different from the primitive cell
For the POSCAR, we create a 2 2 2 supercell from the primitive.
For the KPOINTS, the paths need to be changed to reflect the change in the unitcell

.. GENERATED FROM PYTHON SOURCE LINES 58-67

.. code-block:: default


    pyprocar.unfold(
            code='vasp',
            mode='plain',
            unfold_mode='both',
            dirname= supercell_dir,
            elimit=[-15,5],
            supercell_matrix=np.diag([2, 2, 2]))
        
        

.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "Z:\Research Projects\pyprocar\examples\00-band_structure\plot_unfolding.py", line 59, in <module>
        pyprocar.unfold(
      File "z:\research projects\pyprocar\pyprocar\scripts\scriptUnfold.py", line 109, in unfold
        ebs_plot.ebs.unfold(transformation_matrix=transformation_matrix, structure=structure)
      File "z:\research projects\pyprocar\pyprocar\core\ebs.py", line 913, in unfold
        self.update_weights(uf.weights)
      File "z:\research projects\pyprocar\pyprocar\utils\unfolder.py", line 162, in weights
        weights[iqpt, ifreq, ispin] = self._get_weight(
      File "z:\research projects\pyprocar\pyprocar\utils\unfolder.py", line 145, in _get_weight
        np.vdot(evec, evec[ind])
      File "<__array_function__ internals>", line 200, in vdot
    ValueError: cannot reshape array of size 81 into shape (216,)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  19.254 seconds)


.. _sphx_glr_download_examples_00-band_structure_plot_unfolding.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_unfolding.py <plot_unfolding.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_unfolding.ipynb <plot_unfolding.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
