
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\00-band_structure\plot_bandsplot_configurations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_00-band_structure_plot_bandsplot_configurations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-band_structure_plot_bandsplot_configurations.py:


.. _ref_plot_bandsplot_configuration:

Plotting with Configurations in `pyprocar`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This example illustrates how to utilize various configurations for plotting band structures using the `pyprocar` package. It provides a structured way to explore and demonstrate different configurations for the `bandsplot` function.

Preparation
-----------
Before diving into plotting, we need to download the example files. Use the following code to do this. Once downloaded, specify the `data_dir` to point to the location of the downloaded data.

.. code-block::
   :caption: Downloading example

    import pyprocar

    data_dir = pyprocar.download_example(
                                save_dir='', 
                                material='Fe',
                                code='vasp', 
                                spin_calc_type='spin-polarized-colinear',
                                calc_type='bands'
                               )

.. GENERATED FROM PYTHON SOURCE LINES 26-36

.. code-block:: default


    import os
    import pyprocar

    # Define the directory containing the example data

    data_dir = f"{pyprocar.utils.ROOT}{os.sep}data{os.sep}examples{os.sep}Fe{os.sep}vasp{os.sep}spin-polarized-colinear{os.sep}bands"
    code='vasp'
    spins=[0,1]








.. GENERATED FROM PYTHON SOURCE LINES 37-52

.. code-block:: default


    # Section 1: Locating and Printing Configuration Files
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates where the configuration files are located in the package.
    # It also shows how to print the configurations by setting print_plot_ops=True.
    #

    # Path to the configuration files in the package
    config_path = os.path.join(pyprocar.__path__[0], 'cfg')
    print(f"Configuration files are located at: {config_path}")

    # Print the configurations
    pyprocar.bandsplot(code=code,dirname=data_dir,print_plot_opts=True)



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "Z:\Research Projects\pyprocar\examples\00-band_structure\plot_bandsplot_configurations.py", line 50, in <module>
        pyprocar.bandsplot(code=code,dirname=data_dir,print_plot_opts=True)
      File "z:\research projects\pyprocar\pyprocar\scripts\scriptBandsplot.py", line 103, in bandsplot
        parser = io.Parser(code = code, dir = dirname)
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 27, in __init__
        self.parse()
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 49, in parse
        self.parse_vasp()
      File "z:\research projects\pyprocar\pyprocar\io\parser.py", line 232, in parse_vasp
        poscar = vasp.Poscar(poscar,rotations = None)
      File "z:\research projects\pyprocar\pyprocar\io\vasp.py", line 284, in __init__
        self.structure = Structure(
      File "z:\research projects\pyprocar\pyprocar\core\structure.py", line 73, in __init__
        self.get_wyckoff_positions()
      File "z:\research projects\pyprocar\pyprocar\core\structure.py", line 340, in get_wyckoff_positions
        spglib.get_symmetry_dataset(self._spglib_cell, symprec)["wyckoffs"]
    TypeError: 'NoneType' object is not subscriptable




.. GENERATED FROM PYTHON SOURCE LINES 53-75

.. code-block:: default


    # Section 2: Changing cmap, clim, and Fermi line properties in Parametric Mode
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates how to change the colormap (cmap), color limits (clim),
    # and Fermi line properties (color, linestyle, and linewidth) in parametric mode.
    #

    pyprocar.bandsplot(
        code=code,
        dirname=data_dir,
        mode='parametric',
        atoms=[0],
        orbitals=[4,5,6,7,8],
        cmap='viridis',  # Colormap
        clim=[0, 1],  # Color limits
        fermi_color='red',  # Fermi line color
        fermi_linestyle='--',  # Fermi line linestyle
        fermi_linewidth=2.0  # Fermi line linewidth
    )



.. GENERATED FROM PYTHON SOURCE LINES 76-93

.. code-block:: default


    # Section 3: Setting Marker and Marker Size in Scatter Mode
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates how to set the marker style and marker size in scatter mode.
    #

    pyprocar.bandsplot(
        code=code,
        dirname=data_dir,
        mode='scatter',
        atoms=[0],
        orbitals=[4,5,6,7,8],
        marker=['v','o'],  # Marker style
        markersize=[10,5]  # Marker size list for the 2 spin plots
    )


.. GENERATED FROM PYTHON SOURCE LINES 94-111

.. code-block:: default


    # Section 4: Setting the Figure Size and DPI
    # ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    #
    # This section demonstrates how to set the figure size and dots per inch (DPI) for the plot.
    #

    pyprocar.bandsplot(
        code=code,
        dirname=data_dir,
        mode='scatter',
        atoms=[0],
        orbitals=[4,5,6,7,8],
        figure_size=(10, 6),  # Figure size (width, height)
        dpi=300  # Dots per inch
    )



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.096 seconds)


.. _sphx_glr_download_examples_00-band_structure_plot_bandsplot_configurations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bandsplot_configurations.py <plot_bandsplot_configurations.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bandsplot_configurations.ipynb <plot_bandsplot_configurations.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
