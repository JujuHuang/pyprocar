Search.setIndex({"docnames": ["api/cfg/band_structure", "api/cfg/band_structure_2d", "api/cfg/dos", "api/cfg/fermi_surface_2d", "api/cfg/fermi_surface_3d", "api/cfg/index", "api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_ipr", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_ipr_atom", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_speed_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.mesh_to_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ravel_array", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.savefig", "api/core/_autosummary/pyprocar.core.FermiSurface.show", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_harmonic_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.get_symmetry_operations", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_atomic_levels", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.update_config", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.load_from_data", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.parse", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.sort", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.Poscar.xyz", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscarDiff", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.add", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.change_elements", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_multiply", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.pos_sum", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.remove", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.scale_lattice", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.shift", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_modify.write", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.__init__", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.supercell", "api/pyposcar/_autosummary/pyprocar.pyposcar.poscar_supercell.write", "api/pyposcar/index", "api/pyposcar/poscar", "api/pyposcar/poscarutils", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.print_default_settings", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plot_atomic_levels", "examples/00-band_structure/plot_autobands", "examples/00-band_structure/plot_bandsplot_configurations", "examples/00-band_structure/plot_colinear", "examples/00-band_structure/plot_compare_bands", "examples/00-band_structure/plot_ipr", "examples/00-band_structure/plot_noncolinear_qe", "examples/00-band_structure/plot_noncolinear_vasp", "examples/00-band_structure/plot_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plot_colinear_dos", "examples/01-dos/plot_dosplot_configurations", "examples/01-dos/plot_noncolinear_dos_qe", "examples/01-dos/plot_noncolinear_dos_vasp", "examples/01-dos/plot_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plot_bandsdosplot", "examples/02-bands_dos/plot_bandsdosplot_configurations", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plot_fermi2d", "examples/03-fermi2d/plot_fermi2d_configurations", "examples/03-fermi2d/plot_fermi2d_spin_texture", "examples/03-fermi2d/plot_rashba_spin_spliting", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plot_de_hass_van_alphen", "examples/04-fermi3d/plot_fermi3d_configurations", "examples/04-fermi3d/plot_fermi3d_cross_section", "examples/04-fermi3d/plot_fermi3d_isoslider", "examples/04-fermi3d/plot_fermi3d_isovalue_gif", "examples/04-fermi3d/plot_fermi3d_plain", "examples/04-fermi3d/plot_fermi3d_spin-polarized", "examples/04-fermi3d/plot_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plot_2dkmesh_generation", "examples/05-other/plot_bandgap", "examples/05-other/plot_ebs", "examples/05-other/plot_kpath_generation", "examples/05-other/sg_execution_times", "examples/06-PyPoscar/index", "examples/06-PyPoscar/plot_clusters_pyposcar", "examples/06-PyPoscar/plot_finding_defects_pyposcar", "examples/06-PyPoscar/plot_rdf_cutoff_pyposcar", "examples/06-PyPoscar/plot_subsitution_pyposcar", "examples/06-PyPoscar/plot_utils_pyposcar", "examples/06-PyPoscar/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\cfg\\band_structure.rst", "api\\cfg\\band_structure_2d.rst", "api\\cfg\\dos.rst", "api\\cfg\\fermi_surface_2d.rst", "api\\cfg\\fermi_surface_3d.rst", "api\\cfg\\index.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_ipr.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_ipr_atom.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_speed_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.mesh_to_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ravel_array.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.savefig.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.show.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_harmonic_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.get_symmetry_operations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_atomic_levels.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.update_config.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.load_from_data.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.parse.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.sort.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.Poscar.xyz.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscarDiff.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.add.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.change_elements.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_multiply.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.pos_sum.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.remove.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.scale_lattice.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.shift.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_modify.write.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.__init__.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.supercell.rst", "api\\pyposcar\\_autosummary\\pyprocar.pyposcar.poscar_supercell.write.rst", "api\\pyposcar\\index.rst", "api\\pyposcar\\poscar.rst", "api\\pyposcar\\poscarutils.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.print_default_settings.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plot_atomic_levels.rst", "examples\\00-band_structure\\plot_autobands.rst", "examples\\00-band_structure\\plot_bandsplot_configurations.rst", "examples\\00-band_structure\\plot_colinear.rst", "examples\\00-band_structure\\plot_compare_bands.rst", "examples\\00-band_structure\\plot_ipr.rst", "examples\\00-band_structure\\plot_noncolinear_qe.rst", "examples\\00-band_structure\\plot_noncolinear_vasp.rst", "examples\\00-band_structure\\plot_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plot_colinear_dos.rst", "examples\\01-dos\\plot_dosplot_configurations.rst", "examples\\01-dos\\plot_noncolinear_dos_qe.rst", "examples\\01-dos\\plot_noncolinear_dos_vasp.rst", "examples\\01-dos\\plot_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plot_bandsdosplot.rst", "examples\\02-bands_dos\\plot_bandsdosplot_configurations.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plot_fermi2d.rst", "examples\\03-fermi2d\\plot_fermi2d_configurations.rst", "examples\\03-fermi2d\\plot_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\plot_rashba_spin_spliting.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plot_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plot_fermi3d_configurations.rst", "examples\\04-fermi3d\\plot_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plot_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plot_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plot_fermi3d_plain.rst", "examples\\04-fermi3d\\plot_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plot_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plot_2dkmesh_generation.rst", "examples\\05-other\\plot_bandgap.rst", "examples\\05-other\\plot_ebs.rst", "examples\\05-other\\plot_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\06-PyPoscar\\index.rst", "examples\\06-PyPoscar\\plot_clusters_pyposcar.rst", "examples\\06-PyPoscar\\plot_finding_defects_pyposcar.rst", "examples\\06-PyPoscar\\plot_rdf_cutoff_pyposcar.rst", "examples\\06-PyPoscar\\plot_subsitution_pyposcar.rst", "examples\\06-PyPoscar\\plot_utils_pyposcar.rst", "examples\\06-PyPoscar\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["band structure plotting Options", "band structure 2d plotting Options", "dos plotting Options", "fermi surface 2d plotting Options", "fermi surface 3d plotting Options", "Configuration Files", "pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient", "bands_gradient_mesh", "bands_hessian", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_ipr", "ebs_ipr_atom", "ebs_sum", "fermi_speed", "fermi_speed_mesh", "fermi_velocity", "fermi_velocity_mesh", "harmonic_average_effective_mass", "harmonic_average_effective_mass_mesh", "ibz2fbz", "index_mesh", "interpolate_mesh_grid", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "mesh_to_array", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "ravel_array", "unfold", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "savefig", "show", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "extend_surface", "project_atomic_projections", "project_fermi_speed", "project_fermi_velocity", "project_harmonic_effective_mass", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "get_symmetry_operations", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_atomic_levels", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "update_config", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.pyposcar.Poscar", "__init__", "add", "load_from_data", "parse", "remove", "sort", "write", "xyz", "poscarDiff", "pyprocar.pyposcar.poscar_modify", "__init__", "add", "change_elements", "pos_multiply", "pos_sum", "remove", "scale_lattice", "shift", "write", "pyprocar.pyposcar.poscar_supercell", "__init__", "supercell", "write", "PyPoscar API", "Poscar", "poscarUtils", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "print_default_settings", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting Atomic Levels", "Autobands plotting", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting band structure", "Comparing band structures", "Plotting Inverse participation ratio", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi2d noncolinear", "Plotting rashba spin splitting", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting with Configurations in <cite>pyprocar</cite>", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "PyPoscar", "Visualizing Clusters in Bi2Se3 Slab", "Finding defects in a POSCAR file", "Analyzing Radial Distribution Functions (RDF)", "Substituting Atoms in a POSCAR File", "Modifying a POSCAR File: Scaling, Supercells, and Defects", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"descript": [0, 1, 2, 3, 4, 5, 80, 86, 213, 354, 364, 375, 381, 412], "The": [0, 1, 2, 3, 4, 5, 9, 12, 15, 16, 17, 18, 25, 30, 31, 32, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 63, 67, 68, 71, 72, 80, 83, 84, 85, 88, 89, 90, 92, 93, 94, 98, 99, 101, 102, 103, 106, 107, 108, 110, 111, 117, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 147, 150, 156, 159, 163, 173, 174, 176, 177, 181, 182, 184, 186, 187, 189, 190, 192, 193, 198, 200, 228, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 246, 247, 248, 250, 251, 255, 257, 260, 262, 263, 264, 272, 281, 282, 285, 286, 293, 294, 301, 303, 304, 307, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 347, 348, 350, 352, 353, 354, 357, 360, 363, 364, 367, 370, 371, 375, 380, 381, 391, 392, 393, 396, 397, 398, 400, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "line": [0, 2, 3, 4, 6, 237, 242, 257, 293, 354, 357, 360, 364, 367, 371, 375, 381, 382, 393, 398, 403, 405, 415, 417, 421], "valu": [0, 1, 2, 3, 4, 15, 16, 72, 80, 127, 129, 132, 134, 135, 136, 176, 189, 243, 294, 322, 323, 325, 326, 327, 328, 353, 354, 364, 375, 376, 381, 384, 398, 409, 410, 412, 414, 415], "blue": [0, 2, 3, 237, 240, 279, 327, 354, 357, 364, 374, 375, 376, 386, 390, 392, 393, 409, 415, 421], "red": [0, 2, 3, 327, 354, 357, 364, 371, 375, 376, 386, 393, 415], "black": [0, 1, 2, 4, 269, 354, 364, 381, 396, 397, 398, 399, 400, 411], "colormap": [0, 1, 2, 3, 4, 127, 327, 354, 364, 371, 375, 381, 411, 415], "us": [0, 1, 2, 3, 4, 5, 6, 61, 63, 72, 80, 86, 122, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 147, 154, 163, 173, 176, 189, 199, 213, 217, 218, 221, 227, 228, 229, 230, 231, 232, 233, 234, 277, 281, 282, 283, 285, 286, 289, 291, 310, 311, 313, 321, 322, 325, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 350, 352, 353, 354, 357, 360, 364, 367, 371, 374, 375, 376, 377, 380, 381, 382, 390, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "jet": [0, 1, 2, 3, 4, 63, 278, 327, 354, 364, 375, 381, 386, 409, 411, 415], "scale": [0, 1, 2, 3, 4, 285, 295, 299, 302, 353, 354, 364, 375, 381, 392, 395, 401, 402], "bar": [0, 1, 2, 3, 4, 321, 327, 354, 364, 375, 381, 415], "none": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 18, 19, 32, 57, 61, 63, 64, 67, 71, 74, 80, 81, 87, 88, 96, 97, 111, 122, 123, 125, 127, 143, 144, 145, 146, 150, 151, 153, 159, 182, 183, 184, 185, 189, 190, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 275, 276, 277, 278, 279, 280, 286, 287, 289, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 354, 364, 374, 375, 376, 377, 380, 381, 392, 403, 409, 410, 414, 415, 416, 421], "fermi": [0, 1, 2, 5, 18, 33, 34, 36, 63, 68, 71, 72, 73, 76, 132, 133, 134, 135, 140, 145, 159, 178, 184, 237, 257, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 337, 341, 347, 354, 357, 364, 371, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 390, 403, 406, 407, 408, 409, 413, 414, 416, 417, 421], "dot": [0, 2, 237, 354, 364, 371, 375, 396, 397, 398, 399, 400], "1": [0, 1, 2, 3, 4, 9, 10, 11, 12, 18, 32, 62, 72, 73, 80, 81, 86, 120, 122, 153, 159, 184, 185, 190, 191, 237, 241, 242, 244, 245, 278, 285, 301, 303, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 367, 370, 371, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 410, 414, 415, 416, 417, 421], "If": [0, 2, 67, 176, 177, 235, 255, 285, 289, 294, 303, 324, 325, 327, 350, 354, 364, 382, 403, 404, 409, 410, 412, 415, 416], "true": [0, 1, 2, 3, 4, 12, 32, 57, 87, 88, 141, 142, 174, 175, 189, 215, 243, 278, 287, 292, 297, 298, 299, 300, 301, 303, 304, 308, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 325, 327, 329, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 398, 399, 400, 409, 410, 412, 414, 415, 419, 421], "shown": [0, 2, 325, 354, 364], "fals": [0, 1, 2, 3, 4, 18, 57, 90, 285, 286, 287, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 348, 354, 356, 364, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 392, 396, 397, 399, 400, 409, 410, 411, 414, 415, 416, 421], "which": [0, 2, 67, 80, 126, 153, 325, 326, 327, 341, 348, 350, 352, 353, 354, 357, 360, 364, 367, 386, 403, 408, 409, 413, 414, 415, 418, 421], "axi": [0, 1, 2, 4, 68, 303, 325, 354, 364, 381, 414], "both": [0, 2, 294, 325, 353, 354, 357, 364, 371, 403, 406, 407, 409, 412, 421], "should": [0, 1, 2, 4, 9, 32, 90, 128, 188, 208, 299, 300, 302, 304, 324, 325, 354, 364, 381, 391, 403, 408, 409, 410, 414, 416, 421], "drawn": [0, 2, 354, 364], "grei": [0, 2, 354, 364, 398], "solid": [0, 2, 3, 80, 354, 364, 375], "draw": [0, 2, 237, 257, 354, 364], "major": [0, 2, 272, 354, 357, 364, 403], "minor": [0, 2, 272, 354, 364], "uparrow": [0, 2, 354, 364, 412, 417], "downarrow": [0, 2, 354, 364, 412, 417], "dash": [0, 2, 3, 354, 364, 375], "0": [0, 1, 2, 3, 4, 9, 11, 12, 57, 72, 73, 80, 86, 120, 122, 153, 188, 190, 191, 257, 279, 285, 290, 294, 298, 301, 303, 315, 316, 325, 326, 327, 329, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 408, 409, 412, 414, 415, 416, 417, 418, 419, 421], "style": [0, 1, 2, 4, 237, 354, 360, 364, 367, 381], "point": [0, 1, 2, 4, 9, 39, 40, 53, 55, 57, 80, 82, 83, 84, 85, 88, 111, 133, 135, 136, 141, 181, 188, 260, 262, 263, 264, 277, 321, 325, 327, 328, 352, 353, 354, 357, 364, 371, 375, 381, 390, 393, 396, 397, 398, 399, 400, 406, 407, 411, 413, 414, 415, 417, 421], "o": [0, 2, 279, 280, 325, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 408, 409, 412, 415], "v": [0, 2, 80, 81, 325, 327, 354, 364, 371, 408, 409, 412, 415], "d": [0, 2, 9, 11, 20, 21, 22, 23, 35, 36, 325, 327, 354, 355, 364, 403, 408, 409, 411, 412, 415], "size": [0, 1, 2, 3, 4, 57, 61, 63, 71, 90, 128, 279, 280, 288, 298, 307, 321, 327, 354, 364, 371, 375, 381, 382, 393, 400, 415, 416, 421], "2": [0, 1, 2, 3, 9, 11, 12, 31, 41, 72, 80, 86, 153, 325, 327, 347, 348, 350, 352, 353, 354, 357, 358, 359, 360, 364, 367, 371, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 396, 397, 398, 399, 400, 403, 414, 415, 416, 417, 421], "file": [0, 2, 95, 143, 145, 147, 149, 150, 159, 163, 166, 173, 174, 176, 177, 178, 181, 182, 184, 190, 228, 229, 231, 232, 233, 234, 265, 285, 286, 289, 292, 293, 294, 304, 308, 310, 311, 313, 320, 321, 324, 325, 327, 329, 330, 335, 341, 343, 344, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 401, 402, 403, 406, 407, 408, 409, 410, 412, 415, 416, 417, 419, 421], "name": [0, 2, 18, 93, 128, 129, 150, 159, 163, 247, 249, 250, 252, 265, 267, 269, 270, 287, 292, 293, 304, 308, 313, 320, 321, 322, 323, 327, 354, 364, 403, 408, 409, 415, 416, 421], "save": [0, 2, 3, 69, 163, 285, 308, 321, 322, 323, 325, 326, 327, 348, 354, 364, 374, 375, 376, 377, 397, 400, 409, 411, 414, 415, 421], "figur": [0, 2, 3, 325, 341, 353, 354, 364, 371, 374, 375, 376, 377, 380, 409, 411, 421], "null": [0, 2, 354, 364], "displai": [0, 2, 352, 354, 364, 399, 403, 411], "weight": [0, 2, 18, 19, 61, 62, 132, 135, 218, 260, 262, 263, 264, 347, 354, 364, 413, 416, 417, 421], "width": [0, 2, 260, 262, 264, 354, 364, 393, 415, 421], "height": [0, 2, 354, 364], "inch": [0, 2, 354, 364, 371, 375], "9": [0, 2, 278, 279, 344, 352, 354, 357, 358, 364, 365, 375, 376, 377, 392, 396, 408, 417], "6": [0, 1, 2, 4, 9, 12, 153, 325, 327, 345, 352, 354, 355, 356, 359, 360, 363, 364, 366, 367, 370, 371, 374, 375, 376, 377, 381, 385, 386, 387, 390, 393, 396, 399, 403, 408, 409, 411, 415, 417, 418], "resolut": [0, 2, 354, 357, 364], "per": [0, 1, 2, 4, 154, 286, 291, 354, 364, 371, 375, 381], "": [0, 2, 9, 11, 12, 140, 153, 290, 298, 325, 327, 344, 352, 353, 354, 364, 380, 392, 393, 396, 397, 398, 400, 403, 408, 412, 414, 415, 416, 417], "control": [1, 3, 4, 5, 72, 327, 347, 357, 375, 381, 403, 415], "surfac": [1, 5, 6, 63, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 86, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 237, 313, 314, 315, 316, 317, 318, 326, 327, 337, 341, 353, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 402, 403, 406, 407, 408, 409, 414, 417], "color": [1, 4, 57, 63, 71, 122, 127, 128, 237, 240, 260, 262, 264, 269, 279, 321, 326, 327, 352, 353, 354, 356, 360, 364, 367, 371, 374, 375, 381, 390, 392, 393, 396, 397, 398, 399, 400, 408, 409, 411, 412, 414, 415, 421], "spin": [1, 2, 3, 4, 9, 12, 17, 32, 56, 63, 71, 77, 79, 133, 147, 153, 156, 240, 241, 242, 243, 244, 245, 255, 256, 260, 262, 263, 264, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 341, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 388, 390, 391, 392, 393, 402, 403, 406, 407, 410, 412, 413, 415, 417, 421], "polar": [1, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 364, 368, 370, 371, 374, 379, 380, 381, 383, 384, 385, 388, 391, 392, 393, 402, 408, 409, 410, 417, 421], "opac": [1, 4, 354, 364, 381], "how": [1, 4, 57, 88, 140, 327, 348, 352, 354, 364, 371, 375, 379, 381, 388, 397, 399, 402, 403, 415], "mani": [1, 4, 88, 327, 381, 403, 408, 409, 415, 416], "zone": [1, 4, 6, 57, 80, 130, 135, 327, 381, 410, 413, 414, 415, 421], "gener": [1, 4, 6, 80, 130, 134, 135, 136, 139, 143, 305, 309, 311, 324, 325, 326, 327, 328, 340, 341, 342, 344, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 406, 407, 410, 412, 414, 415, 416, 417], "thi": [1, 4, 5, 6, 9, 11, 14, 18, 31, 41, 42, 57, 61, 63, 68, 71, 72, 80, 86, 122, 125, 134, 135, 136, 139, 140, 141, 143, 145, 147, 149, 153, 163, 166, 194, 207, 208, 209, 210, 215, 221, 226, 227, 230, 283, 289, 291, 298, 304, 306, 307, 309, 313, 321, 323, 324, 325, 326, 327, 329, 330, 341, 344, 346, 348, 350, 352, 353, 354, 356, 357, 364, 371, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 398, 399, 400, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "i": [1, 4, 5, 12, 14, 18, 20, 21, 22, 23, 24, 31, 33, 34, 35, 36, 37, 38, 42, 58, 59, 61, 62, 63, 71, 72, 80, 111, 120, 122, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 147, 149, 163, 173, 188, 208, 215, 228, 229, 230, 231, 232, 233, 234, 235, 240, 255, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 321, 323, 324, 325, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421], "list": [1, 2, 4, 6, 7, 12, 18, 19, 20, 22, 30, 31, 32, 33, 35, 37, 40, 47, 63, 64, 68, 71, 72, 73, 74, 80, 81, 82, 86, 88, 93, 94, 96, 100, 113, 118, 122, 124, 126, 128, 135, 138, 147, 149, 153, 154, 157, 158, 160, 161, 162, 165, 167, 169, 170, 171, 202, 216, 225, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 255, 256, 259, 260, 262, 263, 264, 268, 269, 271, 272, 286, 288, 290, 295, 297, 298, 299, 300, 301, 303, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 329, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 396, 397, 399, 400, 403, 409, 410, 412, 413, 414, 415, 416], "direct": [1, 4, 48, 49, 50, 72, 74, 80, 82, 83, 84, 85, 285, 286, 287, 288, 292, 297, 299, 300, 302, 303, 304, 325, 327, 328, 381, 390, 399, 403, 408, 409, 410, 413, 414, 415, 416], "ex": [1, 4, 381], "high": [1, 4, 72, 295, 296, 327, 352, 353, 357, 381, 409, 410, 415], "project": [1, 3, 4, 9, 10, 11, 18, 19, 30, 31, 32, 39, 58, 59, 63, 71, 72, 75, 77, 78, 79, 131, 132, 133, 135, 153, 154, 155, 163, 189, 193, 199, 200, 322, 323, 325, 327, 348, 350, 352, 354, 355, 357, 358, 359, 360, 363, 364, 365, 366, 367, 374, 375, 381, 386, 403, 406, 407, 410, 411, 412, 413, 415, 416, 417], "algorithmus": [1, 4, 381], "either": [1, 4, 381, 403], "normal": [1, 4, 72, 73, 122, 127, 323, 327, 381, 403, 414, 415], "interpol": [1, 4, 9, 41, 68, 71, 80, 86, 134, 135, 150, 159, 184, 190, 322, 323, 325, 327, 381, 409, 415], "factor": [1, 4, 9, 72, 80, 150, 159, 184, 190, 285, 295, 299, 300, 302, 323, 325, 327, 381, 392, 400, 415, 421], "wirefram": [1, 4, 381, 415], "brillouin": [1, 4, 6, 57, 80, 130, 135, 327, 381, 410, 414, 415, 421], "3": [1, 3, 4, 6, 9, 11, 12, 18, 20, 21, 22, 23, 25, 35, 36, 44, 45, 61, 80, 96, 122, 124, 153, 287, 288, 299, 300, 325, 327, 347, 352, 354, 355, 357, 371, 374, 375, 376, 377, 380, 381, 392, 393, 396, 397, 399, 400, 403, 405, 414, 415, 416, 417, 421], "5": [1, 4, 9, 11, 12, 80, 107, 108, 109, 110, 122, 153, 189, 325, 327, 345, 348, 350, 354, 355, 356, 357, 359, 360, 363, 364, 366, 367, 371, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 390, 396, 397, 398, 399, 400, 403, 408, 409, 411, 415, 417, 418, 421], "linewidth": [1, 4, 237, 278, 354, 364, 375, 381], "textur": [1, 3, 4, 71, 77, 79, 133, 314, 315, 316, 317, 318, 327, 375, 377, 381, 390, 403, 408, 409, 415, 417], "ax": [1, 3, 4, 235, 236, 255, 256, 277, 278, 279, 280, 321, 322, 323, 325, 352, 356, 357, 375, 381, 398, 409, 411, 421], "limit": [1, 268, 271, 325, 352, 354, 364, 371, 375, 381, 403, 409], "energi": [1, 2, 4, 9, 10, 16, 18, 63, 67, 68, 71, 72, 131, 132, 133, 135, 145, 156, 159, 178, 184, 204, 219, 257, 277, 314, 317, 320, 321, 322, 323, 325, 326, 327, 350, 352, 353, 357, 364, 374, 375, 376, 381, 383, 384, 386, 406, 407, 409, 413, 414, 415, 417, 421], "kx": [1, 4, 48, 49, 381], "label": [1, 2, 3, 4, 18, 19, 65, 66, 88, 239, 247, 250, 259, 267, 270, 347, 348, 350, 354, 357, 364, 375, 381, 393, 396, 397, 398, 399, 400, 409, 412, 413, 417, 421], "ky": [1, 4, 50, 381], "kz": [1, 4, 381], "linewdith": [1, 4, 381], "th": [1, 4, 70, 381, 403], "colorbar": [1, 2, 4, 364, 381], "scalar": [1, 4, 25, 26, 122, 123, 128, 134, 135, 136, 381, 392, 396, 397, 399, 400], "ital": [1, 4, 381], "bold": [1, 4, 381], "titl": [1, 4, 153, 266, 321, 323, 353, 354, 364, 381, 392, 396, 397, 398, 399, 400, 403, 412, 414, 415, 421], "font": [1, 4, 364, 381], "4": [1, 4, 9, 11, 12, 31, 57, 153, 325, 327, 352, 354, 355, 356, 357, 359, 360, 363, 364, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 385, 386, 387, 390, 392, 393, 396, 399, 400, 403, 408, 411, 415, 417, 421], "x": [1, 2, 3, 4, 71, 80, 82, 83, 129, 247, 248, 267, 268, 269, 297, 299, 303, 325, 328, 344, 345, 347, 348, 364, 375, 376, 377, 381, 390, 398, 405, 409, 414, 415, 416, 417], "posit": [1, 4, 86, 94, 110, 249, 252, 269, 285, 287, 288, 295, 297, 299, 300, 303, 308, 327, 381, 382, 396, 397, 398, 399, 400, 415], "01": [1, 4, 294, 326, 368, 378, 381, 388, 400, 414], "y": [1, 2, 3, 4, 71, 80, 82, 84, 129, 250, 251, 270, 271, 272, 297, 299, 303, 325, 328, 364, 375, 376, 377, 381, 390, 393, 398, 399, 414, 415, 416, 417], "outlin": [1, 4, 381], "white": [1, 4, 327, 381, 415, 419], "background": [1, 4, 327, 381, 415], "36": [1, 4, 381, 393, 396, 397, 399, 400, 421], "number": [1, 4, 9, 12, 15, 16, 17, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 72, 83, 84, 85, 92, 100, 107, 108, 114, 115, 128, 160, 169, 241, 242, 244, 245, 286, 299, 300, 314, 317, 325, 327, 328, 357, 381, 392, 403, 409, 411, 413, 415, 417, 418, 419], "orbit": [1, 4, 9, 11, 12, 13, 18, 32, 54, 71, 153, 241, 242, 243, 244, 245, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 327, 353, 354, 356, 358, 359, 360, 363, 364, 365, 366, 367, 371, 374, 375, 376, 377, 381, 385, 386, 392, 406, 407, 411, 412, 413, 414, 415, 417, 421], "05": [1, 4, 107, 108, 109, 110, 189, 329, 368, 381, 388, 393, 396, 397, 399, 400], "step": [1, 4, 176, 202, 206, 209, 216, 224, 225, 348, 350, 381, 396, 397, 399, 400, 403], "show": [1, 4, 57, 315, 316, 317, 318, 321, 322, 323, 325, 327, 347, 348, 350, 354, 356, 364, 375, 379, 381, 382, 383, 385, 386, 387, 388, 390, 392, 393, 397, 398, 399, 402, 403, 409, 411, 412, 414, 415, 421], "larg": [1, 357, 398, 410, 416], "clip": [1, 80], "term": [1, 307, 380, 403], "k": [1, 25, 31, 53, 57, 133, 135, 137, 141, 176, 188, 267, 277, 340, 341, 345, 347, 352, 356, 357, 390, 398, 406, 407, 410, 411, 413, 414, 415, 417, 421], "_": [1, 370, 371, 374, 375, 376, 377, 390, 393, 417], "aa": [1, 3, 375], "ev": [1, 2, 270, 352, 364, 383, 384, 391, 414], "add": [1, 3, 65, 66, 72, 277, 285, 291, 295, 300, 348, 375, 399, 403], "plane": [1, 133, 135, 326, 327, 382, 390, 408, 409, 414, 415], "level": [1, 63, 68, 71, 257, 277, 285, 286, 295, 296, 309, 310, 321, 327, 351, 353, 357, 361, 377, 383, 384, 402, 408, 409, 415, 416], "25": [1, 350, 357, 361, 380, 384, 396, 397, 400], "text": [1, 2, 194, 226, 364], "whether": [1, 4, 325, 353, 381, 403, 421], "plotter": [1, 4, 140, 281, 282, 284, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 381, 390, 392, 393, 396, 397, 399, 400], "render": [1, 4, 57, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 403, 415], "offscreen": [1, 4, 381], "caemera": [1, 4, 381], "iso": [1, 4, 326, 327, 381, 414, 415], "isoslid": [1, 4, 379, 381, 388, 402], "modern": [1, 4, 381], "slice": [1, 4, 327, 381, 415], "wheather": [1, 4, 381], "cross": [1, 4, 327, 381, 403, 415], "section": [1, 4, 140, 230, 327, 341, 344, 348, 354, 360, 364, 367, 371, 375, 381, 403, 412, 414, 415, 417], "area": [1, 4, 325, 327, 381, 382, 403, 412, 415], "green": [2, 327, 364, 415], "cyan": [2, 364], "magenta": [2, 364], "yellow": [2, 364], "orang": [2, 364, 412], "purpl": [2, 364], "brown": [2, 364], "navi": [2, 364, 374], "maroon": [2, 364], "oliv": [2, 364], "arial": [2, 364], "16": [2, 321, 327, 358, 364, 365, 377, 380, 381, 385, 388, 396, 397, 403, 408, 415], "total": [2, 9, 10, 131, 135, 155, 156, 200, 201, 286, 325, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 409, 410, 412, 416, 417], "up": [2, 9, 147, 156, 188, 294, 360, 364, 367, 405, 409, 412, 415, 416, 421], "down": [2, 9, 156, 360, 364, 367, 409, 412, 415, 416, 421], "program": [2, 364, 403], "print": [2, 314, 315, 316, 317, 318, 322, 325, 326, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 392, 396, 397, 398, 399, 400, 409, 414, 421], "detail": [2, 131, 132, 133, 134, 137, 138, 176, 325, 355, 358, 359, 360, 363, 364, 365, 366, 367, 393, 403, 409, 415], "inform": [2, 122, 131, 132, 135, 137, 138, 141, 147, 150, 159, 166, 173, 176, 209, 216, 218, 221, 222, 292, 341, 350, 356, 364, 375, 376, 390, 392, 393, 403, 408, 409, 412, 413, 415, 416, 417], "rang": [2, 314, 317, 327, 352, 364, 383, 384, 390, 396, 415, 416, 421], "stack": [2, 243, 244, 245, 325, 363, 364, 365, 366, 370, 371, 417], "mode": [2, 68, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 327, 341, 347, 348, 350, 353, 354, 356, 357, 364, 371, 375, 376, 377, 380, 381, 382, 403, 408, 409, 411, 414, 415, 417, 421], "boolean": [3, 14, 18, 42, 57, 90, 111, 174, 189, 237, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 364, 375, 409, 410, 413, 414, 415], "legend": [3, 354, 364, 375, 398], "arrow": [3, 4, 71, 326, 327, 375, 376, 381, 392, 414, 415], "repres": [3, 6, 20, 21, 22, 23, 35, 36, 96, 122, 128, 147, 195, 196, 197, 225, 243, 325, 327, 353, 375, 403, 412, 415, 421], "densiti": [3, 5, 9, 12, 31, 131, 135, 140, 150, 155, 156, 163, 200, 230, 235, 240, 241, 283, 321, 325, 332, 336, 341, 346, 347, 364, 368, 371, 375, 406, 407, 408, 409, 416, 417, 420], "10": [3, 325, 327, 354, 355, 356, 358, 364, 365, 371, 375, 376, 380, 392, 393, 396, 397, 403, 408, 415, 416, 417], "z": [3, 68, 71, 80, 82, 85, 129, 297, 299, 303, 326, 328, 352, 354, 357, 364, 374, 375, 376, 377, 381, 390, 414, 415, 416, 417], "imag": [3, 80, 327, 375, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 405, 409, 415], "k_": [3, 375, 390], "band": [4, 5, 18, 19, 20, 21, 22, 23, 24, 39, 52, 61, 63, 64, 67, 72, 80, 88, 92, 132, 133, 135, 137, 140, 147, 163, 164, 166, 189, 193, 235, 240, 255, 261, 265, 266, 275, 276, 281, 283, 284, 314, 315, 316, 317, 318, 320, 321, 322, 326, 327, 329, 333, 334, 338, 339, 341, 345, 347, 352, 353, 354, 357, 361, 367, 370, 371, 375, 377, 380, 381, 386, 391, 393, 406, 407, 408, 412, 414, 415, 416, 417, 418], "pyprocar": [5, 31, 61, 89, 90, 119, 120, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 152, 153, 154, 157, 158, 161, 162, 165, 167, 170, 171, 189, 198, 199, 228, 229, 230, 231, 232, 233, 234, 281, 282, 283, 284, 294, 309, 310, 311, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "cfg": [5, 140, 354, 364, 375, 381], "help": [5, 61, 63, 133, 135, 150, 346, 348, 350, 403, 404, 416, 421], "custom": [5, 322, 323, 371, 375, 381, 403, 409], "plot": [5, 31, 57, 63, 65, 66, 69, 70, 71, 116, 133, 135, 137, 140, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 273, 275, 277, 281, 282, 283, 284, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 327, 329, 332, 333, 334, 336, 337, 338, 339, 341, 345, 351, 356, 361, 362, 368, 372, 373, 378, 379, 380, 388, 392, 398, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 419], "option": [5, 9, 12, 18, 32, 57, 61, 63, 68, 71, 72, 74, 88, 95, 107, 108, 109, 110, 111, 120, 125, 127, 129, 147, 150, 153, 159, 163, 174, 176, 177, 182, 184, 189, 190, 235, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 344, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 409, 410, 414, 415, 416, 421], "our": [5, 352, 353, 357, 377, 403, 404, 414], "code": [5, 140, 147, 150, 151, 213, 230, 312, 313, 320, 321, 322, 323, 325, 326, 327, 344, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 420, 421], "base": [5, 290, 298, 327, 353, 393, 403, 409, 413, 415], "each": [5, 9, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 58, 59, 62, 80, 82, 113, 122, 131, 135, 202, 212, 216, 259, 260, 262, 263, 264, 285, 286, 295, 299, 300, 303, 325, 327, 353, 357, 396, 398, 403, 408, 409, 410, 411, 412, 413, 415, 416, 417], "yaml": 5, "contain": [5, 8, 9, 63, 80, 88, 126, 145, 268, 271, 321, 325, 326, 327, 341, 350, 352, 353, 354, 357, 364, 374, 376, 399, 403, 409, 414, 415, 416], "set": [5, 68, 80, 127, 128, 129, 180, 210, 247, 248, 249, 250, 251, 252, 266, 267, 268, 269, 270, 271, 272, 285, 324, 325, 326, 327, 344, 345, 347, 348, 350, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 393, 397, 398, 406, 407, 408, 409, 410, 411, 412, 414, 415, 419, 421], "relat": [5, 291, 392, 413, 418, 420], "properti": [5, 14, 15, 16, 17, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 82, 83, 84, 85, 86, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 117, 118, 121, 124, 126, 152, 154, 155, 156, 157, 158, 160, 161, 162, 165, 167, 169, 170, 171, 176, 178, 180, 181, 186, 187, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 295, 296, 327, 354, 364, 371, 380, 381, 382, 383, 384, 385, 386, 387, 403, 415], "below": [5, 353, 355, 356, 358, 359, 360, 363, 365, 366, 367, 370, 371, 374, 376, 377, 380, 382, 383, 384, 385, 386, 387, 393, 403, 408, 409, 411], "ar": [5, 11, 57, 61, 67, 71, 80, 88, 122, 135, 156, 163, 226, 243, 283, 285, 287, 294, 295, 297, 303, 322, 323, 325, 326, 327, 341, 345, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 396, 397, 398, 400, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "some": [5, 147, 188, 327, 341, 348, 353, 392, 403, 408, 415], "kei": [5, 156, 176, 243, 294, 322, 323, 325, 353, 403, 409, 415], "you": [5, 140, 286, 308, 327, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 398, 399, 400, 403, 404, 405, 412, 413, 415, 416, 418, 420, 421], "might": [5, 80, 403, 405, 412], "find": [5, 61, 67, 68, 71, 80, 86, 178, 180, 181, 320, 353, 389, 394, 395, 398, 401, 402, 403, 409, 421], "chapter": [5, 135, 283, 309], "intend": [5, 135, 140, 283, 309, 403], "describ": [5, 135, 283, 309], "data": [5, 135, 140, 176, 283, 285, 288, 309, 313, 341, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 396, 397, 398, 399, 400, 403, 406, 407, 413, 417, 418, 420], "type": [5, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 67, 68, 72, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 135, 140, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 171, 176, 178, 180, 181, 186, 187, 192, 193, 194, 198, 199, 200, 201, 213, 217, 218, 222, 235, 237, 238, 239, 240, 246, 247, 250, 253, 255, 261, 283, 286, 294, 307, 309, 320, 322, 323, 326, 327, 328, 341, 357, 397, 400, 403, 408, 409, 414, 415], "assist": [5, 72, 135, 283], "process": [5, 135, 143, 341, 353, 370, 371, 374, 375, 376, 377, 390, 393, 403, 406, 407, 409, 414, 416, 417, 421], "electron": [5, 18, 132, 135, 140, 159, 176, 192, 195, 196, 202, 216, 235, 255, 281, 283, 310, 311, 353, 370, 371, 374, 375, 376, 377, 390, 392, 393, 403, 406, 407, 408, 409, 415, 417], "structur": [5, 18, 61, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 132, 135, 137, 140, 145, 157, 158, 163, 165, 167, 176, 184, 185, 189, 205, 207, 211, 214, 235, 236, 255, 261, 266, 275, 283, 284, 285, 309, 311, 321, 329, 333, 334, 338, 339, 341, 345, 347, 353, 354, 357, 361, 364, 370, 371, 374, 375, 376, 377, 381, 390, 391, 392, 393, 396, 398, 403, 406, 407, 408, 411, 412, 416, 417, 418, 421], "ha": [5, 80, 135, 143, 173, 174, 227, 230, 283, 309, 325, 327, 341, 344, 347, 348, 350, 356, 357, 380, 400, 403, 415, 421], "follow": [5, 9, 80, 135, 188, 230, 283, 309, 325, 327, 341, 345, 347, 348, 350, 352, 353, 354, 357, 364, 371, 375, 376, 381, 390, 393, 403, 405, 408, 409, 410, 412, 413, 415, 416, 417, 421], "band_structur": [5, 361], "yml": 5, "band_structure_2d": 5, "2d": [5, 63, 68, 71, 133, 135, 323, 326, 327, 334, 337, 339, 340, 341, 375, 376, 390, 406, 407, 415, 417], "do": [5, 15, 72, 140, 153, 154, 163, 199, 201, 235, 236, 243, 244, 245, 246, 308, 321, 325, 327, 347, 348, 350, 352, 353, 354, 357, 360, 362, 363, 364, 367, 368, 370, 371, 375, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 403, 408, 409, 411, 412, 415], "state": [5, 9, 12, 80, 131, 135, 140, 150, 155, 156, 200, 235, 240, 241, 283, 321, 325, 326, 332, 336, 341, 347, 353, 364, 368, 371, 403, 406, 407, 408, 409, 414, 417], "fermi_surface_3d": 5, "3d": [5, 41, 72, 134, 135, 314, 315, 316, 317, 318, 327, 341, 381, 406, 407, 417], "fermi_surface_2d": 5, "class": [6, 9, 18, 63, 71, 72, 80, 87, 96, 122, 131, 132, 134, 135, 136, 138, 139, 141, 143, 145, 147, 150, 163, 172, 173, 174, 176, 182, 184, 190, 235, 255, 275, 284, 285, 287, 288, 289, 292, 295, 296, 304, 305, 306, 307, 310, 311, 312, 313, 380, 381, 382, 383, 384, 385, 386, 387, 398, 403, 413, 415, 418, 420], "reciprocal_lattic": [6, 7, 18, 19, 143, 144, 159, 184, 185, 413, 420], "ndarrai": [6, 7, 9, 10, 18, 19, 20, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 57, 58, 59, 61, 62, 63, 71, 80, 81, 89, 90, 91, 110, 111, 112, 117, 119, 120, 122, 123, 128, 129, 159, 168, 181, 184, 185, 186, 187, 192, 193, 199, 217, 260, 262, 263, 264, 286, 287, 288, 298, 299, 300, 301, 302, 303, 307, 322, 323, 398, 409], "transformation_matrix": [6, 7, 57, 61, 89, 90, 120, 421], "int": [6, 7, 9, 10, 12, 15, 16, 17, 18, 19, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 68, 71, 72, 73, 74, 80, 81, 83, 84, 85, 92, 108, 114, 115, 153, 159, 160, 169, 184, 185, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 255, 256, 260, 262, 263, 264, 269, 286, 290, 298, 301, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 409, 410, 414, 415, 416], "sourc": [6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 39, 41, 47, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 95, 96, 97, 107, 108, 109, 110, 111, 116, 119, 120, 122, 123, 125, 127, 128, 129, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 159, 163, 164, 166, 168, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 188, 189, 190, 191, 194, 207, 208, 209, 210, 211, 212, 220, 222, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 409, 410, 414, 415, 416, 419, 421], "A": [6, 9, 18, 63, 67, 89, 90, 96, 111, 116, 119, 124, 126, 149, 154, 159, 174, 176, 182, 184, 189, 190, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 285, 288, 302, 307, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 345, 357, 370, 371, 374, 375, 376, 377, 380, 390, 393, 398, 403, 408, 409, 410, 414, 415, 416, 421], "object": [6, 18, 63, 72, 88, 122, 127, 152, 153, 154, 163, 177, 184, 198, 199, 213, 217, 218, 235, 255, 294, 295, 296, 297, 298, 301, 307, 311, 325, 327, 352, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 380, 381, 382, 383, 384, 385, 386, 387, 392, 403, 413, 415, 417, 418, 420], "vert": [6, 8, 80, 122, 123], "face": [6, 8, 122, 123, 124, 126, 128, 135, 139, 415], "represent": [6, 44, 45, 80, 413, 415], "calcul": [6, 8, 9, 25, 26, 32, 42, 72, 75, 76, 77, 78, 79, 80, 150, 160, 163, 169, 173, 184, 189, 195, 196, 197, 198, 203, 213, 216, 217, 218, 219, 221, 222, 227, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 341, 344, 345, 346, 347, 353, 357, 360, 367, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 398, 402, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "correspond": [6, 20, 22, 33, 35, 37, 47, 63, 80, 117, 326, 353, 403, 408, 409, 414, 416, 421], "reciproc": [6, 18, 57, 74, 117, 130, 132, 135, 145, 159, 180, 184, 350, 409, 421], "lattic": [6, 18, 39, 57, 74, 96, 97, 98, 99, 101, 102, 103, 106, 111, 112, 117, 120, 130, 132, 135, 138, 145, 159, 180, 184, 285, 286, 288, 293, 294, 295, 302, 307, 345, 350, 396, 397, 399, 409, 420, 421], "paramet": [6, 9, 12, 18, 25, 32, 39, 41, 47, 57, 61, 63, 67, 68, 71, 72, 74, 80, 88, 89, 90, 95, 96, 107, 108, 109, 110, 111, 119, 120, 122, 125, 127, 128, 129, 147, 149, 150, 153, 159, 163, 173, 174, 176, 177, 182, 184, 189, 190, 213, 227, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 348, 350, 353, 393, 403, 409, 410, 411, 412, 414, 415, 416, 419, 421], "np": [6, 9, 18, 20, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 57, 58, 59, 61, 62, 63, 71, 80, 89, 90, 91, 110, 111, 112, 117, 119, 120, 129, 159, 168, 180, 181, 184, 186, 187, 192, 193, 199, 217, 260, 262, 263, 264, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 322, 323, 325, 391, 392, 393, 396, 397, 398, 399, 400, 409, 421], "usgin": 6, "wigner": [6, 8, 417], "seitz": [6, 8, 417], "float": [6, 12, 18, 19, 30, 31, 32, 57, 67, 72, 73, 80, 81, 82, 96, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 121, 122, 124, 127, 159, 184, 185, 189, 190, 191, 237, 257, 268, 271, 272, 286, 294, 297, 299, 300, 303, 314, 315, 316, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 409, 414, 415], "ani": [6, 9, 10, 207, 210, 327, 353, 357, 403, 409, 411, 414, 415, 419], "transform": [6, 61, 80, 89, 90, 119, 352, 357, 403, 409], "appli": [6, 39, 80, 303, 313, 357, 392, 403, 408, 409, 419], "unit": [6, 121, 285, 396, 397, 399, 400], "cell": [6, 8, 80, 104, 105, 115, 118, 121, 396, 397, 399, 400, 406, 407, 415, 421], "rotat": [6, 39, 96, 97, 182, 183, 326, 374, 375, 376, 377, 392, 413, 415, 417, 420], "supercel": [6, 72, 73, 305, 306, 311, 327, 357, 381, 395, 401, 402, 415, 416, 421], "default": [6, 9, 12, 18, 32, 57, 61, 63, 68, 71, 72, 74, 80, 88, 95, 107, 108, 109, 110, 111, 120, 122, 125, 127, 129, 147, 150, 153, 159, 163, 174, 176, 177, 182, 184, 189, 190, 235, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 286, 287, 289, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 350, 353, 360, 367, 371, 376, 381, 409, 410, 412, 414, 415, 416], "method": [6, 9, 18, 57, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 87, 89, 90, 96, 111, 116, 119, 122, 141, 143, 145, 147, 149, 150, 159, 163, 166, 172, 174, 176, 177, 182, 184, 189, 190, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 285, 291, 295, 304, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318, 380, 381, 382, 383, 384, 385, 386, 387, 403, 409, 413, 417], "attribut": [6, 9, 18, 72, 80, 87, 96, 122, 150, 163, 176, 184, 190, 356, 403, 413], "brillouinzon": [7, 8, 135], "initi": [7, 73, 81, 123, 152, 177, 214, 313, 382, 392, 399, 403], "polydata": [7, 57, 73, 81, 122, 123, 135, 139, 392, 396, 397, 399, 400], "form": [8, 181, 217, 218, 396, 403, 413], "tupl": [8, 74, 86, 122, 315, 316, 327, 415], "return": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 67, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 171, 178, 180, 181, 186, 187, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 227, 235, 237, 238, 239, 240, 246, 247, 250, 253, 255, 261, 294, 307, 320, 325, 326, 327, 328, 356, 403, 414, 415], "n_vert": 8, "n_face": 8, "dtype": [9, 10], "float64": [9, 10], "interpolation_factor": [9, 10, 41, 72, 73, 80, 81, 159, 184, 185, 321, 322, 323, 325, 327, 381, 409, 415, 421], "function": [9, 41, 80, 86, 125, 143, 153, 194, 207, 208, 209, 210, 226, 230, 311, 320, 321, 322, 323, 325, 326, 327, 335, 337, 341, 344, 346, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 395, 399, 401, 402, 403, 406, 407, 409, 411, 412, 414, 415, 417, 421], "theori": [9, 325, 346, 407], "spectrum": 9, "shape": [9, 18, 20, 21, 22, 23, 24, 25, 33, 34, 35, 36, 37, 38, 40, 44, 45, 58, 59, 62, 352, 353, 354, 355, 356, 357, 358, 359, 360, 371, 374, 375, 376, 377, 380, 381, 382, 385, 386, 387, 392, 399], "n_do": 9, "element": [9, 157, 158, 161, 165, 167, 170, 207, 210, 259, 285, 286, 287, 288, 291, 294, 295, 297, 298, 325, 397, 399, 416], "etc": [9, 302, 353, 408, 409], "n_atom": [9, 18, 58, 59, 63], "n_princip": 9, "n_orbit": [9, 58, 59, 63], "n_spin": [9, 18, 23, 58, 59, 63, 131, 135], "i_princip": 9, "work": [9, 327, 370, 371, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 402, 403, 404, 409, 414, 415], "like": [9, 71, 285, 286, 298, 309, 310, 353, 403, 408, 409, 413], "princip": [9, 32, 55, 241, 242, 244, 245], "quantum": [9, 12, 32, 55, 163, 229, 230, 231, 232, 233, 241, 242, 244, 245, 346, 347, 351, 361, 362, 368, 402, 407, 408, 409, 413, 417], "n": [9, 12, 31, 80, 96, 124, 350, 357, 397, 398, 399, 400, 417, 418], "last": [9, 157, 161, 165, 170, 178, 180, 196, 203, 219, 224, 400, 409], "index": [9, 12, 40, 63, 153, 290, 298, 301, 314, 315, 316, 317, 318, 326, 353, 357, 400, 407, 408, 409, 413, 414, 416, 417], "p": [9, 11, 325, 327, 350, 355, 392, 396, 397, 398, 399, 400, 408, 412, 415, 416, 418], "i_orbit": 9, "similar": [9, 325, 327, 344, 403, 412, 415], "angular": [9, 417], "l": [9, 11, 348, 408, 409, 417, 421], "same": [9, 12, 90, 96, 128, 288, 294, 298, 307, 321, 327, 332, 341, 345, 347, 348, 350, 360, 367, 398, 403, 408, 409, 411, 412, 414, 415, 416, 417], "order": [9, 11, 12, 96, 286, 288, 301, 307, 325, 327, 393, 403, 408, 409, 411, 415], "7": [9, 12, 153, 325, 327, 354, 355, 356, 359, 360, 363, 364, 366, 367, 371, 374, 375, 376, 380, 381, 382, 385, 386, 390, 396, 397, 398, 403, 408, 409, 411, 412, 415, 417], "8": [9, 12, 153, 325, 327, 348, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 371, 374, 375, 376, 380, 381, 385, 386, 392, 396, 397, 408, 409, 411, 412, 415, 417], "py": [9, 12, 153, 325, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 405, 415, 416, 417], "pz": [9, 12, 153, 325, 327, 415, 416, 417], "px": [9, 12, 153, 325, 327, 415, 416, 417], "dxy": [9, 12, 153, 325, 327, 415, 417], "dyz": [9, 12, 153, 325, 327, 415, 417], "dz2": [9, 12, 153, 325, 327, 415, 417], "dxz": [9, 12, 153, 325, 327, 415, 417], "dx2": [9, 417], "y2": [9, 12, 80, 153, 325, 327, 328, 390, 415], "i_spin": 9, "magnet": [9, 176, 408, 409, 417], "m": [9, 11, 121, 345, 398, 408, 409, 410, 417, 421], "increas": [9, 72, 80, 327, 415, 421], "densityofst": [10, 11, 12, 13, 14, 15, 16, 17, 135, 152, 153, 154, 198, 235, 236, 283], "convert": [11, 47, 194, 396, 397, 399, 400, 417], "coupl": [11, 358, 365, 415], "uncoupl": 11, "assum": [11, 403], "coupled_orbit": 11, "j": [11, 393, 403, 408], "uncoupled_orbit": 11, "ret": [11, 12, 30, 31, 32, 207, 210, 352, 353, 354, 355, 356, 358, 359, 360, 371, 374, 375, 376, 377, 380, 381, 382, 385, 386, 387], "atom": [12, 31, 32, 51, 71, 75, 77, 78, 79, 96, 97, 100, 113, 114, 135, 138, 153, 154, 160, 163, 169, 176, 241, 242, 243, 244, 285, 286, 287, 288, 290, 291, 294, 295, 297, 298, 301, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 327, 341, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 381, 385, 386, 392, 395, 396, 397, 398, 400, 401, 402, 406, 407, 412, 413, 414, 415, 417, 420, 421], "principal_q_numb": [12, 32, 241, 242, 244, 245], "sum_noncolinear": [12, 32], "bool": [12, 14, 18, 32, 42, 57, 88, 90, 111, 174, 189, 243, 285, 286, 287, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 409, 410, 414, 415, 416], "tabl": [12, 325, 327, 415, 421], "lm": [12, 408, 409, 417], "tot": [12, 409, 417], "x2": [12, 80, 153, 325, 327, 328, 390, 415], "need": [12, 57, 143, 153, 215, 277, 286, 325, 344, 352, 353, 354, 357, 364, 371, 375, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 403, 409, 411, 412, 415, 416, 421], "sume": [12, 153], "over": [12, 25, 32, 153, 327, 403, 404, 406, 407, 412, 413, 415, 417], "count": [12, 298, 325, 327, 408, 409, 414, 415, 416], "from": [12, 71, 122, 125, 130, 135, 136, 139, 143, 145, 150, 153, 163, 176, 285, 301, 304, 321, 324, 325, 327, 353, 377, 379, 388, 390, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421], "zero": [12, 325, 327, 408, 409, 415, 417], "input": [12, 173, 176, 230, 285, 309, 310, 324, 325, 327, 330, 341, 344, 347, 348, 409, 410, 415, 419], "sum": [12, 32, 153, 295, 409, 412, 413], "string": [13, 127, 160, 169, 176, 240, 241, 242, 243, 244, 245, 259, 265, 266, 267, 270, 285, 297, 321, 322, 323, 324, 382, 409, 410], "current": [13, 61, 347, 353, 379, 380, 381, 382, 383, 384, 385, 386, 387, 402, 407, 408, 409], "basi": [13, 43, 46, 48, 49, 50, 57, 61, 303, 358, 365, 408, 413], "str": [13, 57, 63, 68, 72, 73, 80, 81, 95, 96, 107, 118, 125, 127, 128, 129, 150, 153, 159, 163, 164, 172, 173, 174, 176, 177, 182, 184, 185, 189, 190, 226, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 257, 259, 265, 266, 267, 269, 270, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 409, 410, 414, 415, 416, 419], "non": [14, 32, 42, 325, 327, 348, 350, 351, 353, 355, 356, 361, 362, 363, 368, 370, 371, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 391, 392, 393, 402, 403, 408, 409, 413, 415, 416, 417, 421], "colinear": [14, 32, 42, 324, 345, 348, 350, 351, 352, 354, 357, 360, 361, 362, 364, 367, 368, 374, 375, 376, 377, 382, 386, 387, 393, 402, 408, 409, 410, 416], "calc": [14, 215], "channel": [17, 56, 325, 357, 408, 409, 417], "kpoint": [18, 19, 20, 22, 33, 35, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 57, 61, 63, 64, 72, 88, 89, 90, 95, 132, 134, 135, 141, 142, 159, 168, 175, 184, 186, 187, 189, 218, 230, 275, 276, 313, 326, 327, 329, 347, 348, 350, 352, 357, 390, 392, 393, 409, 413, 415, 416, 417, 421], "efermi": [18, 19, 143, 144, 184, 185, 345, 392, 413, 421], "n_kx": [18, 19, 21, 23, 24, 25, 34, 36, 38, 40, 44, 45, 58, 59, 62, 184, 185, 413], "n_ky": [18, 19, 21, 23, 24, 25, 34, 36, 38, 40, 44, 45, 58, 59, 62, 184, 185, 413], "n_kz": [18, 19, 21, 23, 24, 25, 34, 36, 38, 40, 44, 45, 58, 59, 62, 184, 185, 413], "projected_phas": [18, 19, 413], "kpath": [18, 19, 57, 88, 89, 90, 91, 92, 93, 94, 95, 132, 135, 143, 144, 166, 184, 185, 255, 256, 321, 341, 347, 393, 413, 417], "store": [18, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 40, 58, 59, 62, 72, 131, 132, 134, 135, 137, 138, 176, 177, 226, 285, 292, 294, 307, 310, 313, 327, 413, 415, 416], "informomr": 18, "arrai": [18, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 58, 59, 62, 63, 71, 72, 91, 120, 131, 133, 135, 136, 138, 154, 199, 212, 286, 291, 299, 307, 325, 327, 329, 393, 396, 397, 398, 399, 400, 408, 409, 413, 415, 421], "Will": 18, "have": [18, 31, 215, 327, 341, 347, 357, 398, 399, 403, 404, 411, 412, 413, 414, 415, 416, 417], "n_kpoint": [18, 20, 22, 33, 35, 37, 63, 71], "n_band": [18, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 58, 59, 63, 71], "norbit": [18, 413], "full": [18, 176, 286, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 410, 413, 415], "incud": 18, "complex": [18, 413], "part": [18, 197, 403, 415], "clacul": 18, "vector": [18, 96, 98, 99, 101, 102, 103, 106, 122, 123, 129, 145, 180, 267, 288, 302, 303, 307, 327, 350, 392, 396, 397, 399, 400, 408, 409, 415], "matrix": [18, 57, 61, 80, 89, 90, 96, 111, 117, 119, 120, 130, 135, 138, 159, 181, 184, 305, 326, 414, 415, 421], "shifted_to_efermi": [18, 413], "determin": [18, 32, 42, 57, 88, 90, 111, 174, 326, 353, 403, 414], "shift": [18, 72, 86, 295, 415], "electronicbandstructur": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 135, 255, 256, 283, 392, 417, 418], "gradient": [20, 21, 25, 413], "numpi": [20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 58, 59, 62, 63, 71, 80, 131, 133, 135, 136, 138, 325, 327, 391, 392, 393, 396, 397, 398, 399, 400, 405, 413, 415, 421], "self": [20, 22, 31, 33, 35, 37, 80, 195, 196, 209, 285, 286, 287, 291, 295, 350, 352, 357, 391], "where": [20, 21, 22, 23, 35, 36, 163, 243, 313, 322, 323, 326, 327, 341, 348, 353, 354, 357, 364, 375, 381, 382, 396, 403, 409, 410, 414, 415, 416, 417], "second": [20, 22, 23, 35, 99, 101, 106, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400], "dimens": [20, 21, 22, 23, 35, 36, 311], "dx": [20, 21, 22, 23, 35, 36], "dy": [20, 21, 22, 23, 35, 36], "dz": [20, 21, 22, 23, 35, 36], "fradient": [20, 21], "mesh": [21, 23, 24, 25, 34, 36, 38, 40, 41, 44, 45, 47, 58, 59, 62, 340, 350, 390, 406, 407, 413, 415, 417], "grid": [21, 23, 24, 25, 34, 36, 38, 40, 41, 44, 45, 58, 59, 62, 80, 82, 83, 84, 85, 90, 321, 327, 350, 354, 364, 390, 393, 398, 409, 413, 414, 415], "first": [21, 23, 36, 80, 98, 102, 106, 158, 167, 294, 302, 345, 350, 352, 353, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 370, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 393, 397, 400, 403, 411, 414, 415, 416, 421], "hessian": [22, 23, 413], "third": [22, 99, 102, 103, 403], "scalar_mesh": [25, 26], "cartesian": [25, 43, 44, 57, 168, 186, 285, 286, 287, 292, 295, 297, 299, 300, 302, 303, 304, 308, 396, 397, 399, 400, 413, 417], "coordin": [25, 80, 135, 136, 138, 168, 186, 187, 286, 287, 299, 300, 303, 304, 328, 390, 396, 397, 399, 400, 413, 417], "scalar_gradient_mesh": 25, "integr": 26, "nd_list": 27, "scalar_list": 28, "vector_list": 29, "_summary_": [30, 32, 328], "ipr": [30, 31, 352, 353, 354, 355, 356, 357, 358, 359, 360, 370, 371], "It": [31, 71, 147, 188, 277, 288, 294, 298, 304, 307, 325, 353, 354, 364, 371, 375, 381, 396, 400, 403, 408, 409, 414], "resolv": [31, 403, 408, 409, 412], "pipr": 31, "pipr_j": 31, "frac": [31, 357, 380, 417], "c_j": 31, "sum_i": 31, "c_i": 31, "clearli": [31, 403], "sum_j": 31, "mind": [31, 325, 327, 400, 415, 416], "wavefunct": [31, 350, 417], "c": [31, 302, 380, 396, 398, 400, 403, 404, 405, 415, 420], "_i": 31, "we": [31, 215, 325, 327, 347, 348, 350, 352, 353, 354, 357, 364, 371, 375, 377, 380, 381, 396, 397, 398, 399, 400, 403, 404, 408, 412, 414, 415, 417, 421], "alreadi": [31, 63, 71, 403], "quantiti": 31, "NOT": [31, 403], "readi": [31, 403], "FOR": [31, 403], "pleas": [31, 355, 358, 359, 360, 363, 365, 366, 367, 370, 371, 374, 375, 376, 377, 390, 393, 403, 404, 405, 415, 417], "prefer": [31, 308, 403, 404], "ebs_ipr": 31, "speed": [33, 34, 76], "veloc": [34, 36, 327, 406, 407, 415], "harmon": [37, 38, 327, 415, 417], "averag": [37, 38], "effect": [37, 38, 327, 353, 380, 403, 414, 415], "mass": [37, 38, 327, 415], "symmetri": [39, 88, 107, 108, 109, 110, 174, 181, 189, 313, 353, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 402, 409, 410, 413, 415], "oper": [39, 181, 299, 300, 403, 414], "particular": [40, 327, 347, 403, 413, 414, 415, 416], "mesh_grid": [41, 60], "an": [41, 67, 80, 91, 134, 135, 136, 139, 177, 212, 235, 255, 293, 294, 308, 309, 311, 344, 350, 353, 356, 357, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 398, 399, 400, 403, 408, 409, 412, 415, 417], "nd": [41, 286], "nx": [41, 80], "ny": [41, 80], "nz": [41, 80], "rtype": [44, 45], "fraction": [46, 96, 135, 138, 288], "eb": [47, 72, 73, 163, 255, 256, 360, 367, 392, 413, 418], "lsit": 47, "uniqu": [48, 49, 50, 393, 413], "reduc": [48, 49, 50, 57, 187, 313, 400, 413, 416, 417], "numbersk": 55, "show_brillouin_zon": 57, "r": [57, 270, 345, 398, 409, 412, 415], "point_siz": [57, 390, 392, 393, 396, 397, 399, 400], "render_points_as_spher": [57, 390, 392, 393, 396, 397, 399, 400], "move": [57, 350, 415], "core": [57, 61, 89, 90, 119, 120, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 152, 153, 154, 157, 158, 161, 162, 165, 167, 170, 171, 184, 189, 198, 199, 217, 218, 225, 235, 255, 415], "updat": [57, 61, 128, 129, 285, 291, 396, 403], "new": [57, 61, 188, 287, 327, 400, 403, 415, 416], "implement": [57, 277, 353, 403, 409], "pyvista": [57, 80, 122, 135, 139, 327, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 405, 415], "wether": 57, "phase": [59, 132, 135, 350, 353, 413, 421], "done": [61, 299, 300, 325, 350, 353, 370, 391, 405, 410, 414], "expect": [61, 63, 132, 133, 135, 138, 283, 341, 403], "materi": [61, 107, 108, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 403, 408, 409, 411, 415], "spd": [63, 64, 75, 275, 276, 352, 357], "band_indic": [63, 64, 326, 374, 376, 414], "band_color": [63, 64, 326, 374, 376, 414], "loglevel": [63, 64], "30": [63, 64, 325, 348, 396, 397, 399, 400, 403], "kwarg": [63, 64, 235, 236, 255, 256, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 409, 414, 421], "nx3": 63, "substract": 63, "n_kppint": 63, "cmap": [63, 127, 277, 278, 280, 327, 354, 364, 371, 375, 408, 409, 415], "indic": [63, 325, 326, 327, 352, 355, 358, 359, 360, 363, 365, 366, 367, 375, 377, 397, 403, 409, 414, 415, 421], "given": [63, 67, 133, 135, 153, 287, 290, 303, 307, 311, 326, 374, 380, 386, 390, 393, 403, 406, 407, 412, 414, 421], "_type_": [63, 150, 321, 322, 323, 328, 330, 409, 416, 419], "verbos": [63, 285, 286, 295, 296, 305, 306, 321, 325, 364, 396, 397, 400], "log": 63, "warn": [63, 397], "fermisurfac": [64, 65, 66, 67, 68, 69, 70, 71, 135], "matplotlib": [65, 66, 68, 235, 255, 322, 323, 325, 326, 327, 356, 398, 405, 408, 415, 417], "search": [67, 72, 327, 357, 383, 384, 407, 415], "around": [67, 327, 357, 383, 384, 415, 417], "rais": [67, 68, 71, 120, 190, 326, 414, 416], "runtimeerror": [67, 68, 71, 326, 414, 416], "found": [67, 178, 188, 190, 294, 348, 391, 393, 397, 403, 412, 417], "error": [67, 68, 71, 120, 188, 215, 294, 353, 357, 410, 414], "500": 68, "along": [68, 71, 91, 303, 403, 410, 413, 418], "onli": [68, 71, 95, 122, 188, 285, 287, 313, 325, 327, 347, 357, 363, 367, 374, 376, 380, 381, 382, 383, 384, 385, 386, 387, 397, 403, 404, 408, 409, 415, 416], "layer": [68, 71, 353, 357, 396, 415], "geometri": [68, 71, 311, 353, 421], "pyplot": [68, 326, 398, 417], "instanc": [68, 296, 306, 307, 341, 353, 357, 408, 409, 419, 421], "wa": [68, 71, 325, 400, 403, 409, 417], "call": [68, 71, 313, 330, 341, 347, 348, 350, 380, 381, 382, 383, 384, 385, 386, 387, 396, 403, 411, 415, 419], "befor": [68, 71, 352, 353, 354, 357, 364, 371, 375, 381, 399, 414, 419, 421], "sx": 71, "sy": 71, "sz": 71, "300": [71, 354, 355, 356, 359, 360, 364, 371, 375], "enhanc": 71, "version": [71, 344, 370, 371, 374, 375, 376, 377, 390, 393, 403, 404, 405, 412, 415, 416], "nkpoint": [71, 413], "nband": [71, 413, 417], "thei": [71, 188, 353, 403, 411], "also": [71, 327, 344, 348, 353, 354, 360, 364, 367, 371, 374, 375, 376, 381, 403, 408, 409, 414, 415, 421], "other": [71, 80, 207, 325, 327, 353, 371, 381, 393, 394, 398, 403, 409, 413, 414, 415, 416, 417, 419], "compon": [71, 403, 414, 416, 417], "marker": [71, 279, 280, 354, 364, 371, 375], "fermi_shift": [72, 73, 327, 415], "projection_accuraci": [72, 73, 327, 381, 415], "manapul": 72, "fermi_toler": [72, 327, 415], "improv": [72, 327, 353, 415], "effienc": [72, 327, 415], "prior": [72, 143, 327, 403, 405, 415], "select": [72, 286, 287, 325, 327, 353, 360, 367, 412, 415, 417], "within": [72, 327, 353, 357, 393, 396, 403, 405, 409, 415, 416, 417, 421], "toler": [72, 107, 108, 109, 110, 294, 327, 393, 415], "everi": [72, 325, 403, 406, 407, 417], "accuraci": [72, 327, 415], "pad": [72, 80, 81], "isosurfac": [72, 81, 82, 83, 84, 85, 86, 134, 135, 384, 415], "fermisurface3d": [73, 74, 75, 76, 77, 78, 79, 135, 415], "extended_zone_direct": [74, 327, 381, 415], "extend": [74, 357, 403], "vecctor": 74, "expand": [74, 352, 357], "fermi_spe": [76, 380, 381, 382, 383, 384, 385, 386, 387, 392], "fermi_veloc": [77, 327, 380, 381, 382, 383, 384, 385, 386, 387, 392, 415], "harmonic_effective_mass": [78, 380, 381, 382, 383, 384, 385, 386, 387], "spd_spin": 79, "xyz": [80, 81, 285, 295, 304, 308], "isovalu": [80, 81, 135, 136, 327, 415], "v_matrix": [80, 81], "algorithm": [80, 81], "lewin": [80, 81], "transform_matrix": [80, 81], "boundari": [80, 81, 303, 353], "all": [80, 153, 178, 206, 225, 227, 285, 289, 295, 301, 303, 324, 325, 327, 353, 398, 402, 403, 409, 410, 412, 414, 415, 416, 417, 421], "equat": [80, 415, 417], "f": [80, 226, 347, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 399, 403, 408, 409, 414, 415], "must": [80, 285, 327, 341, 347, 348, 382, 393, 403, 409, 415, 421], "between": [80, 82, 88, 99, 102, 106, 122, 294, 357, 398, 403, 409, 419], "x1": [80, 328, 390], "y1": [80, 328, 390], "z1": 80, "z2": 80, "v1": [80, 325, 327, 415], "v2": 80, "constant": [80, 302, 377, 414], "One": [80, 327, 353, 408, 409, 414, 415], "can": [80, 122, 140, 147, 176, 325, 327, 341, 344, 345, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 398, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421], "present": [80, 115, 118, 180, 289, 324, 325, 327, 403, 409, 410, 415], "instead": [80, 285, 289, 384, 403, 409, 414], "togeth": [80, 285, 344, 403, 408, 409], "provid": [80, 127, 176, 177, 235, 255, 305, 307, 313, 324, 325, 327, 341, 344, 350, 353, 354, 357, 364, 371, 375, 381, 398, 403, 406, 407, 408, 409, 410, 412, 413, 415, 417, 418, 420], "scikit": [80, 405], "possibl": [80, 403, 408, 409, 415], "classic": 80, "modul": [80, 230, 324, 329, 330, 395, 402, 407, 410, 411, 414, 416, 419, 421], "fourier": [80, 327, 415], "dafault": [80, 412], "period": 80, "dataset": [80, 109, 415, 416], "e": [80, 178, 270, 294, 297, 298, 303, 325, 327, 348, 353, 357, 380, 398, 403, 412, 414, 415, 416], "g": [80, 297, 325, 327, 347, 348, 353, 380, 393, 398, 409, 410, 414, 415, 416], "1st": [80, 327, 415], "bz": [80, 410, 421], "cover": [80, 357, 403], "fulli": [80, 357], "so": [80, 325, 396, 403, 409, 411, 413, 416, 417], "one": [80, 86, 122, 178, 180, 277, 285, 286, 287, 290, 298, 313, 325, 327, 347, 348, 350, 376, 393, 403, 408, 409, 410, 412, 414, 415, 416], "want": [80, 122, 308, 325, 327, 352, 382, 400, 403, 404, 414, 415, 416], "wrap": 80, "look": [80, 327, 357, 386, 415], "afterward": 80, "easili": [80, 412], "doabl": 80, "trimesh": [80, 125, 127, 327, 405, 415], "goe": [80, 409, 412, 416], "eigen_matrix": 80, "In": [80, 140, 325, 327, 350, 352, 353, 380, 393, 396, 397, 398, 399, 400, 403, 404, 408, 409, 412, 415, 416, 417, 421], "word": [80, 325, 327, 415], "creat": [80, 122, 306, 307, 311, 325, 327, 329, 347, 348, 350, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 409, 415, 416], "super": [80, 406, 407], "withpad": 80, "vertic": [80, 135, 139, 237, 241, 242, 243, 244, 245, 325, 345, 398, 412, 415], "verts_prim": 80, "t": [80, 226, 277, 347, 403, 404], "exampl": [80, 122, 153, 325, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 394, 395, 396, 397, 398, 399, 400, 403, 404, 408, 409, 412, 414, 415, 416, 417], "space": [82, 107, 108, 309, 353, 380, 381, 382, 383, 384, 385, 386, 387, 393, 398, 414, 415, 419, 421], "length": [82, 403], "tri": [86, 188], "correct": [86, 403], "abl": [86, 382, 408, 409, 415, 417], "min": 86, "max": 86, "kname": [87, 88, 321, 322, 323, 409, 418, 421], "ktick": [87, 88, 321, 322, 323, 409, 418, 421], "special_kpoint": [87, 88, 418], "ngrid": [87, 88, 418], "has_time_revers": [87, 88, 141, 142, 174, 175], "handl": [88, 230, 313, 392, 398, 415, 419], "tick": [88, 93, 94, 249, 252, 269, 272, 278, 279, 280, 418], "map": [88, 122, 127, 128, 176, 327, 353, 408, 409, 414, 415], "special": [88, 353, 403, 408, 414], "time": [88, 174, 285, 287, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 421], "revers": [88, 174, 393, 403], "get": [89, 90, 166, 331, 347, 379, 388, 392, 393, 396, 397, 400, 402, 403, 415], "same_grid_s": 90, "optim": [90, 353], "after": [90, 399, 403, 412, 417], "transformm": 90, "retain": [90, 403], "segment": [92, 414, 418], "filenam": [95, 141, 142, 147, 149, 150, 159, 163, 174, 175, 176, 177, 182, 183, 184, 185, 189, 190, 191, 246, 265, 285, 286, 292, 293, 294, 295, 296, 304, 306, 308, 320, 321, 325, 326, 330, 382, 397, 412, 414, 419, 421], "fmt": 95, "vasp": [95, 143, 150, 213, 227, 230, 234, 285, 320, 321, 322, 323, 325, 326, 327, 344, 346, 347, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 364, 367, 368, 370, 371, 374, 375, 376, 377, 380, 381, 382, 385, 386, 387, 391, 392, 393, 396, 397, 398, 399, 400, 402, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421], "write": [95, 285, 293, 295, 400, 403, 416], "support": [95, 327, 347, 348, 403, 405, 407, 408, 409, 415], "moment": [95, 176, 417], "_description_": [95, 321, 323, 326, 328, 414, 416], "cartesian_coordin": [96, 97, 420], "fractional_coordin": [96, 97, 420], "defin": [96, 325, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 393, 396, 397, 399, 400, 403, 409, 412, 414, 415, 416, 417], "perid": 96, "crystal": [96, 98, 99, 101, 102, 103, 106, 111, 112, 117, 224, 285, 309, 311, 347, 348, 393, 406, 407], "symbol": [96, 135, 138, 288], "natom": [96, 288, 413, 420], "coordinatesd": 96, "magnitud": [98, 101, 103, 327, 408, 409, 415], "angl": [99, 102, 106, 294, 393, 399, 414], "convex": [104, 116], "hull": [104, 116], "scipi": [104, 405], "spatial": 104, "convexhul": 104, "symprec": [107, 108, 109, 110, 189, 329, 393], "1e": [107, 108, 109, 110, 189, 329, 393], "intern": [107, 285, 291], "group": [107, 108, 285, 380, 381, 382, 383, 384, 385, 386, 387], "spglib": [109, 189], "dict": [109, 155, 156, 176, 200, 201, 218, 222, 243, 286, 294, 321, 322, 323, 325, 409, 412], "wyckoff": 110, "insid": [111, 147, 403], "unitcel": 111, "question": 111, "corner": [112, 412], "speci": [115, 245, 286, 297, 325, 398, 412], "differ": [118, 294, 325, 327, 347, 348, 350, 354, 358, 364, 365, 371, 375, 377, 381, 397, 399, 403, 409, 410, 411, 412, 415], "crystla": 120, "valueerror": [120, 190], "proper": 120, "face_norm": [122, 123], "vert_norm": [122, 123], "face_color": [122, 123], "vert_color": [122, 123], "hold": 122, "about": [122, 140, 176, 221, 222, 353, 356, 375, 376, 392, 403, 404, 412, 415], "inherit": 122, "To": [122, 324, 327, 344, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 405, 409, 410, 412, 414, 415, 417], "minimum": [122, 127, 323, 325, 327, 409, 414, 415, 416], "requir": [122, 344, 345, 347, 348, 350, 353, 403, 409, 411, 413, 414, 415, 416], "nvert": 122, "vertici": 122, "integ": [122, 307], "nface": 122, "connect": [122, 393, 403, 415], "vertex": 122, "attach": [122, 403], "glyph": [122, 392], "file_obj": 125, "output": [125, 146, 150, 176, 230, 292, 308, 324, 325, 327, 330, 344, 403, 409, 410, 412, 415, 419], "glb": [125, 327, 415], "file_typ": 125, "new_fac": 126, "viridi": [127, 354, 364, 371, 381], "vmin": [127, 277, 278, 280, 323, 327, 409, 414, 415, 421], "vmax": [127, 277, 278, 280, 323, 327, 409, 414, 415, 421], "maximum": [127, 323, 325, 327, 409, 414, 415, 416], "scalar_nam": 128, "vectors_x": 129, "vectors_i": 129, "vectors_z": 129, "vectors_nam": 129, "manipul": [131, 132, 135, 309, 310, 311], "1d": [131, 135, 136, 397], "n_energi": [131, 135], "see": [131, 132, 133, 134, 137, 138, 306, 380, 392, 398, 403, 404, 408, 409, 414, 421], "further": [131, 132, 133, 134, 137, 138, 143, 403, 409, 414, 416, 421], "informt": [134, 135], "includ": [134, 135, 140, 153, 176, 181, 238, 239, 243, 285, 341, 347, 350, 353, 403, 406, 407, 408, 409, 417, 421], "extens": [134, 135, 136, 139, 293, 304, 308, 357, 403], "path": [135, 137, 163, 176, 177, 325, 327, 341, 345, 347, 348, 350, 352, 353, 354, 357, 364, 375, 381, 396, 397, 398, 399, 400, 406, 407, 410, 411, 415, 417], "tick_label": [135, 137], "tick_posit": [135, 137, 249, 252, 269, 418], "n_segement": [135, 137], "kdistanc": [135, 137, 418], "learn": [140, 404], "more": [140, 178, 180, 277, 285, 290, 298, 327, 341, 360, 367, 375, 376, 393, 397, 403, 404, 408, 409, 412, 415, 416], "pars": [140, 141, 143, 145, 147, 149, 150, 159, 163, 166, 173, 174, 176, 182, 184, 190, 192, 193, 207, 222, 228, 229, 230, 231, 232, 233, 234, 285, 286, 326, 397, 400, 412, 414], "dft": [140, 325, 327, 347, 352, 393, 403, 406, 407, 408, 409, 410, 412, 413, 415, 417, 420, 421], "highlight": [140, 353, 421], "python": [140, 155, 200, 226, 325, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 415], "interfac": [140, 357, 403, 415], "configur": [140, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 373, 374, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 402], "io": [140, 228, 229, 231, 232, 233, 234, 392, 413, 418, 420], "pyposcar": [140, 294, 310, 311, 353, 396, 397, 398, 399, 400, 401], "modulu": 140, "script": [140, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 409, 410, 414, 415, 416, 419, 421], "bandsplot": [140, 321, 341, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 367, 370, 371, 409, 411, 412], "dosplot": [140, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 283, 321, 341, 347, 348, 350, 363, 364, 365, 366, 367, 370, 371, 412], "bandsdosplot": [140, 341, 347, 348, 350, 369, 372, 402, 412], "abinitkpoint": [142, 230], "dirnam": [143, 144, 150, 151, 163, 164, 312, 313, 320, 321, 322, 323, 325, 326, 327, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 409, 411, 412, 414, 415, 421], "infil": [143, 144, 147, 148, 149, 324, 327, 329, 330, 393, 410, 415, 416, 419], "abinit_output": [143, 144, 145, 146, 324, 327, 344, 409, 410, 415, 421], "procar": [143, 150, 151, 159, 185, 186, 187, 188, 189, 230, 313, 320, 321, 324, 327, 330, 335, 341, 343, 344, 350, 391, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 419, 421], "unlik": 143, "here": [143, 188, 277, 286, 304, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 402, 404, 409], "merg": [143, 324, 344, 403, 410], "fix": [143, 188, 215, 295, 324, 344, 357, 403, 410], "format": [143, 188, 226, 230, 309, 324, 325, 327, 344, 347, 390, 391, 392, 393, 403, 406, 407, 409, 410, 415, 417, 419], "issu": [143, 324, 344, 410, 419], "abinitprocar": [144, 230], "through": [147, 149, 314, 317, 353, 403, 408, 409, 413, 414, 415, 418, 420, 421], "becaus": [147, 403, 409], "multipl": [147, 324, 335, 344, 406, 407, 412, 417], "bsxf": 147, "sown": 147, "bxsfparser": [148, 149, 230], "bxsf": [148, 149, 229, 230, 327, 415], "helper": 149, "qe": [150, 151, 230, 231, 232, 325, 347, 348, 350, 356, 358, 363, 365, 383, 384], "lobsterin": [150, 151, 347], "lobsterout": [150, 151, 347], "scfin_filenam": [150, 151], "scf": [150, 151, 163, 164, 347, 348, 350], "outcar": [150, 151, 159, 177, 178, 179, 180, 181, 189, 230, 320, 327, 350, 391, 409, 415, 421], "poscar": [150, 151, 159, 183, 223, 230, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 304, 305, 306, 307, 309, 311, 325, 327, 393, 395, 401, 402, 415, 416, 421], "dos_interpolation_factor": [150, 151, 190, 191], "directori": [150, 163, 313, 322, 323, 324, 325, 326, 341, 345, 347, 348, 350, 352, 353, 354, 357, 364, 399, 409, 410, 414], "put": [150, 325, 327, 410, 415], "lobsterpars": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 230], "retrun": 152, "dos_paramater": 153, "separatli": 153, "pychemia": [153, 205, 213, 214, 217, 218, 225, 405], "visual": [153, 357, 395, 401, 402, 414, 415], "multi": [154, 199], "diment": [154, 199, 415], "complet": [155, 200, 345], "dictionari": [155, 176, 200, 208, 211, 243, 294, 321, 322, 323, 325, 341, 409], "denis": 155, "sturcutu": 159, "scf_in_filenam": [163, 164], "bands_in_filenam": [163, 164], "pdos_in_filenam": [163, 164], "pdo": [163, 164, 348], "kpdos_in_filenam": [163, 164], "kpdo": [163, 164, 348], "atomic_proj_xml": [163, 164], "atomic_proj": [163, 164, 348], "xml": [163, 164, 190, 191, 194, 215, 222, 325, 348, 412], "expresso": 163, "most": [163, 325, 353, 398, 403, 409, 412], "import": [163, 325, 327, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 405, 413, 414, 415, 418, 420, 421], "come": [163, 403, 406, 407], "parser": [163, 215, 230, 392, 409, 413, 418, 420], "took": 163, "place": [163, 341, 348, 357, 403, 415], "case": [163, 325, 327, 341, 352, 398, 403, 409, 410, 415, 416, 421], "ofstat": 163, "locat": [163, 235, 255, 272, 352, 353, 354, 357, 364, 371, 375, 381, 416], "outdir": 163, "prefix": 163, "qepars": [164, 165, 166, 167, 168, 169, 170, 171, 230], "fdf_file": [172, 173], "siestapars": [173, 230], "siesta": [173, 230, 233, 346], "fdf": 173, "vlaue": 174, "kpioint": 174, "run": [176, 286, 344, 345, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 410, 417], "extract": [176, 209, 210, 350, 416], "summari": 176, "eigenvalu": 176, "stress": 176, "tensor": 176, "forc": [176, 403], "local": [176, 353, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 370, 374, 376, 377, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 398, 403], "charg": [176, 357, 403], "dielectr": 176, "amount": [176, 295, 303], "written": [176, 293, 304, 308, 350, 390, 393, 403, 421], "onto": [176, 408, 409, 417], "chosen": 176, "modifi": [176, 285, 296, 306, 325, 395, 401, 402, 403, 408, 409], "nwrite": 176, "tag": [176, 212, 409, 414], "incar": [176, 350, 415], "act": 176, "access": [176, 403, 408, 417], "variabl": [176, 289, 409], "union": [176, 177], "file_str": 176, "content": [176, 177, 289, 304, 307, 308, 403], "constructor": 177, "read": [177, 215, 327, 348, 393, 403, 412, 415, 421], "specifi": [177, 194, 313, 325, 327, 345, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 403, 409, 412, 415], "its": [177, 357, 403], "just": [178, 180, 277, 286, 303, 304, 308, 415, 416], "field": 178, "keep": [178, 325, 327, 403, 408, 415, 416], "than": [178, 180, 207, 277, 325, 327, 397, 403, 408, 409, 415, 416, 421], "ndaarai": 180, "them": [181, 226, 285, 353, 357, 403, 409, 417], "matric": [181, 417], "stupid": 188, "problem": [188, 403], "due": [188, 419, 421], "fortran": [188, 419], "now": [188, 347, 348, 400, 414, 416, 417], "separ": [188, 403, 408, 409, 410], "61": [188, 397], "00000000": [188, 417], "50000000": 188, "But": [188, 376, 403, 414], "precis": [189, 403], "vasprun": [190, 191, 220, 222, 325, 412], "vaspxml": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 421], "el": 194, "_type": 194, "attrib": 194, "tree": 194, "boolian": [195, 196, 197, 226, 325], "consist": [195, 196, 209, 350, 391, 403, 408, 409, 417], "ionic": [195, 197, 202, 206, 216, 225], "converg": [196, 197], "system": [203, 219, 286, 347, 353, 403, 410, 414, 421], "final": [205, 400, 403, 409, 410], "xml_tree": [207, 208, 209, 210, 211, 212], "calculatio": 207, "scstep": 207, "dest": 208, "recurc": [208, 210], "check": [208, 324, 404, 410], "spell": 208, "tage": 210, "varrai": 212, "vaspincar": 213, "alwai": [215, 285, 303, 414], "accord": [215, 357, 403, 414], "finish": 215, "pseudopotenti": 221, "potcar": 221, "covert": 226, "abinit": [228, 230, 324, 325, 327, 346, 347, 407, 408, 409, 410, 415, 421], "espresso": [229, 230, 231, 232, 233, 346, 347, 351, 361, 362, 368, 402, 407, 408, 409], "decrib": 230, "result": [230, 380, 403, 416, 421], "lobster": [230, 231, 321, 323, 325, 326, 346, 407, 414], "abinitpars": 230, "vasppars": 230, "mpl": [235, 255], "orient": [237, 240, 241, 242, 243, 244, 245, 321, 325, 382, 392, 408, 409, 412], "horizont": [237, 240, 241, 242, 243, 244, 245, 321, 325, 412], "linestyl": [237, 354, 364, 375, 398], "THe": 237, "plain": [240, 261, 321, 322, 323, 325, 326, 327, 347, 348, 350, 352, 353, 354, 356, 357, 364, 365, 366, 371, 375, 376, 377, 379, 380, 381, 382, 387, 388, 402, 406, 407, 411, 414, 415, 417, 421], "parametr": [241, 242, 263, 325, 327, 341, 352, 353, 354, 356, 357, 364, 370, 371, 375, 376, 377, 380, 381, 382, 383, 384, 387, 408, 409, 411, 415, 417], "item": [243, 321, 322, 323, 325, 355, 363, 367, 403, 409, 412, 421], "plot_tot": [243, 325, 364, 412], "contribut": [243, 244, 245, 325, 327, 403, 404, 408, 409, 412, 415], "eachoth": 245, "pdf": [246, 265, 325], "interv": [248, 251, 268, 271, 272, 352, 357, 411], "xlim": [248, 352, 357], "tick_nam": [249, 252, 269, 418], "xtick": 249, "ylim": 251, "ytick": 252, "config_dict": [254, 274], "ebsplot": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 283, 352, 354, 355, 356, 357, 358, 359, 360], "fermi_level": 257, "methdo": 259, "width_mask": [260, 262, 264], "color_mask": [260, 262, 264], "width_weight": [260, 262, 264], "color_weight": [260, 262, 264], "scatter": [260, 262, 264, 352, 353, 354, 356, 357, 358, 359, 370, 371, 409], "mask": [260, 262, 264, 278, 280, 322, 323, 403, 409], "overlai": [263, 352, 353, 354, 356, 357, 358, 359, 360, 370, 371, 380, 381, 382, 383, 384, 385, 386, 387], "fo": [267, 270], "begin": [268, 271, 328, 417], "end": [268, 271, 328, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 403, 412, 417], "_f": 270, "depeci": 275, "ot": 275, "procarplot": [276, 277, 278, 279, 280, 283], "hot_r": [277, 280], "handler": 277, "parametricplot": 277, "fake": 277, "shouldn": 277, "invok": [277, 304, 403, 405], "discontinu": [278, 279, 280, 321, 348, 417], "figsiz": [278, 279], "13": [278, 279, 358, 365, 380, 388, 396, 403, 408, 416, 417], "plot_bar": [278, 364], "02": [279, 368, 372, 388], "50": [280, 350, 397, 416], "structutu": 281, "stuctur": 283, "depreci": 284, "low": [285, 309, 310, 352, 357, 416], "tailor": 285, "manual": [285, 382, 393, 409, 410], "coord": [285, 303, 308, 328], "_set_cartesian": 285, "_set_direct": 285, "ie": 285, "angstrom": [285, 288], "load": [285, 286, 288, 289, 380, 381, 382, 383, 384, 385, 386, 387, 396, 397, 400], "whole": [285, 327, 357, 403, 415], "_unpars": 285, "sort": 285, "remov": [285, 295, 399, 403], "automat": [286, 291, 293, 304, 325, 327, 350, 352, 357, 390, 393, 397, 403, 409, 415], "debug": [286, 403], "cpo": 286, "nadarrai": [286, 297], "dpo": [286, 396, 397, 399, 400], "lat": [286, 396, 397, 399, 400], "3x3": [286, 307], "typesp": 286, "aam": 286, "numbersp": 286, "ntotal": [286, 400], "elm": [286, 396, 397, 399, 400], "dynam": [286, 403], "selectflag": 286, "flag": [286, 324, 344, 345, 347, 348, 350, 410, 421], "Not": [286, 403], "conveni": [286, 304, 308, 403], "volum": [286, 403, 415, 420], "box": [286, 403], "product": [286, 396, 397, 399, 400, 403], "selectiveflag": 287, "1x3": 287, "direct_posit": 288, "essenci": 288, "direct_po": 288, "coordiant": [288, 297], "fromstr": 289, "memori": [289, 380, 381, 382, 383, 384, 385, 386, 387, 416], "popul": 289, "when": [291, 313, 326, 327, 344, 350, 353, 356, 360, 367, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 403, 408, 410, 411, 414, 415, 416, 418], "out": [292, 325, 327, 344, 345, 347, 348, 353, 403, 415, 421], "positon": 292, "falseposit": 292, "comment": [293, 417], "ad": [293, 304, 308, 327, 347, 403, 415], "poscar1": 294, "poscar2": 294, "compar": [294, 311, 351, 361, 380, 402, 406, 407, 417, 421], "two": [294, 311, 325, 327, 397, 400, 403, 409, 415], "small": [294, 403, 415], "numer": [294, 403], "ignor": [294, 398, 416], "empti": 294, "comparison": [294, 409, 411], "doe": [294, 301, 325, 327, 353, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 402, 403, 412, 414, 415, 416], "distanc": [294, 398, 418, 421], "rel": [294, 416], "consid": [294, 325, 327, 363, 367, 403, 404, 406, 407, 408, 409, 415], "equal": [294, 356, 383, 384], "chang": [295, 296, 298, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 399, 400, 403, 412], "pos_multipli": 295, "multipli": [295, 299, 302, 325], "pos_sum": 295, "human": [295, 298, 301, 400], "singl": [295, 297, 357, 403, 410], "scale_lattic": [295, 400], "poscar_modifi": [296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 311, 400], "cu": 297, "newel": [298, 400], "replac": [298, 355, 356, 358, 359, 360, 363, 365, 366, 367, 370, 374, 376, 377, 380, 382, 383, 384, 385, 386, 387, 393], "fx": [299, 300], "fy": [299, 300], "fz": [299, 300], "trivial": [301, 353], "equival": [301, 325, 403], "desir": [301, 307, 393, 409, 412], "onc": [301, 352, 353, 354, 357, 364, 371, 375, 381, 405], "start": [301, 325, 327, 396, 397, 400, 403, 408, 409, 414, 415, 416], "keep_cartesian": [302, 400], "b": [302, 398, 399, 400, 403, 420], "what": [302, 402, 403], "cooddin": 302, "remain": [302, 403, 417], "pbc": 303, "enforc": [303, 403], "perod": 303, "condit": [303, 403], "too": [304, 400, 403, 419], "poscar_supercel": [306, 307, 308, 309, 311, 400], "origin": [307, 327, 374, 375, 376, 377, 403, 409, 413, 415, 416], "overwritten": 307, "b1x": 307, "b1y": 307, "b1z": 307, "b2x": 307, "b2y": 307, "b2z": 307, "b3x": 307, "b3y": 307, "b3z": 307, "note": [307, 353, 391, 398, 405, 409, 410, 412, 421], "creation": [307, 403], "make": [307, 348, 350, 352, 357, 379, 380, 381, 382, 383, 384, 385, 386, 387, 399, 400, 402, 403, 414, 416], "deep": 307, "copi": [307, 348, 403, 412], "analysi": [309, 415, 416], "real": [309, 353, 416], "featur": [309, 327, 350, 353, 360, 367, 403, 414, 415, 416], "storag": [309, 403], "util": [309, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 398, 399, 403, 410, 414, 415, 416, 419], "poscarutil": [309, 400], "poscardiff": [309, 311], "strcutur": 310, "repair": [312, 313, 320, 321, 327, 341, 343, 403, 415, 417], "apply_symmetri": [312, 313, 380, 381, 382, 383, 384, 385, 386, 387], "fermihandl": [313, 314, 315, 316, 317, 318, 319, 341, 350, 380, 381, 382, 383, 384, 385, 386, 387], "Then": [313, 350, 355, 356, 358, 359, 360, 363, 365, 366, 367, 370, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 393, 421], "srufac": [313, 314, 317], "iso_rang": [314, 317, 327, 383, 384, 415], "iso_surfac": [314, 317, 327, 383, 384, 415], "iso_valu": [314, 317, 384], "spin_textur": [314, 315, 316, 317, 318, 326, 327, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 402, 414, 415], "property_nam": [314, 315, 316, 317, 318], "save_gif": [314, 318, 384], "print_plot_opt": [314, 315, 316, 317, 318, 321, 322, 325, 326, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 409, 414], "slide": [314, 317], "go": [314, 317, 325, 327, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 405, 415], "ther": [314, 317, 323], "slider": [314, 317, 327, 415], "slice_norm": [315, 316, 327, 380, 382, 415], "slice_origin": [315, 316, 327, 380, 382, 415], "save_2d": [315, 316, 317, 318], "save_2d_slic": [315, 316, 382], "save_mp4": 318, "save_3d": 318, "gap": [320, 353, 357, 391], "bands_set": [321, 341, 370, 371], "elimit": [321, 322, 323, 325, 352, 356, 357, 409, 411, 412, 421], "cubic": [321, 322, 323, 325, 409, 421], "interpolation_typ": [321, 322, 323, 409, 421], "projection_mask": [321, 322, 323, 325, 409, 421], "dos_set": [321, 341, 370, 371], "dos_limit": [321, 325], "savefig": [321, 322, 323, 325, 326, 354, 364, 409, 411, 412, 414, 421], "k_limit": 321, "title_fonts": 321, "draw_fermi": 321, "plot_color_bar": [321, 354, 364, 375, 376, 377], "keyword": [321, 341, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 413], "argument": [321, 325, 327, 341, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 412, 413, 415, 418, 420], "window": [321, 322, 323, 325, 353, 403, 409, 415], "structutr": [322, 409], "sting": [322, 409], "kanem": [322, 409], "decid": [322, 403, 409, 414], "plt": [322, 323, 325, 326, 398, 409, 414, 421], "kdirect": [323, 409, 421], "bandstructur": [323, 332, 403, 410], "kitck": 323, "objext": 323, "outfil": [324, 329, 330, 393, 410, 416, 419], "procar_merg": [324, 410], "gz": [324, 410], "mergeparallel": [324, 410], "fixformat": [324, 410], "nspin": [324, 348, 410, 413], "concaten": [324, 335, 341, 344, 417], "procar_": [324, 410], "compress": [324, 410], "parallel": [324, 344, 410], "detect": [324, 357, 410], "nsppol": [324, 410], "being": [325, 380, 403], "carri": [325, 353, 403, 409, 412], "srvo3": 325, "perform": [325, 327, 345, 348, 350, 403, 406, 407, 414, 415, 416, 418, 421], "explain": [325, 344, 403, 415], "exmapl": [325, 380, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400], "tutori": [325, 404, 415], "parametric_lin": [325, 364, 365, 366, 370, 371, 417], "stack_orbit": [325, 363, 364, 365, 366, 367, 370, 371, 417], "stack_speci": [325, 364, 365, 366, 370, 371, 417], "spline": 325, "polor": 325, "packag": [325, 327, 348, 352, 354, 364, 371, 375, 381, 398, 399, 400, 403, 409, 412, 415], "relev": [325, 327, 353, 403, 415], "srvo": [325, 327, 408, 409, 412, 415], "choos": [325, 327, 353, 403, 415], "oxygen": [325, 327, 412, 415], "sr1": [325, 327, 415], "o3": [325, 327, 415], "900891": [325, 327, 415], "000000": [325, 327, 415, 419], "sr": [325, 327, 408, 409, 412, 415], "500000": [325, 327, 415], "noth": [325, 327, 403, 415], "indeci": [325, 327, 415], "relav": [325, 327, 415], "while": [325, 327, 353, 403, 412, 415, 416], "ask": [325, 403, 412], "graph": [325, 403], "higher": 325, "accept": [325, 403, 413], "png": [325, 327, 382, 409, 412, 415, 421], "jpg": 325, "interact": [325, 398, 403, 415], "well": [325, 353, 374, 376, 403, 409, 410, 415], "entri": [325, 400], "cal": 325, "argumnet": [325, 412], "elk": [325, 346, 407, 408, 409, 411, 412, 421], "fill": [325, 412], "under": [325, 403, 412], "curv": [325, 412], "For": [325, 341, 350, 355, 357, 358, 359, 360, 363, 365, 366, 367, 375, 376, 380, 381, 382, 383, 384, 385, 386, 387, 390, 403, 408, 409, 412, 414, 415, 416, 417, 421], "clarif": 325, "visit": 325, "specif": [325, 341, 347, 352, 353, 381, 398, 399, 403, 404, 408, 409, 412, 415], "clarifi": 325, "lingo": 325, "top": [325, 412], "take": [325, 341, 348, 353, 357, 358, 365, 403, 413, 418, 420], "treat": [325, 403, 414], "subplot": [325, 398, 399], "larger": [325, 403], "row": [325, 408, 409, 416], "colomun": 325, "fig": [325, 398, 409], "linspac": 325, "pi": [325, 380], "1000": [325, 398], "sin": 325, "plt_show": 325, "skip": [325, 415], "set_ylim": 325, "k_z_plane": [326, 414], "k_z_plane_tol": [326, 414], "rot_symm": [326, 414], "translat": [326, 417], "exportplt": [326, 414, 421], "k_z": [326, 414], "invalid": [326, 403, 414], "background_color": [327, 381, 415], "save_color": [327, 415], "calculate_fermi_spe": [327, 415], "calculate_fermi_veloc": [327, 415], "calculate_effective_mass": [327, 415], "arrow_color": [327, 375, 376, 415], "arrow_s": [327, 375, 376, 377, 381, 382, 387, 415], "015": [327, 393, 415], "only_spin": [327, 415], "savegif": [327, 415], "savemp4": [327, 415], "save3d": [327, 415], "save_meshio": [327, 415], "perspect": [327, 415], "save2d": [327, 415], "show_slic": [327, 415], "show_cross_section_area": [327, 382, 415], "iso_slid": [327, 415], "camera_po": [327, 415], "widget": [327, 382, 415], "simul": [327, 357, 415], "mgb2": [327, 415], "ni_f": [327, 415], "49": [327, 377, 378, 415, 418], "iter": [327, 415], "ones": [327, 412, 415], "14": [327, 358, 365, 376, 396, 408, 415, 417], "15": [327, 358, 365, 376, 396, 397, 403, 408, 415, 421], "17": [327, 358, 365, 377, 396, 397, 408, 415], "kgrid": [327, 415], "5x5x5": [327, 415], "lead": [327, 415], "20x20x20": [327, 415], "uniform": [327, 415], "direect": [327, 415], "rgba": [327, 415], "whena": [327, 415], "recomend": [327, 415], "qualit": [327, 415], "grai": [327, 415], "allow": [327, 353, 357, 403, 408, 409, 414, 415, 421], "web": [327, 415], "page": [327, 403, 404, 407, 415], "http": [327, 380, 403, 405, 415], "org": [327, 380, 403, 415], "user": [327, 341, 353, 355, 357, 358, 359, 360, 363, 365, 366, 367, 393, 403, 408, 409, 412, 414, 415], "html": [327, 403, 415], "surfca": [327, 415], "property_project": [327, 415], "fermi_velocity_vector": [327, 415], "mean": [327, 355, 357, 358, 359, 360, 363, 365, 366, 367, 403, 415], "effective_mass": [327, 415], "collinear": [327, 408, 409, 413, 415, 417], "As": [327, 353, 398, 403, 409, 415, 417], "suggest": [327, 415], "abov": [327, 347, 348, 350, 353, 377, 380, 383, 384, 397, 403, 408, 409, 411, 415], "belov": [327, 415], "fast": [327, 415], "rather": [327, 415, 416, 421], "inaccur": [327, 403, 415], "nearest": [327, 357, 398, 400, 415], "neighbor": [327, 357, 398, 400, 415], "accur": [327, 415], "linear": [327, 415], "gif": [327, 384, 415], "mp4": [327, 415], "video": [327, 415], "export": [327, 415, 417], "stl": [327, 415], "binari": [327, 415], "ply": [327, 415], "ascii": [327, 415], "off": [327, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 402, 415], "obj": [327, 415], "gltf": [327, 415], "collada": [327, 415], "meshio": [327, 415], "illus": [327, 415], "depth": [327, 404, 415], "graphic": [327, 415], "turn": [327, 379, 380, 381, 382, 383, 384, 385, 386, 387, 402, 415], "largest": [327, 415], "show_curvatur": [327, 415], "curvatur": [327, 415], "curvature_typ": [327, 415], "avail": [327, 403, 404, 409, 414, 415, 421], "gaussian": [327, 415], "iso_energi": [327, 415], "view": [327, 403, 415], "camera": [327, 415], "nkx": 328, "nky": 328, "grid_siz": 329, "40": [329, 345, 380, 393, 397, 399, 409], "with_time_revers": 329, "recip": [329, 393, 415], "hpkot": [329, 393], "threshold": [329, 393, 398], "07": [329, 378, 388, 393], "angle_toler": 329, "supercell_matrix": [329, 393, 421], "recepi": 329, "procarrepair": [330, 419], "exist": 331, "pre": [341, 370, 371, 374, 375, 376, 377, 390, 393, 403, 406, 407], "post": [341, 370, 371, 374, 375, 376, 377, 390, 393, 403, 406, 407, 416], "cat": [341, 344, 410, 417], "depend": [341, 405, 412], "mai": [341, 353, 360, 367, 403, 409, 415], "orbitald": 341, "bandsplot_2d": 341, "bandtructur": 341, "combin": [341, 371, 375, 403, 408, 409, 410, 415], "fermi2d": [341, 373, 375, 377, 378, 402, 414], "fermi3d": [341, 347, 348, 379, 388, 402, 415], "generate2dkmesh": [341, 390], "kmesh": [341, 347, 350, 392], "bandgap": [341, 389, 394, 402], "reapir": 341, "abinitoutput": 344, "prtprocar": 344, "nameofoutputfil": 344, "split": [344, 373, 378, 396, 397, 399, 400, 402, 410, 414], "bandlin": 345, "band_": [345, 408, 409], "_a": 345, "obtain": [345, 396, 398, 406, 407, 409, 410, 417], "task": [345, 353, 406, 407], "22": [345, 365, 368, 396, 397, 400], "addition": [345, 413], "spinpol": 345, "These": [345, 351, 362, 369, 370, 371, 373, 379, 389, 395, 402, 403, 408, 409, 415], "join": [345, 354, 364, 375, 381, 396, 397, 398, 399, 400], "plot1d": 345, "gamma": [345, 350, 352, 390, 409, 410, 418, 420, 421], "were": [345, 397, 403], "guid": [346, 348, 350, 355, 358, 359, 360, 363, 365, 366, 367, 404], "prepar": 346, "perper": 346, "fatband": 347, "lobter": 347, "lobstercod": 347, "v6": [347, 348], "variou": [347, 348, 350, 354, 364, 371, 375, 381, 406, 407, 413, 417, 418, 420], "independ": [347, 348, 350, 403], "pw": [347, 348], "your": [347, 348, 403, 404, 415], "bands_dirnam": [347, 348, 350], "dos_dirnam": [347, 348, 350], "bands_mod": [347, 348, 350], "dos_mod": [347, 348, 350], "right": [347, 357, 398, 403, 412, 415, 417], "addit": [347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 417], "wf_collect": 347, "nosym": 347, "noinv": 347, "k_point": [347, 348], "520": 347, "0000000": 347, "1428571": 347, "2857143": 347, "4285714": 347, "0000000000": [347, 348], "0000": 347, "0200000000": 347, "4800000000": 347, "5000000000": [347, 348], "5110420726": 347, "4889579274": 347, "7539676705": 347, "2460323295": 347, "7650097432": 347, "2349902568": 347, "h2": 347, "h0": 347, "2238002446": 347, "meth": 347, "explicitli": [347, 348, 403], "lobster_input_fil": 347, "explicit": [347, 348], "createfatband": 347, "2p_x": 347, "2p_y": 347, "2p_z": 347, "li": [347, 403], "refer": [347, 355, 358, 359, 360, 363, 365, 366, 367, 375, 376, 403, 408, 409, 413, 417, 418, 420], "fe": [347, 354, 355, 356, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393], "lobster_q": 347, "projwfc": 348, "sure": [348, 350, 379, 380, 381, 382, 383, 384, 385, 386, 387, 399, 402, 403], "kresolveddo": 348, "main": [348, 357, 413, 418, 420], "nscf": 348, "crystal_b": 348, "6250000000": 348, "2500000000": 348, "u": [348, 403, 404, 414], "3750000000": 348, "7500000000": 348, "w": [348, 403, 415], "occur": [348, 403, 409], "269": 348, "0083333333": 348, "0166666667": 348, "0250000000": 348, "0333333333": 348, "0416666667": 348, "4916666667": 348, "5062500000": 348, "0125000000": 348, "6125000000": 348, "2250000000": 348, "6187500000": 348, "2375000000": 348, "3691406250": 348, "7382812500": 348, "3632812500": 348, "7265625000": 348, "3574218750": 348, "7148437500": 348, "0058593750": 348, "0117187500": 348, "starting_magnet": 348, "branch": 348, "instal": [348, 399, 403], "git": [348, 405], "clone": 348, "gitlab": 348, "com": [348, 403, 405], "pietrodeluga": 348, "q": [348, 415], "cd": [348, 405], "checkout": 348, "new_proj": 348, "bin": [348, 398], "side": [348, 371, 399, 403], "noncolin": 348, "lspinorb": 348, "savesigma": 348, "still": [349, 403], "develop": [349, 370, 371, 374, 375, 376, 377, 390, 393, 407], "lorbit": [350, 421], "11": [350, 358, 365, 396, 403, 408, 417], "unfold": [350, 406, 407, 417], "12": [350, 354, 358, 360, 365, 371, 374, 386, 396, 397, 408, 415, 417, 421], "wave": [350, 417], "ispin": [350, 421], "lnoncollinear": 350, "icharg": 350, "math": [350, 408, 409], "chgcar": 350, "line_mod": 350, "h": [350, 357, 398, 403, 418, 421], "demonstr": [351, 354, 362, 364, 369, 371, 373, 375, 379, 381, 389, 395, 397, 399, 400, 402], "capabl": [351, 353, 362, 369, 373, 379, 389, 402, 406, 407, 409, 415], "autoband": [351, 361, 402], "invers": [351, 353, 361, 402], "particip": [351, 353, 361, 402], "ratio": [351, 353, 361, 402], "download": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402], "illustr": [352, 354, 364, 371, 375, 381, 412, 417], "compound": 352, "hbn": 352, "cncn": 352, "dive": [352, 353, 354, 357, 364, 371, 375, 381, 398, 399], "data_dir": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400], "download_exampl": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393], "save_dir": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393], "cnn": 352, "spin_calc_typ": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393], "calc_typ": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393], "necessari": [352, 353, 357, 403, 409, 417], "librari": [352, 353, 357, 370, 371, 374, 375, 376, 377, 390, 393, 403, 405, 406, 407], "root": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 396, 397, 398, 399, 400], "sep": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 396, 397, 399, 400], "focu": [352, 415], "re": [352, 416], "interest": [352, 353, 357, 403, 415], "96": 352, "97": 352, "42": [352, 397, 401], "44": 352, "clim": [352, 354, 357, 364, 371, 375], "There": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403, 404], "pass": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 403], "overlay_speci": [352, 353, 354, 356, 357, 358, 359, 360, 370, 371], "overlay_orbit": [352, 353, 354, 355, 356, 357, 358, 359, 360, 370, 371], "research": [352, 354, 357, 364, 374, 375, 376, 377, 381, 403, 404], "ebs_plot": [352, 354, 355, 356, 357, 358, 359, 360, 409, 411], "547": [352, 357], "userwarn": [352, 357], "attempt": [352, 357, 403], "ident": [352, 357], "singular": [352, 357], "set_xlim": [352, 357], "246": 352, "98": 352, "0x0000026b8d718250": 352, "minut": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400], "694": 352, "plot_atomic_level": [352, 361], "jupyt": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402], "notebook": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402], "ipynb": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400], "galleri": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402], "sphinx": [352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 370, 371, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 396, 397, 398, 399, 400, 402], "power": [353, 403], "correl": [353, 408, 409], "defect": [353, 395, 398, 401, 402, 403], "tradition": 353, "That": [353, 406, 407], "tediou": 353, "prone": [353, 357], "care": [353, 414], "aim": [353, 403], "bulk": [353, 357], "fundament": [353, 357, 403], "insul": 353, "identifi": [353, 403, 408, 409, 414], "van": [353, 357, 379, 388, 402], "der": [353, 357], "waal": [353, 357], "suitabl": [353, 393, 403], "emphas": 353, "execut": [353, 361, 368, 372, 378, 388, 394, 401, 403, 409], "without": [353, 400, 403, 412, 415], "intervent": 353, "identif": [353, 357], "evalu": 353, "autom": 353, "statist": 353, "distinct": 353, "rest": 353, "scenario": 353, "readili": [353, 403], "appar": 353, "standard": [353, 403], "robust": [353, 406, 407], "geometr": 353, "yet": [353, 404], "captur": [353, 357], "howev": [353, 357, 403, 409, 415], "anticip": 353, "continu": [353, 403, 415], "feedback": 353, "bi2se3_data_dir": [353, 357], "auto": 353, "slab": [353, 357, 395, 401, 402], "topolog": 353, "bi": 353, "dirac": 353, "cone": 353, "upper": [353, 398], "report": [353, 417], "txt": 353, "info": 353, "compris": 353, "associ": [353, 403], "autobandsplot": 353, "unknow": 353, "did": [353, 412], "filter": [353, 392, 417], "ok": 353, "100": [353, 398], "206": 353, "953": [353, 386, 388], "956": 353, "26": [353, 363, 368, 396, 397, 400], "510": 353, "plot_autoband": [353, 361], "wai": [354, 357, 364, 371, 375, 381, 398, 403, 404, 416], "explor": [354, 364, 371, 375, 381, 396, 398], "print_plot_op": 354, "config_path": [354, 364, 375, 381], "__path__": [354, 364, 375, 381], "spin_color": [354, 364, 381, 386], "fermi_color": [354, 364, 371], "fermi_linestyl": [354, 364, 371], "fermi_linewidth": [354, 364, 371], "grid_axi": [354, 364], "grid_color": [354, 364], "grid_linestyl": [354, 364], "grid_linewidth": [354, 364], "grid_which": [354, 364], "markers": [354, 364, 371], "weighted_color": [354, 364], "weighted_width": [354, 364], "figure_s": [354, 364, 371], "dpi": [354, 364, 371, 375], "0x0000026b8e8b52e0": 354, "0x0000026b920b1f10": 354, "0x0000026b8c1863a0": 354, "0x0000026be39a5f70": 354, "663": 354, "plot_bandsplot_configur": [354, 361], "0x0000026b9200b070": 355, "ref": [355, 358, 359, 360, 363, 365, 366, 367], "atomic_project": [355, 358, 359, 360, 363, 365, 366, 367], "0x0000026b920c4040": 355, "0x0000026b92c10d30": 355, "0x0000026b954d00a0": 355, "0x0000026b922a9610": 355, "0x0000026b8d75dbe0": 355, "0x0000026b95a5f1c0": 355, "0x0000026ba087bdf0": 355, "238": 355, "plot_colinear": [355, 361], "vasp_data_dir": 356, "qe_data_dir": 356, "0x0000026bb72e8250": 356, "476": 356, "plot_compare_band": [356, 361], "often": [357, 421], "typic": [357, 393, 403, 419], "usual": [357, 414], "procedur": [357, 403], "cumbersom": 357, "lowest": 357, "unoccupi": 357, "neutral": 357, "c_n": 357, "bn": 357, "practic": [357, 403], "delai": 357, "photon": 357, "emitt": 357, "jara2021": 357, "auburger2021": 357, "much": [357, 400], "simpler": [357, 416], "ipr_": 357, "nk": [357, 417], "sum_": [357, 417], "c_": 357, "nki": 357, "left": [357, 398, 415, 417], "sum_a": 357, "nka": 357, "respect": [357, 400, 403, 408, 409, 414, 416, 421], "been": [357, 403, 415], "context": [357, 403], "anderson": 357, "evers2000": 357, "kind": [357, 403], "perfectli": 357, "would": [357, 383, 384, 403, 408, 409, 414, 415], "bi2se3": [357, 395, 401, 402], "spinorbit": 357, "c_data_dir": 357, "center": [357, 382, 390, 403, 414, 417], "zhang2009": 357, "six": 357, "quintupl": [357, 396], "five": [357, 408, 409], "thick": 357, "outer": 357, "contrast": [357, 403], "enough": 357, "clear": [357, 403, 411], "0x0000019ecad9b580": 357, "neg": [357, 419], "substitut": [357, 395, 401, 402], "plu": [357, 403], "adjac": 357, "vacanc": 357, "Its": 357, "ground": 357, "triplet": 357, "microwav": 357, "radiat": 357, "doherty2013": 357, "215": 357, "henc": 357, "to0": 357, "sever": [357, 400, 402, 415], "lie": 357, "dark": 357, "closest": 357, "doubl": [357, 421], "degener": 357, "occupi": 357, "optic": 357, "transit": [357, 414], "430": 357, "to431": 357, "to432": 357, "emiss": 357, "involv": 357, "excit": 357, "occup": 357, "mention": 357, "delta": 357, "scfmethod": 357, "jin2021": 357, "540": 357, "0x0000019ecdf8ef40": 357, "608": [357, 361], "plot_ipr": [357, 361], "sphinx_gallery_thumbnail_numb": [358, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393], "0x0000026b8daac6d0": 358, "express": [358, 365, 403], "therefor": [358, 365, 403, 408, 421], "91": 358, "24": [358, 396], "0x0000026b8d713370": 358, "630": 358, "plot_noncolinear_q": [358, 361], "0x0000026b8dac9520": 359, "20": [359, 375, 376, 377, 378, 380, 382, 387, 390, 393, 396, 397, 400, 401, 403], "0x0000026b8d713610": 359, "046": 359, "plot_noncolinear_vasp": [359, 361], "few": [360, 367], "0x0000026b953bb040": 360, "doc": [360, 367], "default_set": [360, 367], "ini": [360, 367], "0x0000026b922a9d00": 360, "0x0000026bb72c81c0": 360, "0x0000026b8da9d4f0": 360, "555": 360, "plot_spin_polar": [360, 361], "00": [361, 368, 372, 378, 388, 394, 399, 401], "examples_00": 361, "mb": [361, 368, 372, 378, 388, 394, 401], "000": [361, 417], "dos_plot": [363, 364, 365, 366, 367], "0x0000026b92047ac0": 363, "0x0000026b8e69b4f0": 363, "0x0000026ba3fbbd00": 363, "0x0000026ba48db850": 363, "0x0000026ba4664cd0": 363, "0x0000026ba465beb0": 363, "871": [363, 368], "plot_colinear_do": [363, 368], "font_siz": [364, 393], "spin_label": 364, "stack_y_label": 364, "x_label": [364, 375], "y_label": [364, 375], "0x0000026b95ac8970": 364, "0x0000026b92d02430": 364, "0x0000026b8e8820d0": 364, "793": [364, 368], "plot_dosplot_configur": [364, 368], "0x0000026b954b19a0": 365, "440": [365, 368], "plot_noncolinear_dos_q": [365, 368], "0x0000026ba0863910": 366, "115": [366, 368], "plot_noncolinear_dos_vasp": [366, 368], "0x0000026ba4558520": 367, "0x0000026ba44d4e20": 367, "0x0000026ba454a070": 367, "0x0000026b8dacc880": 367, "0x0000026b8c0d4190": 367, "0x0000026bb72d3550": 367, "0x0000026b92014eb0": 367, "921": [367, 368], "plot_spin_polarized_do": [367, 368], "59": [368, 397], "140": [368, 393], "examples_01": 368, "bands_dir": [370, 371], "dos_dir": [370, 371], "____": [370, 371, 374, 375, 376, 377, 390, 393], "__": [370, 371, 374, 375, 376, 377, 390, 393], "___": [370, 371, 374, 375, 376, 377, 390, 393], "jun": [370, 371, 374, 375, 376, 377, 390, 393], "10th": [370, 371, 374, 375, 376, 377, 390, 393], "2021": [370, 371, 374, 375, 376, 377, 390, 393], "cite": [370, 371, 374, 375, 376, 377, 390, 393, 415], "uthpala": [370, 371, 374, 375, 376, 377, 390, 393, 403], "herath": [370, 371, 374, 375, 376, 377, 390, 393, 403], "pedram": [370, 371, 374, 375, 376, 377, 390, 393, 403], "tavadz": [370, 371, 374, 375, 376, 377, 390, 393, 403], "xu": [370, 371, 374, 375, 376, 377, 390, 393, 403], "he": [370, 371, 374, 375, 376, 377, 390, 393, 403], "eric": [370, 371, 374, 375, 376, 377, 390, 393, 403], "bousquet": [370, 371, 374, 375, 376, 377, 390, 393, 403], "sobhit": [370, 371, 374, 375, 376, 377, 390, 393, 403], "singh": [370, 371, 374, 375, 376, 377, 390, 393, 403], "francisco": [370, 371, 374, 375, 376, 377, 390, 393, 403], "mu\u00f1oz": [370, 371, 374, 375, 376, 377, 390, 393, 403], "aldo": [370, 371, 374, 375, 376, 377, 390, 393, 403], "romero": [370, 371, 374, 375, 376, 377, 390, 393, 403], "comput": [370, 371, 374, 375, 376, 377, 390, 393, 403], "physic": [370, 371, 374, 375, 376, 377, 390, 393, 403], "commun": [370, 371, 374, 375, 376, 377, 390, 393, 403], "251": [370, 371, 374, 375, 376, 377, 390, 393, 403], "2020": [370, 371, 374, 375, 376, 377, 390, 393, 403], "107080": [370, 371, 374, 375, 376, 377, 390, 393, 403], "rees": [370, 371, 374, 375, 376, 377, 390, 393, 403], "boucher": [370, 371, 374, 375, 376, 377, 390, 393, 403], "logan": [370, 371, 374, 375, 376, 377, 390, 393, 403], "lang": [370, 371, 374, 375, 376, 377, 390, 393, 403], "freddi": [370, 371, 374, 375, 376, 377, 390, 393, 403], "farah": [370, 371, 374, 375, 376, 377, 390, 393, 403], "388": [370, 372], "plot_bandsdosplot": [370, 372], "appear": [371, 375, 381], "ll": [371, 375, 381, 396, 397, 398, 399, 400], "adjust": [371, 375, 381, 382], "overal": 371, "518": [371, 372], "plot_bandsdosplot_configur": [371, 372], "905": 372, "examples_02": 372, "bands_do": 372, "noncolinear": [373, 378, 402, 408], "rashba": [373, 378, 402, 408, 409, 414], "comp": [374, 375, 376, 377], "rot": [374, 375, 376, 377], "trasl": [374, 375, 376, 377], "_____________________________________________________": [374, 375, 376, 377], "225": [374, 375, 376], "add_legend": [374, 375], "contact": [374, 403], "specfic": [374, 376, 380, 382, 383, 384, 385, 386, 387], "134": [374, 378], "plot_fermi2d": [374, 378], "plain_band": [375, 376, 377], "add_axes_label": 375, "no_arrow": [375, 377], "arrow_dens": [375, 376, 377], "spin_project": [375, 376, 377], "814": [375, 378], "plot_fermi2d_configur": [375, 378], "By": [376, 403, 415, 421], "s_z": [376, 408, 409, 414], "arrow_project": 376, "19": [376, 377, 378, 396, 397], "575": [376, 378], "plot_fermi2d_spin_textur": [376, 378], "paper": [377, 380, 403], "had": [377, 403, 409], "bisb": 377, "60ev": 377, "fermei": 377, "90ev": 377, "bisb_monolay": 377, "21": [377, 396], "961": 377, "32": [377, 384, 388, 396, 397], "18": [377, 396], "926": [377, 378], "plot_rashba_spin_split": [377, 378], "37": [378, 415], "449": 378, "examples_03": 378, "isovalue_gif": [379, 388, 402], "alphen": [379, 388, 402], "fequenc": [379, 388, 402], "cross_sect": [379, 388, 402], "de": [380, 403], "frequenc": 380, "theoret": 380, "freuqenc": 380, "taken": [380, 403], "experiment": 380, "copper": 380, "silver": 380, "gold": 380, "haa": 380, "doi": [380, 393, 403, 415], "1098": 380, "rsta": 380, "1962": 380, "0011": 380, "hbar": 380, "cg": 380, "768e": 380, "statcoulomb": 380, "0e": 380, "cm": 380, "0546e": 380, "27": [380, 396, 397, 400], "erg": 380, "au": 380, "ensur": [380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 403], "screen": [380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400, 421], "off_screen": [380, 381, 382, 383, 384, 385, 386, 387, 390, 392, 393, 396, 397, 399, 400], "actual": [380, 381, 382, 383, 384, 385, 386, 387, 403], "plot_fermi_cross_section_box_widget": 380, "surface_opac": [380, 381], "3375": [380, 381, 382, 385, 386, 387, 392], "1586": 380, "ang": 380, "1586e": 380, "365e": 380, "f_": 380, "exp": 380, "50e": 380, "1596": 380, "1596e": 380, "68e": 380, "3956": 380, "3956e": 380, "61e": 380, "85e": 380, "629": [380, 388], "plot_de_hass_van_alphen": [380, 388], "plot_fermi_surfac": [381, 385, 386, 387], "surface_cmap": [381, 386], "surface_color": 381, "surface_bands_color": 381, "surface_clim": 381, "brillouin_zone_styl": 381, "brillouin_zone_line_width": 381, "brillouin_zone_color": 381, "brillouin_zone_opac": 381, "texture_cmap": 381, "texture_color": 381, "texture_s": 381, "texture_scal": 381, "texture_opac": 381, "add_ax": 381, "x_axes_label": 381, "y_axes_label": 381, "z_axes_label": 381, "axes_label_color": 381, "axes_line_width": 381, "add_scalar_bar": 381, "scalar_bar_label": 381, "scalar_bar_ital": 381, "scalar_bar_bold": 381, "scalar_bar_title_font_s": 381, "scalar_bar_label_font_s": 381, "scalar_bar_position_x": 381, "scalar_bar_position_i": 381, "scalar_bar_color": 381, "orbit_gif_n_point": 381, "orbit_gif_step": 381, "orbit_mp4_n_point": 381, "orbit_mp4_step": 381, "plotter_offscreen": 381, "plotter_camera_po": 381, "isoslider_titl": 381, "isoslider_styl": 381, "isoslider_color": 381, "cross_section_slice_linewidth": [381, 382], "cross_section_slice_show_area": 381, "984": [381, 388], "plot_fermi3d_configur": [381, 388], "outermost": 382, "line_width": [382, 396, 397, 399, 400], "plot_fermi_cross_sect": 382, "2d_slice": 382, "656": [382, 388], "plot_fermi3d_cross_sect": [382, 388], "throughout": [383, 384, 403], "plot_fermi_isoslid": 383, "31": [383, 388, 396], "315": [383, 388], "plot_fermi3d_isoslid": [383, 388], "exact": [384, 403], "create_isovalue_gif": 384, "239": [384, 388, 409], "plot_fermi3d_isovalue_gif": [384, 388], "596": [385, 388], "plot_fermi3d_plain": [385, 388], "23": [386, 388, 396, 400], "plot_fermi3d_spin": [386, 388], "019": [387, 388], "plot_fermi3d_spin_textur": [387, 388], "28": [388, 396, 400, 403], "390": 388, "examples_04": 388, "06": [388, 394, 401], "kmesh_gener": [389, 394, 402, 414], "kpath_gener": [389, 394, 402], "particularli": [390, 410, 414, 419], "command": [390, 403, 405, 410, 411], "num_grids_x": 390, "num_grids_i": 390, "add_mesh": [390, 392, 396, 397, 399, 400], "show_ax": [390, 393], "show_grid": [390, 393], "589": [390, 394], "plot_2dkmesh_gener": [390, 394], "band_gap": 391, "151": [391, 394], "plot_bandgap": [391, 394], "dir": [392, 413, 418, 420], "pv": [392, 396, 397, 399, 400], "e_fermi": 392, "ibz2fbz": [392, 413], "enectron": 392, "let": [392, 396, 397, 398, 400, 409], "band_0": 392, "atom_0": 392, "orbital_5": 392, "bands_gradi": 392, "08": [392, 401], "scalar_bar_arg": 392, "band_veloc": 392, "band_spe": 392, "show_scalar_bar": [392, 396, 397, 399, 400], "harmonic_average_effective_mass": 392, "643": [392, 394], "plot_eb": [392, 394], "momentum": [393, 415], "enabl": [393, 403, 414, 415, 421], "suffici": 393, "retriev": [393, 409], "slight": 393, "modif": [393, 400, 403], "regard": [393, 396, 397, 403, 414, 416], "seek": 393, "seekpath": [393, 405], "hinuma": 393, "et": [393, 415], "al": [393, 415], "pizzi": 393, "kumagai": 393, "oba": 393, "tanaka": 393, "diagram": 393, "crystallographi": 393, "scienc": [393, 403], "128": 393, "2017": 393, "184": 393, "1016": [393, 403], "commatsci": 393, "2016": 393, "k_path": 393, "k_label": 393, "ey": 393, "unique_label": 393, "unique_kpath": 393, "enumer": [393, 396, 398], "append": [393, 398], "ik": 393, "len": [393, 396], "add_lin": 393, "els": 393, "add_point_label": [393, 396, 397, 399, 400], "point_color": 393, "text_color": 393, "always_vis": [393, 396, 397, 399, 400], "view_yz": 393, "637": [393, 394], "plot_kpath_gener": [393, 394], "020": 394, "examples_05": 394, "04": [394, 398], "cluster": [395, 397, 401, 402], "analyz": [395, 401, 402, 414], "radial": [395, 401, 402], "distribut": [395, 401, 402, 403, 404], "rdf": [395, 401, 402], "ql": 396, "itertool": [396, 397, 398, 399, 400], "def": [396, 397, 399, 400], "create_gif": [396, 397, 399, 400], "unit_cel": [396, 397, 399, 400], "save_fil": [396, 397, 399, 400], "add_titl": [396, 397, 399, 400], "delaunay_3d": [396, 397, 399, 400], "extract_feature_edg": [396, 397, 399, 400], "render_lines_as_tub": [396, 397, 399, 400], "show_point": [396, 397, 399, 400], "generate_orbital_path": [396, 397, 399, 400], "n_point": [396, 397, 399, 400], "open_gif": [396, 397, 399, 400], "orbit_on_path": [396, 397, 399, 400], "write_fram": [396, 397, 399, 400], "viewup": [396, 397, 399, 400], "close": [396, 397, 399, 400, 403, 415], "clusters_map": 396, "i_atom": 396, "clusters_arrai": 396, "29": [396, 397, 400, 403], "33": [396, 397], "34": 396, "atoms_befor": [396, 397, 399, 400], "labels_befor": [396, 397, 399, 400], "zip": [396, 397, 398, 399, 400, 402], "labels_aft": [396, 397, 399, 400], "unit_cell_comb": [396, 397, 399, 400], "repeat": [396, 397, 399, 400, 417], "comb": [396, 397, 399, 400], "unit_cell_befor": [396, 397, 400], "atoms_before_clust": 396, "atoms_after_clust": 396, "960": [396, 401], "plot_clusters_pyposcar": [396, 401], "03": 397, "agnr": [397, 398, 400], "finddefect": 397, "all_defect": 397, "nthe": 397, "write_defect": 397, "inspect": 397, "subtitut": 397, "0d": 397, "agrn": 397, "edg": 397, "tmp_a": [397, 400], "atoms_aft": [397, 399, 400], "unit_cell_aft": [397, 400], "atoms_before_defect_find": 397, "atoms_after_defect_find": 397, "find_forgein_atom": 397, "delimit": 397, "minima": 397, "maxima": 397, "less": 397, "nearest_neighbors_environ": 397, "environ": [397, 398], "abund": 397, "35": 397, "51": 397, "52": [397, 417], "53": 397, "54": [397, 421], "55": 397, "56": 397, "57": 397, "58": 397, "60": [397, 400, 403, 414, 416], "62": 397, "63": 397, "64": [397, 400], "65": [397, 400], "049": [397, 401], "plot_finding_defects_pyposcar": [397, 401], "insight": 398, "probabl": 398, "certain": [398, 403, 408, 409, 414], "anoth": [398, 412, 415], "understand": 398, "gridspec": 398, "my_rdf": 398, "thresholdsp": 398, "neighbor_thresholdsp": 398, "spcurv": 398, "kde_curvesp": 398, "share": [398, 403], "domain": [398, 403], "kde_spac": 398, "cutoff": 398, "inter": 398, "meaaningful": 398, "defen": 398, "databas": 398, "neighborsclass": 398, "latticeutil": [398, 400], "estimatemaxbonddist": 398, "neighbor_threshold": 398, "d_max": 398, "9500000000000002": 398, "6500000000000001": 398, "95": 398, "4772259999999975": 398, "height_ratio": 398, "ax1": 398, "ax2": 398, "ax3": 398, "kde_curv": 398, "set_titl": [398, 409], "cc": 398, "cycl": 398, "next": [398, 403, 415], "flatten": 398, "histogram": 398, "distance_matrix": 398, "patch": 398, "hist": 398, "edgecolor": 398, "alpha": [398, 417, 420], "set_xlabel": 398, "tolist": 398, "plotlabel": 398, "var_cutoff": 398, "leg1": 398, "loc": 398, "data_cutoff": 398, "leg2": 398, "color_label": 398, "add_artist": 398, "tight_layout": 398, "7725483399593904": 398, "8348023074035522": 398, "9434419177103412": 398, "7744469683442248": 398, "3036753236814713": 398, "4123149339882604": 398, "2433199846221439": 398, "0520815280171307": 398, "883086578651014": 398, "7140916292848973": 398, "676": [398, 401], "plot_rdf_cutoff_pyposcar": [398, 401], "boron": 399, "nitrogen": 399, "yb6": 399, "nelement": 399, "nposit": 399, "098": 399, "1989": 399, "8011": 399, "nchang": 399, "new_po": 399, "border": 399, "709": [399, 401], "plot_subsitution_pyposcar": [399, 401], "poscar_util": 400, "9agnr": 400, "shrink": [400, 421], "smaller": [400, 416], "atoms_before_sc": 400, "atoms_after_sc": 400, "3878": 400, "71": 400, "726": 400, "9087": 400, "nnow": 400, "3x1x1": 400, "311": 400, "atoms_before_supercel": 400, "atoms_after_supercel": 400, "nfinal": 400, "change_el": 400, "atoms_before_defect": 400, "atoms_after_defect": 400, "nn": 400, "nn_list": 400, "571": [400, 401], "plot_utils_pyposcar": [400, 401], "964": 401, "examples_06": 401, "examples_python": 402, "examples_jupyt": 402, "open": [403, 406, 407, 415], "head": [403, 404], "scientif": [403, 404], "visibl": [403, 404], "bibtex": 403, "articl": [403, 415], "herath2020107080": 403, "journal": [403, 415], "year": [403, 415], "issn": 403, "0010": 403, "4655": 403, "cpc": 403, "2019": [403, 415], "url": [403, 415], "www": 403, "sciencedirect": 403, "pii": 403, "s0010465519303935": 403, "condens": 403, "matter": 403, "who": 403, "made": 403, "substanti": 403, "concept": 403, "design": 403, "softwar": [403, 415], "draft": 403, "substant": 403, "revis": 403, "global": 403, "effort": 403, "team": 403, "thank": 403, "jan": 403, "janssen": 403, "litong": 403, "jiang": 403, "nichola": 403, "pike": 403, "don": [403, 404], "munoz": 403, "departamento": 403, "isica": 403, "facultad": 403, "ciencia": 403, "universidad": 403, "chile": 403, "santiago": 403, "nanosci": 403, "nanotechnologi": 403, "cedenna": 403, "depart": 403, "astronomi": 403, "west": 403, "virginia": 403, "univers": 403, "morgantown": 403, "wv": 403, "26505": 403, "6315": 403, "usa": 403, "rutger": 403, "piscatawai": 403, "nj": 403, "08854": 403, "physiqu": 403, "eoriqu": 403, "mat": 403, "eriaux": 403, "cesam": 403, "universit": 403, "eg": 403, "4000": 403, "sart": 403, "tilman": 403, "belgium": 403, "gnu": 403, "public": [403, 404, 415], "june": 403, "2007": 403, "copyright": 403, "free": 403, "foundat": 403, "inc": 403, "fsf": 403, "everyon": 403, "permit": 403, "verbatim": 403, "document": [403, 412], "preambl": 403, "copyleft": 403, "awai": 403, "freedom": 403, "guarante": 403, "releas": 403, "speak": 403, "price": 403, "wish": [403, 409], "receiv": 403, "piec": 403, "know": 403, "thing": 403, "protect": 403, "prevent": [403, 419], "deni": 403, "surrend": 403, "respons": 403, "grati": 403, "fee": 403, "recipi": 403, "And": 403, "gpl": 403, "assert": 403, "offer": 403, "give": [403, 414, 417], "legal": 403, "permiss": [403, 419], "warranti": 403, "sake": 403, "mark": 403, "erron": [403, 419], "previou": 403, "devic": 403, "although": 403, "manufactur": 403, "incompat": 403, "systemat": 403, "pattern": 403, "abus": 403, "individu": 403, "unaccept": 403, "prohibit": 403, "those": 403, "aris": [403, 419], "stand": 403, "provis": 403, "futur": [403, 409], "threaten": 403, "constantli": 403, "patent": 403, "restrict": 403, "purpos": [403, 421], "avoid": 403, "danger": 403, "could": [403, 409, 414, 416], "proprietari": 403, "assur": 403, "cannot": 403, "AND": 403, "definit": [403, 415], "law": 403, "semiconductor": 403, "license": 403, "address": 403, "organ": 403, "adapt": 403, "fashion": 403, "earlier": 403, "unmodifi": 403, "propag": 403, "anyth": 403, "directli": 403, "secondarili": 403, "liabl": 403, "infring": 403, "applic": 403, "except": 403, "privat": 403, "countri": 403, "activ": 403, "convei": 403, "parti": 403, "mere": 403, "network": 403, "transfer": 403, "appropri": 403, "notic": 403, "extent": 403, "promin": 403, "tell": 403, "menu": 403, "meet": 403, "criterion": 403, "offici": 403, "recogn": 403, "bodi": 403, "languag": 403, "wide": 403, "among": 403, "serv": 403, "essenti": [403, 413], "kernel": 403, "compil": 403, "produc": [403, 421], "interpret": 403, "tool": 403, "link": [403, 412], "subprogram": 403, "intim": 403, "flow": 403, "regener": 403, "basic": [403, 406, 407, 409, 412], "grant": 403, "irrevoc": 403, "met": 403, "affirm": 403, "unlimit": 403, "constitut": 403, "acknowledg": [403, 404], "fair": 403, "long": [403, 409], "otherwis": 403, "sole": 403, "exclus": 403, "facil": 403, "compli": 403, "thu": [403, 408], "behalf": 403, "outsid": 403, "relationship": 403, "circumst": 403, "sublicens": 403, "unnecessari": 403, "anti": 403, "circumvent": 403, "No": [403, 409], "shall": 403, "deem": 403, "technolog": 403, "measur": 403, "fulfil": 403, "oblig": 403, "wipo": 403, "treati": 403, "adopt": 403, "decemb": 403, "1996": 403, "waiv": 403, "forbid": 403, "exercis": 403, "disclaim": 403, "intent": 403, "against": 403, "medium": 403, "conspicu": 403, "publish": [403, 415], "intact": 403, "absenc": 403, "date": [403, 405, 415], "entir": 403, "anyon": 403, "possess": 403, "regardless": 403, "natur": 403, "aggreg": 403, "beyond": [403, 409, 412], "inclus": 403, "caus": 403, "machin": 403, "readabl": 403, "embodi": 403, "accompani": 403, "durabl": 403, "customarili": 403, "interchang": 403, "valid": 403, "least": 403, "three": [403, 408, 409, 410, 415, 416], "spare": 403, "model": 403, "reason": [403, 409], "cost": 403, "server": 403, "altern": 403, "occasion": 403, "noncommerci": 403, "subsect": 403, "6b": 403, "maintain": 403, "sai": 403, "host": 403, "satisfi": 403, "peer": 403, "transmiss": 403, "6d": 403, "portion": 403, "whose": 403, "exclud": 403, "consum": 403, "tangibl": 403, "person": 403, "famili": 403, "household": 403, "sold": 403, "incorpor": [403, 409], "dwell": 403, "doubt": 403, "favor": 403, "coverag": 403, "common": 403, "statu": 403, "commerci": 403, "industri": 403, "unless": 403, "signific": 403, "suffic": 403, "interf": 403, "transact": 403, "perpetu": 403, "character": 403, "neither": 403, "nor": 403, "abil": 403, "rom": 403, "servic": 403, "itself": [403, 404], "advers": 403, "affect": 403, "violat": 403, "rule": 403, "protocol": 403, "across": [403, 417], "publicli": 403, "password": 403, "unpack": 403, "supplement": 403, "though": 403, "govern": 403, "own": 403, "notwithstand": 403, "holder": 403, "liabil": 403, "preserv": 403, "misrepresent": 403, "licensor": 403, "declin": 403, "trademark": 403, "trade": 403, "indemnif": 403, "contractu": 403, "assumpt": 403, "impos": 403, "relicens": 403, "surviv": 403, "statement": 403, "termin": [403, 405], "expressli": 403, "void": 403, "paragraph": 403, "ceas": 403, "reinstat": 403, "provision": 403, "until": 403, "perman": 403, "fail": 403, "notifi": 403, "dai": 403, "cessat": 403, "moreov": 403, "cure": 403, "receipt": 403, "qualifi": 403, "ancillari": 403, "consequ": 403, "likewis": 403, "action": [403, 415], "downstream": 403, "subject": 403, "complianc": 403, "entiti": 403, "asset": 403, "subdivid": 403, "whatev": 403, "predecessor": 403, "royalti": 403, "litig": 403, "claim": 403, "counterclaim": 403, "lawsuit": 403, "alleg": 403, "sell": 403, "sale": 403, "acquir": 403, "hereaft": 403, "manner": [403, 409], "worldwid": 403, "agreement": 403, "commit": 403, "denomin": 403, "coven": 403, "sue": 403, "knowingli": 403, "reli": 403, "arrang": [403, 408, 409], "depriv": 403, "yourself": 403, "benefit": 403, "knowledg": 403, "believ": 403, "pursuant": 403, "procur": 403, "convey": 403, "discriminatori": 403, "scope": 403, "busi": 403, "payment": 403, "primarili": 403, "enter": 403, "march": 403, "constru": 403, "impli": 403, "defens": 403, "court": 403, "contradict": 403, "excus": 403, "simultan": 403, "pertin": 403, "agre": 403, "collect": [403, 415], "whom": 403, "refrain": 403, "affero": 403, "concern": [403, 415], "Such": 403, "spirit": 403, "distinguish": 403, "later": 403, "ever": 403, "proxi": 403, "THERE": 403, "NO": 403, "THE": 403, "TO": 403, "BY": 403, "IN": 403, "OR": 403, "AS": 403, "OF": 403, "BUT": 403, "merchant": 403, "fit": 403, "risk": 403, "qualiti": 403, "WITH": 403, "prove": 403, "event": 403, "WILL": 403, "BE": 403, "damag": 403, "incident": 403, "consequenti": 403, "inabl": 403, "loss": 403, "BEING": 403, "sustain": 403, "failur": 403, "even": [403, 409], "IF": 403, "SUCH": 403, "advis": 403, "review": 403, "approxim": 403, "absolut": 403, "waiver": 403, "civil": 403, "greatest": 403, "best": 403, "achiev": [403, 419], "redistribut": 403, "safest": 403, "pointer": 403, "brief": 403, "idea": 403, "hope": 403, "mail": 403, "short": 403, "welcom": 403, "hypothet": 403, "Of": 403, "cours": 403, "gui": 403, "employ": 403, "programm": 403, "school": 403, "sign": [403, 419], "subroutin": 403, "lesser": 403, "philosophi": 403, "why": 403, "lgpl": 403, "herein": 403, "subclass": 403, "minim": 403, "isol": 403, "reproduc": 403, "bound": 403, "suppli": [403, 409], "good": [403, 415], "faith": 403, "meaning": [403, 411], "header": 403, "choic": [403, 412, 414], "layout": 403, "accessor": 403, "macro": 403, "inlin": 403, "templat": 403, "ten": 403, "fewer": 403, "engin": 403, "dure": [403, 419], "recombin": 403, "relink": 403, "mechan": 403, "properli": 403, "compat": 403, "4d0": 403, "4d1": 403, "uncombin": 403, "prerequisit": 404, "simplest": 404, "recommend": [404, 408, 409, 419], "anaconda": 404, "conda": 404, "forg": [404, 405], "pip": 404, "via": 404, "pypi": 404, "instruct": [404, 415], "author": [404, 415], "citat": [404, 415], "elsevi": 404, "ase": 405, "romerogroup": 405, "manag": [406, 407, 413, 418, 420], "kohn": [406, 407, 417], "sham": [406, 407, 417], "multitud": [406, 407], "partial": [406, 407], "stll": 407, "convent": [408, 409, 412], "s_x": [408, 409, 414, 416], "s_y": [408, 409, 414], "st": [408, 409, 414], "perpendicular": [408, 409, 414], "k_x": [408, 409, 414], "k_y": [408, 409, 414], "seismic": [408, 409], "ion": [408, 409, 416, 417], "_3": [408, 409, 412], "strongli": [408, 409], "jm": 408, "y_": [408, 409, 417], "site": [408, 409, 417], "logic": [408, 409], "probe": [408, 409], "queri": [408, 409], "portrai": 409, "fine": [409, 414], "usag": [409, 410, 411, 412, 414, 416, 419, 421], "39": 409, "79": 409, "119": 409, "159": 409, "syntax": 409, "bands_up": [], "block": [409, 417], "meant": 409, "suit": 409, "four": 409, "convers": 409, "199": [409, 418, 421], "279": 409, "319": 409, "scriptbandsplot": 409, "hexagon": [410, 421], "procar_g": 410, "procar_k": 410, "procar_m": 410, "seper": 410, "scriptcat": 410, "acheiv": 411, "elk_dir": 411, "vasp_dir": [411, 412], "srvo_3": 411, "veri": [412, 416], "invlov": 412, "exmpla": 412, "api": 412, "match": 412, "aregumnet": 412, "button": 412, "defalut": 412, "switch": [412, 415], "back": 412, "dos_plain_v": 412, "familiar": 412, "lawngreen": 412, "royalblu": 412, "stach": 412, "variat": 412, "central": 413, "known": [413, 415, 418, 420], "path_to_calcul": [413, 418, 420], "k1": 413, "k2": 413, "k3": 413, "nprincip": 413, "prinicip": 413, "is_non_collinear": 413, "calcuul": 413, "kpoints_cartesian": 413, "kpoints_reduc": 413, "sometim": 413, "infom": 413, "meshgrid": 413, "index_mesh": 413, "kpoints_mesh": 413, "cartesian_mesh": 413, "bands_mesh": 413, "projected_mesh": 413, "project_phase_mesh": 413, "weights_mesh": 413, "bands_gradient_mesh": 413, "bands_hessian_mesh": 413, "ebs_sum": 413, "recov": 413, "broullin": 413, "dresselhau": 414, "topologi": 414, "examin": 414, "lifshitz": 414, "e_": 414, "noarrow": 414, "heat": 414, "fault": 414, "solut": 414, "90": 414, "degre": 414, "mostli": 414, "220": 414, "Be": 414, "scriptfermi2d": 414, "extern": 415, "phonon": 415, "divid": 415, "sub": 415, "monkhorst": 415, "pack": 415, "isym": 415, "focus": 415, "polygon": 415, "smooth": 415, "cube": 415, "999999": 415, "000001": 415, "triangl": 415, "assign": 415, "aspect": 415, "handel": 415, "isosurfcac": 415, "fermisurfcae3d": 415, "eigen": 415, "bottom": 415, "amaz": 415, "pyvista_doc": 415, "trimesh_doc": 415, "trimesh_cit": 415, "dawson": 415, "haggerti": 415, "trimsh": 415, "sullivan2019pyvista": 415, "21105": 415, "joss": 415, "01450": 415, "month": 415, "1450": 415, "bane": 415, "sullivan": 415, "alexand": 415, "kaszynski": 415, "streamlin": 415, "toolkit": 415, "vtk": 415, "linux": 415, "mac": 415, "zoom": 415, "isometr": 415, "reset": 415, "click": 415, "middl": 415, "pan": 415, "scene": 415, "cmd": 415, "ctrl": 415, "mous": 415, "wheel": 415, "ctl": 415, "screenhsot": 415, "backgroundplott": 415, "pick": 415, "decreas": 415, "scriptfermi3d": 415, "subset": 416, "heterostructur": 416, "enorm": 416, "consider": 416, "faster": 416, "70": 416, "far": 416, "band50": 416, "column": [416, 417], "filtered_sp": 416, "p_x": 416, "especi": 416, "hybrid": 416, "filtered_kpoint": 416, "filtered_spin": 416, "filter_atom": 416, "atom_typ": 416, "scriptfilt": 416, "orbital_nam": 416, "human_atom": 416, "overview": 417, "guidanc": 417, "conduct": 417, "prep": 417, "commonli": 417, "decompos": 417, "224": 417, "12500000": 417, "65660295": 417, "occ": 417, "052": 417, "nion": 417, "spheric": 417, "sphere": 417, "radiu": 417, "phi_": 417, "mu": 417, "nu": 417, "sigma_": 417, "psi_": 417, "sigma": 417, "pauli": 417, "spinor": 417, "bmatrix": 417, "keyboard": 417, "shortcut": 417, "kapth": 418, "nsegment": 418, "belong": 418, "99": 418, "149": 418, "249": 418, "299": 418, "8660254": 418, "70710678": 418, "4330127": 418, "8291562": 418, "ill": 419, "lack": 419, "5000000": 419, "scriptrepair": 419, "beta": 420, "nspeci": 420, "atomic_numb": 420, "lattice_corn": 420, "cell_convex_hul": 420, "get_space_group_numb": 420, "get_space_group_intern": 420, "get_wyckoff_posit": 420, "get_spglib_symmetry_dataset": 420, "primit": 421, "becom": 421, "quit": 421, "sophist": 421, "fold": 421, "difficult": 421, "scheme": 421, "fat": 421, "proport": 421, "2x2x2": 421, "fname": 421, "diag": 421, "shift_efermi": 421, "86": 421, "110": 421, "147": 421, "165": 421, "print_kpt": 421, "show_band": 421, "savetab": 421, "csv": 421, "unfolded_band": 421, "scriptunfold": 421, "elkin": 421, "unfold_mod": 421, "unfold_mask": 421, "old": 421, "unfold_result": 421, "unfol": 421}, "objects": {"pyprocar.core": [[6, 0, 1, "", "BrillouinZone"], [9, 0, 1, "", "DensityOfStates"], [18, 0, 1, "", "ElectronicBandStructure"], [63, 0, 1, "", "FermiSurface"], [72, 0, 1, "", "FermiSurface3D"], [80, 0, 1, "", "Isosurface"], [87, 0, 1, "", "KPath"], [96, 0, 1, "", "Structure"], [122, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[7, 1, 1, "", "__init__"], [8, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[10, 1, 1, "", "__init__"], [11, 1, 1, "", "coupled_to_uncoupled_basis"], [12, 1, 1, "", "dos_sum"], [13, 1, 1, "", "get_current_basis"], [14, 2, 1, "", "is_non_collinear"], [15, 2, 1, "", "n_dos"], [16, 2, 1, "", "n_energies"], [17, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[19, 1, 1, "", "__init__"], [20, 2, 1, "", "bands_gradient"], [21, 2, 1, "", "bands_gradient_mesh"], [22, 2, 1, "", "bands_hessian"], [23, 2, 1, "", "bands_hessian_mesh"], [24, 2, 1, "", "bands_mesh"], [25, 1, 1, "", "calculate_scalar_gradient"], [26, 1, 1, "", "calculate_scalar_integral"], [27, 1, 1, "", "create_nd_mesh"], [28, 1, 1, "", "create_scaler_mesh"], [29, 1, 1, "", "create_vector_mesh"], [30, 1, 1, "", "ebs_ipr"], [31, 1, 1, "", "ebs_ipr_atom"], [32, 1, 1, "", "ebs_sum"], [33, 2, 1, "", "fermi_speed"], [34, 2, 1, "", "fermi_speed_mesh"], [35, 2, 1, "", "fermi_velocity"], [36, 2, 1, "", "fermi_velocity_mesh"], [37, 2, 1, "", "harmonic_average_effective_mass"], [38, 2, 1, "", "harmonic_average_effective_mass_mesh"], [39, 1, 1, "", "ibz2fbz"], [40, 2, 1, "", "index_mesh"], [41, 1, 1, "", "interpolate_mesh_grid"], [42, 2, 1, "", "is_non_collinear"], [43, 2, 1, "", "kpoints_cartesian"], [44, 2, 1, "", "kpoints_cartesian_mesh"], [45, 2, 1, "", "kpoints_mesh"], [46, 2, 1, "", "kpoints_reduced"], [47, 1, 1, "", "mesh_to_array"], [48, 2, 1, "", "n_kx"], [49, 2, 1, "", "n_ky"], [50, 2, 1, "", "n_kz"], [51, 2, 1, "", "natoms"], [52, 2, 1, "", "nbands"], [53, 2, 1, "", "nkpoints"], [54, 2, 1, "", "norbitals"], [55, 2, 1, "", "nprincipals"], [56, 2, 1, "", "nspins"], [57, 1, 1, "", "plot_kpoints"], [58, 2, 1, "", "projected_mesh"], [59, 2, 1, "", "projected_phase_mesh"], [60, 1, 1, "", "ravel_array"], [61, 1, 1, "", "unfold"], [62, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[64, 1, 1, "", "__init__"], [65, 1, 1, "", "add_axes_labels"], [66, 1, 1, "", "add_legend"], [67, 1, 1, "", "find_energy"], [68, 1, 1, "", "plot"], [69, 1, 1, "", "savefig"], [70, 1, 1, "", "show"], [71, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[73, 1, 1, "", "__init__"], [74, 1, 1, "", "extend_surface"], [75, 1, 1, "", "project_atomic_projections"], [76, 1, 1, "", "project_fermi_speed"], [77, 1, 1, "", "project_fermi_velocity"], [78, 1, 1, "", "project_harmonic_effective_mass"], [79, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[81, 1, 1, "", "__init__"], [82, 2, 1, "", "dxyz"], [83, 2, 1, "", "nX"], [84, 2, 1, "", "nY"], [85, 2, 1, "", "nZ"], [86, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[88, 1, 1, "", "__init__"], [89, 1, 1, "", "get_kpoints_transformed"], [90, 1, 1, "", "get_optimized_kpoints_transformed"], [91, 2, 1, "", "kdistances"], [92, 2, 1, "", "nsegments"], [93, 2, 1, "", "tick_names"], [94, 2, 1, "", "tick_positions"], [95, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[97, 1, 1, "", "__init__"], [98, 2, 1, "", "a"], [99, 2, 1, "", "alpha"], [100, 2, 1, "", "atomic_numbers"], [101, 2, 1, "", "b"], [102, 2, 1, "", "beta"], [103, 2, 1, "", "c"], [104, 2, 1, "", "cell_convex_hull"], [105, 2, 1, "", "density"], [106, 2, 1, "", "gamma"], [107, 1, 1, "", "get_space_group_international"], [108, 1, 1, "", "get_space_group_number"], [109, 1, 1, "", "get_spglib_symmetry_dataset"], [110, 1, 1, "", "get_wyckoff_positions"], [111, 1, 1, "", "is_point_inside"], [112, 2, 1, "", "lattice_corners"], [113, 2, 1, "", "masses"], [114, 2, 1, "", "natoms"], [115, 2, 1, "", "nspecies"], [116, 1, 1, "", "plot_cell_convex_hull"], [117, 2, 1, "", "reciprocal_lattice"], [118, 2, 1, "", "species"], [119, 1, 1, "", "supercell"], [120, 1, 1, "", "transform"], [121, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[123, 1, 1, "", "__init__"], [124, 2, 1, "", "centers"], [125, 1, 1, "", "export"], [126, 2, 1, "", "faces_array"], [127, 1, 1, "", "set_color_with_cmap"], [128, 1, 1, "", "set_scalars"], [129, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[141, 0, 1, "", "AbinitKpoints"], [143, 0, 1, "", "AbinitProcar"], [145, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[142, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[144, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[146, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[147, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[148, 1, 1, "", "__init__"], [149, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[150, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[151, 1, 1, "", "__init__"], [152, 2, 1, "", "dos"], [153, 1, 1, "", "dos_parametric"], [154, 2, 1, "", "dos_projected"], [155, 2, 1, "", "dos_to_dict"], [156, 2, 1, "", "dos_total"], [157, 2, 1, "", "final_structure"], [158, 2, 1, "", "initial_structure"], [159, 1, 1, "", "parse_structure"], [160, 2, 1, "", "species"], [161, 2, 1, "", "structure"], [162, 2, 1, "", "structures"]], "pyprocar.io.qe": [[163, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[164, 1, 1, "", "__init__"], [165, 2, 1, "", "final_structure"], [166, 1, 1, "", "getKpointLabels"], [167, 2, 1, "", "initial_structure"], [168, 1, 1, "", "kpoints_cart"], [169, 2, 1, "", "species"], [170, 2, 1, "", "structure"], [171, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[172, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[173, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[174, 0, 1, "", "Kpoints"], [176, 0, 1, "", "Outcar"], [182, 0, 1, "", "Poscar"], [184, 0, 1, "", "Procar"], [190, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[175, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[177, 1, 1, "", "__init__"], [178, 2, 1, "", "efermi"], [176, 3, 1, "", "file_str"], [176, 3, 1, "", "filename"], [179, 1, 1, "", "get_symmetry_operations"], [180, 2, 1, "", "reciprocal_lattice"], [181, 2, 1, "", "rotations"], [176, 3, 1, "", "variables"]], "pyprocar.io.vasp.Poscar": [[183, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[185, 1, 1, "", "__init__"], [186, 2, 1, "", "kpoints_cartesian"], [187, 2, 1, "", "kpoints_reduced"], [188, 1, 1, "", "repair"], [189, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[191, 1, 1, "", "__init__"], [192, 2, 1, "", "bands"], [193, 2, 1, "", "bands_projected"], [194, 1, 1, "", "conv"], [195, 2, 1, "", "convergence"], [196, 2, 1, "", "convergence_electronic"], [197, 2, 1, "", "convergence_ionic"], [198, 2, 1, "", "dos"], [199, 2, 1, "", "dos_projected"], [200, 2, 1, "", "dos_to_dict"], [201, 2, 1, "", "dos_total"], [202, 2, 1, "", "energies"], [203, 2, 1, "", "energy"], [204, 2, 1, "", "fermi"], [205, 2, 1, "", "final_structure"], [206, 2, 1, "", "forces"], [207, 1, 1, "", "get_general"], [208, 1, 1, "", "get_params"], [209, 1, 1, "", "get_scstep"], [210, 1, 1, "", "get_set"], [211, 1, 1, "", "get_structure"], [212, 1, 1, "", "get_varray"], [213, 2, 1, "", "incar"], [214, 2, 1, "", "initial_structure"], [215, 2, 1, "", "is_finished"], [216, 2, 1, "", "iteration_data"], [217, 2, 1, "", "kpoints"], [218, 2, 1, "", "kpoints_list"], [219, 2, 1, "", "last_energy"], [220, 1, 1, "", "parse_vasprun"], [221, 2, 1, "", "potcar_info"], [222, 1, 1, "", "read"], [223, 2, 1, "", "species"], [224, 2, 1, "", "structure"], [225, 2, 1, "", "structures"], [226, 1, 1, "", "text_to_bool"], [227, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[235, 0, 1, "", "DOSPlot"], [255, 0, 1, "", "EBSPlot"], [275, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "draw_fermi"], [238, 1, 1, "", "grid"], [239, 1, 1, "", "legend"], [240, 1, 1, "", "plot_dos"], [241, 1, 1, "", "plot_parametric"], [242, 1, 1, "", "plot_parametric_line"], [243, 1, 1, "", "plot_stack"], [244, 1, 1, "", "plot_stack_orbitals"], [245, 1, 1, "", "plot_stack_species"], [246, 1, 1, "", "save"], [247, 1, 1, "", "set_xlabel"], [248, 1, 1, "", "set_xlim"], [249, 1, 1, "", "set_xticks"], [250, 1, 1, "", "set_ylabel"], [251, 1, 1, "", "set_ylim"], [252, 1, 1, "", "set_yticks"], [253, 1, 1, "", "show"], [254, 1, 1, "", "update_config"]], "pyprocar.plotter.EBSPlot": [[256, 1, 1, "", "__init__"], [257, 1, 1, "", "draw_fermi"], [258, 1, 1, "", "grid"], [259, 1, 1, "", "legend"], [260, 1, 1, "", "plot_atomic_levels"], [261, 1, 1, "", "plot_bands"], [262, 1, 1, "", "plot_parameteric"], [263, 1, 1, "", "plot_parameteric_overlay"], [264, 1, 1, "", "plot_scatter"], [265, 1, 1, "", "save"], [266, 1, 1, "", "set_title"], [267, 1, 1, "", "set_xlabel"], [268, 1, 1, "", "set_xlim"], [269, 1, 1, "", "set_xticks"], [270, 1, 1, "", "set_ylabel"], [271, 1, 1, "", "set_ylim"], [272, 1, 1, "", "set_yticks"], [273, 1, 1, "", "show"], [274, 1, 1, "", "update_config"]], "pyprocar.plotter.ProcarPlot": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "atomicPlot"], [278, 1, 1, "", "parametricPlot"], [279, 1, 1, "", "plotBands"], [280, 1, 1, "", "scatterPlot"]], "pyprocar.pyposcar": [[285, 0, 1, "", "Poscar"], [294, 4, 1, "", "poscarDiff"], [295, 0, 1, "", "poscar_modify"], [305, 0, 1, "", "poscar_supercell"]], "pyprocar.pyposcar.Poscar": [[286, 1, 1, "", "__init__"], [287, 1, 1, "", "add"], [288, 1, 1, "", "load_from_data"], [289, 1, 1, "", "parse"], [290, 1, 1, "", "remove"], [291, 1, 1, "", "sort"], [292, 1, 1, "", "write"], [293, 1, 1, "", "xyz"]], "pyprocar.pyposcar.Poscar.self": [[286, 3, 1, "", "verbose"]], "pyprocar.pyposcar.poscar_modify": [[296, 1, 1, "", "__init__"], [297, 1, 1, "", "add"], [298, 1, 1, "", "change_elements"], [299, 1, 1, "", "pos_multiply"], [300, 1, 1, "", "pos_sum"], [301, 1, 1, "", "remove"], [302, 1, 1, "", "scale_lattice"], [303, 1, 1, "", "shift"], [304, 1, 1, "", "write"]], "pyprocar.pyposcar.poscar_supercell": [[306, 1, 1, "", "__init__"], [307, 1, 1, "", "supercell"], [308, 1, 1, "", "write"]], "pyprocar.pyposcar.self": [[286, 3, 1, "", "Ntotal"], [286, 3, 1, "", "cpos"], [286, 3, 1, "", "dpos"], [286, 3, 1, "", "elm"], [286, 3, 1, "", "filename"], [286, 3, 1, "", "flags"], [286, 3, 1, "", "lat"], [286, 3, 1, "", "numberSp"], [286, 3, 1, "", "poscar"], [286, 3, 1, "", "selectFlags"], [286, 3, 1, "", "selective"], [286, 3, 1, "", "typeSp"], [286, 3, 1, "", "volume"]], "pyprocar": [[412, 5, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[312, 0, 1, "", "FermiHandler"], [320, 4, 1, "", "bandgap"], [321, 4, 1, "", "bandsdosplot"], [322, 4, 1, "", "bandsplot"], [323, 4, 1, "", "bandsplot_2d"], [324, 4, 1, "", "cat"], [325, 4, 1, "", "dosplot"], [326, 4, 1, "", "fermi2D"], [327, 4, 1, "", "fermi3D"], [328, 4, 1, "", "generate2dkmesh"], [329, 4, 1, "", "kpath"], [330, 4, 1, "", "repair"], [409, 5, 0, "-", "scriptBandsplot"], [410, 5, 0, "-", "scriptCat"], [414, 5, 0, "-", "scriptFermi2D"], [415, 5, 0, "-", "scriptFermi3D"], [416, 5, 0, "-", "scriptFilter"], [419, 5, 0, "-", "scriptRepair"], [421, 5, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[313, 1, 1, "", "__init__"], [314, 1, 1, "", "create_isovalue_gif"], [315, 1, 1, "", "plot_fermi_cross_section"], [316, 1, 1, "", "plot_fermi_cross_section_box_widget"], [317, 1, 1, "", "plot_fermi_isoslider"], [318, 1, 1, "", "plot_fermi_surface"], [319, 1, 1, "", "print_default_settings"]], "pyprocar.scripts.scriptBandsplot": [[409, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[410, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[414, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[415, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[416, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[419, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[421, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "titleterms": {"band": [0, 1, 192, 348, 350, 351, 355, 356, 358, 359, 360, 369, 374, 376, 392, 402, 409, 411, 413, 421], "structur": [0, 1, 96, 138, 161, 162, 170, 171, 224, 225, 348, 350, 351, 355, 356, 358, 359, 360, 399, 402, 409, 413, 420], "plot": [0, 1, 2, 3, 4, 68, 352, 353, 354, 355, 357, 358, 359, 360, 363, 364, 365, 366, 367, 369, 370, 371, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 390, 393, 402, 409, 414, 421], "option": [0, 1, 2, 3, 4], "spin_color": [0, 2, 4], "color": [0, 2, 3, 376], "cmap": [0, 2, 3], "clim": [0, 2, 3], "fermi_color": [0, 2], "fermi_linestyl": [0, 2], "fermi_linewidth": [0, 2], "grid": [0, 1, 2, 238, 258], "grid_axi": [0, 2], "grid_color": [0, 2], "grid_linestyl": [0, 2], "grid_linewidth": [0, 2], "grid_which": [0, 2], "label": 0, "legend": [0, 2, 239, 259], "linestyl": [0, 2, 3], "linewidth": [0, 2, 3], "marker": [0, 2, 3], "markers": [0, 2], "opac": [0, 2], "plot_color_bar": [0, 2, 3], "savefig": [0, 2, 69], "titl": [0, 2], "weighted_color": [0, 2], "weighted_width": [0, 2], "figure_s": [0, 2], "dpi": [0, 2, 3], "2d": [1, 3, 373, 402, 414], "surface_cmap": [1, 4], "surface_color": [1, 4], "surface_spinpol_color": 1, "surface_bands_color": [1, 4], "surface_opac": [1, 4], "surface_clim": [1, 4], "extended_zone_direct": [1, 4], "supercel": [1, 4, 119, 307, 400], "projection_accuraci": [1, 4], "interpolation_factor": [1, 4], "brillouin_zone_styl": [1, 4], "brillouin_zone_line_width": [1, 4], "brillouin_zone_color": [1, 4], "brillouin_zone_opac": [1, 4], "texture_cmap": [1, 4], "texture_color": [1, 4], "texture_s": [1, 4], "texture_scal": [1, 4], "texture_opac": [1, 4], "add_ax": [1, 4], "energy_lim": 1, "x_axes_label": [1, 4], "y_axes_label": [1, 4], "z_axes_label": [1, 4], "axes_label_color": [1, 4], "axes_line_width": [1, 4], "add_scalar_bar": [1, 4], "scalar_bar_label": [1, 4], "scalar_bar_ital": [1, 4], "scalar_bar_bold": [1, 4], "scalar_bar_title_font_s": [1, 4], "scalar_bar_label_font_s": [1, 4], "scalar_bar_position_x": [1, 4], "scalar_bar_position_i": [1, 4], "scalar_bar_color": [1, 4], "background_color": [1, 4], "orbit_gif_n_point": [1, 4], "orbit_gif_step": [1, 4], "orbit_mp4_n_point": [1, 4], "orbit_mp4_step": [1, 4], "clip_brillouin_zon": 1, "clip_brillouin_zone_factor": 1, "grid_xtitl": 1, "grid_ytitl": 1, "grid_ztitl": 1, "add_fermi_plan": 1, "fermi_plane_opac": 1, "fermi_plane_color": 1, "fermi_plane_s": 1, "show_fermi_plane_text": 1, "fermi_text_posit": 1, "plotter_offscreen": [1, 4], "plotter_camera_po": [1, 4], "isoslider_titl": [1, 4], "isoslider_styl": [1, 4], "isoslider_color": [1, 4], "cross_section_slice_linewidth": [1, 4], "cross_section_slice_show_area": [1, 4], "do": [2, 152, 198, 365, 366, 369, 402], "font": 2, "font_siz": 2, "plot_bar": 2, "plot_tot": 2, "spin_label": 2, "verbos": 2, "stack_y_label": 2, "x_label": [2, 3], "y_label": [2, 3], "fermi": [3, 4, 204, 348, 350, 373, 379, 380, 392, 402, 415], "surfac": [3, 4, 122, 139, 357, 380, 415], "add_axes_label": [3, 65], "add_legend": [3, 66], "no_arrow": 3, "arrow_color": 3, "arrow_dens": 3, "arrow_s": [3, 4], "spin_project": 3, "3d": [4, 379, 402, 415], "configur": [5, 354, 364, 375, 381], "file": [5, 397, 398, 399, 400], "pyprocar": [6, 9, 18, 63, 72, 80, 87, 96, 122, 141, 143, 145, 147, 150, 163, 172, 174, 176, 182, 184, 190, 235, 255, 275, 285, 295, 305, 312, 354, 364, 375, 381, 403, 404, 406, 407], "core": [6, 9, 18, 63, 72, 80, 87, 96, 122, 135], "brillouinzon": [6, 130], "__init__": [7, 10, 19, 64, 73, 81, 88, 97, 123, 142, 144, 146, 148, 151, 164, 173, 175, 177, 183, 185, 191, 236, 256, 276, 286, 296, 306, 313], "wigner_seitz": 8, "densityofst": [9, 131], "coupled_to_uncoupled_basi": 11, "dos_sum": 12, "get_current_basi": 13, "is_non_collinear": [14, 42], "n_do": 15, "n_energi": 16, "n_spin": 17, "electronicbandstructur": [18, 132, 413], "bands_gradi": 20, "bands_gradient_mesh": 21, "bands_hessian": 22, "bands_hessian_mesh": 23, "bands_mesh": 24, "calculate_scalar_gradi": 25, "calculate_scalar_integr": 26, "create_nd_mesh": 27, "create_scaler_mesh": 28, "create_vector_mesh": 29, "ebs_ipr": 30, "ebs_ipr_atom": 31, "ebs_sum": 32, "fermi_spe": 33, "fermi_speed_mesh": 34, "fermi_veloc": 35, "fermi_velocity_mesh": 36, "harmonic_average_effective_mass": 37, "harmonic_average_effective_mass_mesh": 38, "ibz2fbz": 39, "index_mesh": 40, "interpolate_mesh_grid": 41, "kpoints_cartesian": [43, 186], "kpoints_cartesian_mesh": 44, "kpoints_mesh": 45, "kpoints_reduc": [46, 187], "mesh_to_arrai": 47, "n_kx": 48, "n_ky": 49, "n_kz": 50, "natom": [51, 114], "nband": 52, "nkpoint": 53, "norbit": 54, "nprincip": 55, "nspin": 56, "plot_kpoint": 57, "projected_mesh": 58, "projected_phase_mesh": 59, "ravel_arrai": 60, "unfold": [61, 421], "weights_mesh": 62, "fermisurfac": [63, 133], "find_energi": 67, "show": [70, 253, 273, 380], "spin_textur": [71, 387], "fermisurface3d": [72, 134], "extend_surfac": 74, "project_atomic_project": 75, "project_fermi_spe": 76, "project_fermi_veloc": 77, "project_harmonic_effective_mass": 78, "project_spin_texture_atomic_project": 79, "isosurfac": [80, 136], "dxyz": 82, "nx": 83, "ny": 84, "nz": 85, "surface_boundari": 86, "kpath": [87, 137, 329, 342, 418], "get_kpoints_transform": 89, "get_optimized_kpoints_transform": 90, "kdistanc": 91, "nsegment": 92, "tick_nam": 93, "tick_posit": 94, "write_to_fil": 95, "alpha": 99, "atomic_numb": 100, "b": 101, "beta": 102, "c": 103, "cell_convex_hul": 104, "densiti": [105, 348, 350, 362, 363, 367, 402, 412], "gamma": 106, "get_space_group_intern": 107, "get_space_group_numb": 108, "get_spglib_symmetry_dataset": 109, "get_wyckoff_posit": 110, "is_point_insid": 111, "lattice_corn": 112, "mass": [113, 392], "nspeci": 115, "plot_cell_convex_hul": 116, "reciprocal_lattic": [117, 180], "speci": [118, 160, 169, 223], "transform": 120, "volum": 121, "center": 124, "export": [125, 409, 414, 421], "faces_arrai": 126, "set_color_with_cmap": 127, "set_scalar": 128, "set_vector": 129, "api": [135, 140, 230, 283, 309, 341], "refer": 140, "io": [141, 143, 145, 147, 150, 163, 172, 174, 176, 182, 184, 190, 230], "abinit": [141, 143, 145, 344], "abinitkpoint": 141, "abinitprocar": 143, "output": 145, "bxsf": 147, "bxsfparser": [147, 229], "parse_bxsf": 149, "lobster": [150, 347], "lobsterpars": [150, 231], "dos_parametr": 153, "dos_project": [154, 199], "dos_to_dict": [155, 200], "dos_tot": [156, 201], "final_structur": [157, 165, 205], "initial_structur": [158, 167, 214], "parse_structur": 159, "qe": 163, "qepars": [163, 232], "getkpointlabel": 166, "kpoints_cart": 168, "siesta": [172, 349], "siestapars": [172, 233], "vasp": [174, 176, 182, 184, 190, 350, 359, 366], "kpoint": [174, 217, 414], "outcar": 176, "efermi": 178, "get_symmetry_oper": 179, "rotat": [181, 414], "poscar": [182, 285, 310, 396, 397, 398, 399, 400], "procar": 184, "repair": [188, 330, 419], "symmetr": 189, "vaspxml": 190, "bands_project": 193, "conv": 194, "converg": 195, "convergence_electron": 196, "convergence_ion": 197, "energi": [202, 203, 377], "forc": 206, "get_gener": 207, "get_param": 208, "get_scstep": 209, "get_set": 210, "get_structur": 211, "get_varrai": 212, "incar": 213, "is_finish": 215, "iteration_data": 216, "kpoints_list": 218, "last_energi": 219, "parse_vasprun": 220, "potcar_info": 221, "read": [222, 399], "text_to_bool": 226, "vasp_paramet": 227, "abinitpars": 228, "vasppars": 234, "plotter": [235, 255, 275, 283], "dosplot": [235, 282, 325, 336], "draw_fermi": [237, 257], "plot_do": 240, "plot_parametr": 241, "plot_parametric_lin": 242, "plot_stack": 243, "plot_stack_orbit": 244, "plot_stack_speci": 245, "save": [246, 265, 382], "set_xlabel": [247, 267], "set_xlim": [248, 268], "set_xtick": [249, 269], "set_ylabel": [250, 270], "set_ylim": [251, 271], "set_ytick": [252, 272], "update_config": [254, 274], "ebsplot": [255, 281], "plot_atomic_level": 260, "plot_band": 261, "plot_parameter": 262, "plot_parameteric_overlai": 263, "plot_scatt": 264, "set_titl": 266, "procarplot": [275, 284], "atomicplot": 277, "parametricplot": 278, "plotband": 279, "scatterplot": 280, "pyposcar": [285, 295, 305, 309, 395, 402], "add": [287, 297], "load_from_data": 288, "pars": [289, 396, 398, 399], "remov": [290, 301], "sort": 291, "write": [292, 304, 308], "xyz": 293, "poscardiff": 294, "poscar_modifi": 295, "change_el": 298, "pos_multipli": 299, "pos_sum": 300, "scale_lattic": 302, "shift": 303, "poscar_supercel": 305, "poscarutil": 311, "script": [312, 341], "fermihandl": [312, 339], "create_isovalue_gif": 314, "plot_fermi_cross_sect": 315, "plot_fermi_cross_section_box_widget": 316, "plot_fermi_isoslid": 317, "plot_fermi_surfac": 318, "print_default_set": 319, "bandgap": [320, 331, 391, 392], "bandsdosplot": [321, 332, 370, 371], "bandsplot": [322, 333], "bandsplot_2d": [323, 334], "cat": [324, 335], "fermi2d": [326, 337, 374, 376], "fermi3d": [327, 338, 382, 383, 384, 385, 386, 387], "generate2dkmesh": [328, 340], "reapir": 343, "perper": [344, 345, 347, 349], "elk": 345, "dft": 346, "prep": 346, "quantum": [348, 358, 365], "espresso": [348, 358, 365], "prepar": [348, 350, 352, 353, 354, 357, 364, 371, 375, 381], "calcul": [348, 350, 410], "state": [348, 350, 357, 362, 363, 367, 402, 412], "k": [348, 350, 393, 409, 416, 418], "point": [348, 350, 409, 416], "format": [348, 350], "magnet": [348, 350], "atom": [352, 399, 408, 409, 416], "level": 352, "set": [352, 353, 357], "up": [352, 353, 357], "environ": [352, 353, 357], "mode": [352, 355, 358, 359, 360, 363, 365, 366, 367, 370, 374, 383, 384, 385, 386, 387, 412], "autoband": 353, "exampl": [353, 390, 391, 392, 393, 402], "plain": [355, 358, 359, 360, 363, 367, 370, 374, 383, 384, 385, 386, 409, 412], "parametr": [355, 358, 359, 360, 363, 365, 366, 367, 374, 385, 386, 412], "parametric_linemod": 355, "scatter": [355, 360], "overlay_speci": 355, "overlay_orbti": 355, "overlai": [355, 363], "orbit": [355, 408, 409, 416], "name": 355, "compar": [356, 411], "invers": 357, "particip": 357, "ratio": 357, "topolog": 357, "protect": 357, "bi_2se_3": 357, "nv": 357, "defect": [357, 397, 400], "diamond": 357, "non": [358, 359, 365, 366], "colinear": [358, 359, 365, 366], "spin": [360, 367, 376, 377, 386, 387, 408, 409, 414, 416], "polar": [360, 367, 386], "comput": [361, 368, 372, 378, 388, 394, 398, 401], "time": [361, 368, 372, 378, 388, 394, 401], "parametric_lin": [363, 367, 412], "stack_speci": [363, 367, 412], "stack_orbti": [363, 367], "stack": [367, 412], "plain_band": 374, "select": [374, 376, 416], "indic": [374, 376, 407], "noncolinear": 376, "textur": [376, 387, 414], "project": [376, 377, 392, 408, 409], "singl": 376, "rashba": 377, "split": 377, "0": [377, 380], "60": 377, "sx": 377, "arrow": 377, "sy": 377, "sz": 377, "90": 377, "how": 380, "get": [380, 404], "van": 380, "alphen": 380, "fequenc": 380, "from": [380, 409], "maxim": 380, "cross": [380, 382], "section": [380, 382], "area": 380, "along": 380, "1": [380, 408, 409, 412], "minim": 380, "extrem": 380, "cross_sect": 382, "slice": 382, "isoslid": 383, "isovalue_gif": 384, "other": [389, 392, 402], "kmesh_gener": 390, "kmesh": 390, "find": [391, 392, 397], "properti": 392, "gradient": 392, "veloc": 392, "effect": 392, "kpath_gener": 393, "path": [393, 409, 418], "visual": [396, 397, 398, 399, 400], "cluster": 396, "bi2se3": 396, "slab": 396, "util": [396, 397, 400], "function": [396, 397, 398, 400], "creat": [396, 397, 399, 400], "gif": [396, 397, 399, 400], "identifi": 396, "analyz": 398, "radial": 398, "distribut": 398, "rdf": 398, "kde": 398, "curv": 398, "result": 398, "substitut": 399, "modifi": 400, "scale": 400, "vacuum": 400, "space": 400, "lattic": 400, "introduc": 400, "author": 403, "citat": 403, "cite": [403, 404], "contributor": 403, "develop": 403, "licens": 403, "start": 404, "instal": [404, 405], "paper": 404, "support": 404, "pip": 405, "conda": 405, "clone": 405, "through": 405, "github": 405, "after": 405, "why": 406, "tabl": 407, "2": [408, 409, 412], "3": [408, 409, 412], "4": [409, 412], "matplotlib": [409, 414, 421], "pyplot": [409, 414, 421], "object": [409, 414, 421], "convert": 409, "reduc": 409, "cartesian": 409, "coordin": 409, "discontinu": 409, "concaten": 410, "multipl": 410, "5": 412, "6": 412, "stack_orbit": 412, "access": [413, 418, 420], "electron": 413, "translat": 414, "mesh": 414, "keyboard": 415, "shortcut": 415, "filter": 416, "data": 416, "To": 416, "user": 417, "guid": 417, "further": 417, "detail": 417, "inform": [418, 420]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Configuration Files": [[5, "configuration-files"]], "BrillouinZone": [[130, "brillouinzone"]], "DensityOfStates": [[131, "densityofstates"]], "ElectronicBandStructure": [[132, "electronicbandstructure"], [413, "electronicbandstructure"]], "FermiSurface": [[133, "fermisurface"]], "FermiSurface3D": [[134, "fermisurface3d"]], "Core API": [[135, "core-api"]], "Isosurface": [[136, "isosurface"]], "KPath": [[137, "kpath"]], "Structure": [[138, "structure"], [420, "structure"]], "Surface": [[139, "surface"]], "API Reference": [[140, "api-reference"]], "AbinitParser": [[228, "abinitparser"]], "BxsfParser": [[229, "bxsfparser"]], "IO API": [[230, "io-api"]], "LobsterParser": [[231, "lobsterparser"]], "QEParser": [[232, "qeparser"]], "SiestaParser": [[233, "siestaparser"]], "VaspParser": [[234, "vaspparser"]], "EBSPlot": [[281, "ebsplot"]], "DosPlot": [[282, "dosplot"]], "Plotter API": [[283, "plotter-api"]], "ProcarPlot": [[284, "procarplot"]], "PyPoscar API": [[309, "pyposcar-api"]], "Poscar": [[310, "poscar"]], "poscarUtils": [[311, "poscarutils"]], "bandgap": [[331, "bandgap"], [320, "bandgap"]], "bandsdosplot": [[332, "bandsdosplot"], [321, "bandsdosplot"]], "bandsplot": [[333, "bandsplot"], [322, "bandsplot"]], "bandsplot_2d": [[334, "bandsplot-2d"], [323, "bandsplot-2d"]], "cat": [[335, "cat"], [324, "cat"]], "dosplot": [[336, "dosplot"], [325, "dosplot"]], "fermi2D": [[337, "fermi2d"], [326, "fermi2d"]], "fermi3D": [[338, "fermi3d"], [327, "fermi3d"]], "FermiHandler": [[339, "fermihandler"]], "generate2dkmesh": [[340, "generate2dkmesh"], [328, "generate2dkmesh"]], "Scripts API": [[341, "scripts-api"]], "kpath": [[342, "kpath"], [329, "kpath"]], "reapir": [[343, "reapir"]], "Abinit Perperation": [[344, "abinit-perperation"]], "Elk Perperation": [[345, "elk-perperation"]], "DFT Prep": [[346, "dft-prep"]], "Lobster Perperation": [[347, "lobster-perperation"]], "Quantum Espresso Preparation": [[348, "quantum-espresso-preparation"]], "Preparing Calculations": [[348, "preparing-calculations"], [350, "preparing-calculations"]], "Band Structure": [[348, "band-structure"], [350, "band-structure"], [351, "band-structure"], [402, "band-structure"]], "Density of States": [[348, "density-of-states"], [350, "density-of-states"], [362, "density-of-states"], [402, "density-of-states"], [412, "density-of-states"]], "Band Structure and Density of States": [[348, "band-structure-and-density-of-states"], [350, "band-structure-and-density-of-states"]], "Fermi": [[348, "fermi"], [350, "fermi"]], "K-Points Format": [[348, "k-points-format"], [350, "k-points-format"]], "Magnetic Calculations": [[348, "magnetic-calculations"], [350, "magnetic-calculations"]], "Siesta Perperation": [[349, "siesta-perperation"]], "VASP Preparation": [[350, "vasp-preparation"]], "Plotting Atomic Levels": [[352, "plotting-atomic-levels"]], "Preparation": [[352, "preparation"], [353, "preparation"], [354, "preparation"], [357, "preparation"], [364, "preparation"], [371, "preparation"], [375, "preparation"], [381, "preparation"]], "Setting up the environment": [[352, "setting-up-the-environment"], [353, "setting-up-the-environment"], [357, "setting-up-the-environment"]], "Plotting in Atomic Mode": [[352, "plotting-in-atomic-mode"]], "Autobands plotting": [[353, "autobands-plotting"]], "Autobands Example": [[353, "autobands-example"]], "Plotting with Configurations in pyprocar": [[354, "plotting-with-configurations-in-pyprocar"], [364, "plotting-with-configurations-in-pyprocar"], [375, "plotting-with-configurations-in-pyprocar"], [381, "plotting-with-configurations-in-pyprocar"]], "Plotting band structure": [[355, "plotting-band-structure"]], "Plain mode": [[355, "plain-mode"], [358, "plain-mode"], [359, "plain-mode"], [360, "plain-mode"], [363, "plain-mode"], [367, "plain-mode"], [370, "plain-mode"], [374, "plain-mode"], [383, "plain-mode"], [384, "plain-mode"], [385, "plain-mode"], [386, "plain-mode"]], "Parametric mode": [[355, "parametric-mode"], [358, "parametric-mode"], [359, "parametric-mode"], [360, "parametric-mode"], [363, "parametric-mode"], [365, "parametric-mode"], [366, "parametric-mode"], [367, "parametric-mode"], [385, "parametric-mode"], [386, "parametric-mode"]], "parametric_linemode": [[355, "parametric-linemode"]], "Scatter mode": [[355, "scatter-mode"], [360, "scatter-mode"]], "overlay_species mode": [[355, "overlay-species-mode"]], "overlay_orbtials mode": [[355, "overlay-orbtials-mode"]], "overlay mode": [[355, "overlay-mode"], [363, "overlay-mode"]], "overlay mode by orbital names": [[355, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[356, "comparing-band-structures"]], "Plotting Inverse participation ratio": [[357, "plotting-inverse-participation-ratio"]], "Topologically-protected surface states in Bi_2Se_3": [[357, "topologically-protected-surface-states-in-bi-2se-3"]], "NV^- defect in diamond": [[357, "nv-defect-in-diamond"]], "Plotting non colinear band structures in Quantum Espresso": [[358, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[359, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[360, "plotting-spin-polarized-band-structures"]], "Computation times": [[361, "computation-times"], [368, "computation-times"], [372, "computation-times"], [378, "computation-times"], [388, "computation-times"], [394, "computation-times"], [401, "computation-times"]], "Plotting density of states": [[363, "plotting-density-of-states"]], "parametric_line mode": [[363, "parametric-line-mode"], [367, "parametric-line-mode"]], "stack_species mode": [[363, "stack-species-mode"], [367, "stack-species-mode"]], "stack_orbtials mode": [[363, "stack-orbtials-mode"], [367, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[365, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[366, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[367, "plotting-spin-polarized-density-of-states"]], "stack mode": [[367, "stack-mode"]], "Bands and Dos plot": [[369, "bands-and-dos-plot"], [402, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[370, "plotting-bandsdosplot"], [371, "plotting-bandsdosplot"]], "Fermi 2D": [[373, "fermi-2d"], [402, "fermi-2d"]], "Plotting fermi2d": [[374, "plotting-fermi2d"]], "plain_bands mode": [[374, "plain-bands-mode"]], "parametric mode": [[374, "parametric-mode"]], "Selecting band indices": [[374, "selecting-band-indices"], [376, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[376, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[376, "spin-texture-projection"]], "Spin Texture single color": [[376, "spin-texture-single-color"]], "Plotting rashba spin splitting": [[377, "plotting-rashba-spin-splitting"]], "energy = 0.60 sx projection no arrows": [[377, "energy-0-60-sx-projection-no-arrows"]], "energy = 0.60 sy projection no arrows": [[377, "energy-0-60-sy-projection-no-arrows"]], "energy = 0.60 sz projection no arrows": [[377, "energy-0-60-sz-projection-no-arrows"]], "energy = -0.90 sx projection no arrows": [[377, "energy-0-90-sx-projection-no-arrows"]], "energy = -0.90 sy projection no arrows": [[377, "energy-0-90-sy-projection-no-arrows"]], "energy = -0.90 sz projection no arrows": [[377, "energy-0-90-sz-projection-no-arrows"]], "energy = 0.60 sx projection with arrows": [[377, "energy-0-60-sx-projection-with-arrows"]], "energy = -0.90 sx projection with arrows": [[377, "energy-0-90-sx-projection-with-arrows"]], "Fermi 3D": [[379, "fermi-3d"], [402, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[380, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[380, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[380, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[380, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[382, "plotting-fermi3d-cross-section"]], "Cross section": [[382, "cross-section"]], "Cross section. Save slice": [[382, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[383, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[384, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[385, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[386, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[387, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[387, "spin-texture-mode"]], "Other": [[389, "other"], [402, "other"]], "Example of kmesh_generator": [[390, "example-of-kmesh-generator"]], "Plotting Kmesh": [[390, "plotting-kmesh"]], "Example of finding the bandgap": [[391, "example-of-finding-the-bandgap"], [392, "example-of-finding-the-bandgap"]], "Other properties": [[392, "other-properties"]], "Bands": [[392, "bands"]], "Projections": [[392, "projections"]], "Gradients": [[392, "gradients"]], "Band/Fermi velocities": [[392, "band-fermi-velocities"]], "Effective mass": [[392, "effective-mass"]], "Example of kpath_generator": [[393, "example-of-kpath-generator"]], "Plotting K Path": [[393, "plotting-k-path"]], "PyPoscar": [[395, "pyposcar"], [402, "pyposcar"]], "Visualizing Clusters in Bi2Se3 Slab": [[396, "visualizing-clusters-in-bi2se3-slab"]], "Utility function for creating GIF visualizations": [[396, "utility-function-for-creating-gif-visualizations"], [397, "utility-function-for-creating-gif-visualizations"], [400, "utility-function-for-creating-gif-visualizations"]], "Parsing the POSCAR and Identifying Clusters": [[396, "parsing-the-poscar-and-identifying-clusters"]], "Visualizing the Clusters": [[396, "visualizing-the-clusters"]], "Finding defects in a POSCAR file": [[397, "finding-defects-in-a-poscar-file"]], "Finding defects": [[397, "finding-defects"]], "Analyzing Radial Distribution Functions (RDF)": [[398, "analyzing-radial-distribution-functions-rdf"]], "Parsing the POSCAR file": [[398, "parsing-the-poscar-file"]], "Computing RDF and KDE Curves": [[398, "computing-rdf-and-kde-curves"]], "Visualizing the Results": [[398, "visualizing-the-results"]], "Substituting Atoms in a POSCAR File": [[399, "substituting-atoms-in-a-poscar-file"]], "Reading and Parsing the POSCAR File": [[399, "reading-and-parsing-the-poscar-file"]], "Atom Substitution": [[399, "atom-substitution"]], "Visualization of Atomic Structures": [[399, "visualization-of-atomic-structures"]], "Creating GIFs for Visualization": [[399, "creating-gifs-for-visualization"]], "Modifying a POSCAR File: Scaling, Supercells, and Defects": [[400, "modifying-a-poscar-file-scaling-supercells-and-defects"]], "Scaling Vacuum Space in the Lattice": [[400, "scaling-vacuum-space-in-the-lattice"]], "Creating a Supercell": [[400, "creating-a-supercell"]], "Introducing Defects": [[400, "introducing-defects"]], "Examples": [[402, "examples"]], "Authors & Citation": [[403, "authors-citation"]], "Citing PyProcar": [[403, "citing-pyprocar"], [404, "citing-pyprocar"]], "Authors": [[403, "authors"]], "Contributors": [[403, "contributors"]], "Developers": [[403, "developers"]], "License": [[403, "license"]], "Getting started": [[404, "getting-started"]], "Installation": [[404, "installation"], [405, "installation"]], "Paper": [[404, "paper"]], "Support": [[404, "support"]], "Installing with pip": [[405, "installing-with-pip"]], "Installing with conda": [[405, "installing-with-conda"]], "Cloning through GitHub": [[405, "cloning-through-github"]], "After Installation": [[405, "after-installation"]], "Why PyProcar?": [[406, "why-pyprocar"]], "PyProcar": [[407, "pyprocar"]], "Indices and tables": [[407, "indices-and-tables"]], "Atomic Projections": [[408, "atomic-projections"]], "1. Spin projection": [[408, "spin-projection"]], "2. Atom projection": [[408, "atom-projection"]], "3. Orbital projection": [[408, "orbital-projection"]], "Concatenating multiple calculations": [[410, "concatenating-multiple-calculations"]], "Compare bands": [[411, "compare-bands"]], "1. mode='plain'": [[412, "mode-plain"]], "2. mode='parametric'": [[412, "mode-parametric"]], "3. mode='parametric_line'": [[412, "mode-parametric-line"]], "4. mode='stack'": [[412, "mode-stack"]], "5. mode='stack_species'": [[412, "mode-stack-species"]], "6. mode='stack_orbitals'": [[412, "mode-stack-orbitals"]], "Accessing Electronic Band Structure": [[413, "accessing-electronic-band-structure"]], "2D spin-texture": [[414, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[414, "translate-and-rotate-the-2d-kpoint-mesh"]], "Export plot as a matplotlib.pyplot object": [[414, "export-plot-as-a-matplotlib-pyplot-object"], [421, "export-plot-as-a-matplotlib-pyplot-object"], [409, "export-plot-as-a-matplotlib-pyplot-object"]], "3D Fermi surface": [[415, "d-fermi-surface"]], "3D surfaces": [[415, "d-surfaces"]], "Keyboard shortcuts": [[415, "keyboard-shortcuts"]], "Filtering data": [[416, "filtering-data"]], "To filter selected orbitals": [[416, "to-filter-selected-orbitals"]], "To filter selected k-points": [[416, "to-filter-selected-k-points"]], "To filter selected spins": [[416, "to-filter-selected-spins"]], "To filter selected atoms": [[416, "to-filter-selected-atoms"]], "User Guide": [[417, "user-guide"]], "Further Details": [[417, "further-details"]], "K Path": [[418, "k-path"]], "Accessing Kpath Information": [[418, "accessing-kpath-information"]], "Repair": [[419, "repair"]], "Accessing Structure Information": [[420, "accessing-structure-information"]], "Band unfolding": [[421, "band-unfolding"]], "band structure plotting Options": [[0, "band-structure-plotting-options"]], "spin_colors": [[0, "spin-colors"], [2, "spin-colors"], [4, "spin-colors"]], "color": [[0, "color"], [3, "color"]], "cmap": [[0, "cmap"], [2, "cmap"], [3, "cmap"]], "clim": [[0, "clim"], [2, "clim"], [3, "clim"]], "fermi_color": [[0, "fermi-color"], [2, "fermi-color"]], "fermi_linestyle": [[0, "fermi-linestyle"], [2, "fermi-linestyle"]], "fermi_linewidth": [[0, "fermi-linewidth"], [2, "fermi-linewidth"]], "grid": [[0, "grid"], [1, "grid"], [2, "grid"], [238, "grid"], [258, "grid"]], "grid_axis": [[0, "grid-axis"], [2, "grid-axis"]], "grid_color": [[0, "grid-color"], [2, "grid-color"]], "grid_linestyle": [[0, "grid-linestyle"], [2, "grid-linestyle"]], "grid_linewidth": [[0, "grid-linewidth"], [2, "grid-linewidth"]], "grid_which": [[0, "grid-which"], [2, "grid-which"]], "label": [[0, "label"]], "legend": [[0, "legend"], [2, "legend"], [239, "legend"], [259, "legend"]], "linestyle": [[0, "linestyle"], [2, "linestyle"], [3, "linestyle"]], "linewidth": [[0, "linewidth"], [2, "linewidth"], [3, "linewidth"]], "marker": [[0, "marker"], [2, "marker"], [3, "marker"]], "markersize": [[0, "markersize"], [2, "markersize"]], "opacity": [[0, "opacity"], [2, "opacity"]], "plot_color_bar": [[0, "plot-color-bar"], [2, "plot-color-bar"], [3, "plot-color-bar"]], "savefig": [[0, "savefig"], [2, "savefig"], [69, "savefig"]], "title": [[0, "title"], [2, "title"]], "weighted_color": [[0, "weighted-color"], [2, "weighted-color"]], "weighted_width": [[0, "weighted-width"], [2, "weighted-width"]], "figure_size": [[0, "figure-size"], [2, "figure-size"]], "dpi": [[0, "dpi"], [2, "dpi"], [3, "dpi"]], "band structure 2d plotting Options": [[1, "band-structure-2d-plotting-options"]], "surface_cmap": [[1, "surface-cmap"], [4, "surface-cmap"]], "surface_color": [[1, "surface-color"], [4, "surface-color"]], "surface_spinpol_colors": [[1, "surface-spinpol-colors"]], "surface_bands_colors": [[1, "surface-bands-colors"], [4, "surface-bands-colors"]], "surface_opacity": [[1, "surface-opacity"], [4, "surface-opacity"]], "surface_clim": [[1, "surface-clim"], [4, "surface-clim"]], "extended_zone_directions": [[1, "extended-zone-directions"], [4, "extended-zone-directions"]], "supercell": [[1, "supercell"], [4, "supercell"], [119, "supercell"], [307, "supercell"]], "projection_accuracy": [[1, "projection-accuracy"], [4, "projection-accuracy"]], "interpolation_factor": [[1, "interpolation-factor"], [4, "interpolation-factor"]], "brillouin_zone_style": [[1, "brillouin-zone-style"], [4, "brillouin-zone-style"]], "brillouin_zone_line_width": [[1, "brillouin-zone-line-width"], [4, "brillouin-zone-line-width"]], "brillouin_zone_color": [[1, "brillouin-zone-color"], [4, "brillouin-zone-color"]], "brillouin_zone_opacity": [[1, "brillouin-zone-opacity"], [4, "brillouin-zone-opacity"]], "texture_cmap": [[1, "texture-cmap"], [4, "texture-cmap"]], "texture_color": [[1, "texture-color"], [4, "texture-color"]], "texture_size": [[1, "texture-size"], [4, "texture-size"]], "texture_scale": [[1, "texture-scale"], [4, "texture-scale"]], "texture_opacity": [[1, "texture-opacity"], [4, "texture-opacity"]], "add_axes": [[1, "add-axes"], [4, "add-axes"]], "energy_lim": [[1, "energy-lim"]], "x_axes_label": [[1, "x-axes-label"], [4, "x-axes-label"]], "y_axes_label": [[1, "y-axes-label"], [4, "y-axes-label"]], "z_axes_label": [[1, "z-axes-label"], [4, "z-axes-label"]], "axes_label_color": [[1, "axes-label-color"], [4, "axes-label-color"]], "axes_line_width": [[1, "axes-line-width"], [4, "axes-line-width"]], "add_scalar_bar": [[1, "add-scalar-bar"], [4, "add-scalar-bar"]], "scalar_bar_labels": [[1, "scalar-bar-labels"], [4, "scalar-bar-labels"]], "scalar_bar_italic": [[1, "scalar-bar-italic"], [4, "scalar-bar-italic"]], "scalar_bar_bold": [[1, "scalar-bar-bold"], [4, "scalar-bar-bold"]], "scalar_bar_title_font_size": [[1, "scalar-bar-title-font-size"], [4, "scalar-bar-title-font-size"]], "scalar_bar_label_font_size": [[1, "scalar-bar-label-font-size"], [4, "scalar-bar-label-font-size"]], "scalar_bar_position_x": [[1, "scalar-bar-position-x"], [4, "scalar-bar-position-x"]], "scalar_bar_position_y": [[1, "scalar-bar-position-y"], [4, "scalar-bar-position-y"]], "scalar_bar_color": [[1, "scalar-bar-color"], [4, "scalar-bar-color"]], "background_color": [[1, "background-color"], [4, "background-color"]], "orbit_gif_n_points": [[1, "orbit-gif-n-points"], [4, "orbit-gif-n-points"]], "orbit_gif_step": [[1, "orbit-gif-step"], [4, "orbit-gif-step"]], "orbit_mp4_n_points": [[1, "orbit-mp4-n-points"], [4, "orbit-mp4-n-points"]], "orbit_mp4_step": [[1, "orbit-mp4-step"], [4, "orbit-mp4-step"]], "clip_brillouin_zone": [[1, "clip-brillouin-zone"]], "clip_brillouin_zone_factor": [[1, "clip-brillouin-zone-factor"]], "grid_xtitle": [[1, "grid-xtitle"]], "grid_ytitle": [[1, "grid-ytitle"]], "grid_ztitle": [[1, "grid-ztitle"]], "add_fermi_plane": [[1, "add-fermi-plane"]], "fermi_plane_opacity": [[1, "fermi-plane-opacity"]], "fermi_plane_color": [[1, "fermi-plane-color"]], "fermi_plane_size": [[1, "fermi-plane-size"]], "show_fermi_plane_text": [[1, "show-fermi-plane-text"]], "fermi_text_position": [[1, "fermi-text-position"]], "plotter_offscreen": [[1, "plotter-offscreen"], [4, "plotter-offscreen"]], "plotter_camera_pos": [[1, "plotter-camera-pos"], [4, "plotter-camera-pos"]], "isoslider_title": [[1, "isoslider-title"], [4, "isoslider-title"]], "isoslider_style": [[1, "isoslider-style"], [4, "isoslider-style"]], "isoslider_color": [[1, "isoslider-color"], [4, "isoslider-color"]], "cross_section_slice_linewidth": [[1, "cross-section-slice-linewidth"], [4, "cross-section-slice-linewidth"]], "cross_section_slice_show_area": [[1, "cross-section-slice-show-area"], [4, "cross-section-slice-show-area"]], "dos plotting Options": [[2, "dos-plotting-options"]], "colors": [[2, "colors"]], "font": [[2, "font"]], "font_size": [[2, "font-size"]], "plot_bar": [[2, "plot-bar"]], "plot_total": [[2, "plot-total"]], "spin_labels": [[2, "spin-labels"]], "verbose": [[2, "verbose"]], "stack_y_label": [[2, "stack-y-label"]], "x_label": [[2, "x-label"], [3, "x-label"]], "y_label": [[2, "y-label"], [3, "y-label"]], "fermi surface 2d plotting Options": [[3, "fermi-surface-2d-plotting-options"]], "add_axes_labels": [[3, "add-axes-labels"], [65, "add-axes-labels"]], "add_legend": [[3, "add-legend"], [66, "add-legend"]], "no_arrow": [[3, "no-arrow"]], "arrow_color": [[3, "arrow-color"]], "arrow_density": [[3, "arrow-density"]], "arrow_size": [[3, "arrow-size"], [4, "arrow-size"]], "spin_projection": [[3, "spin-projection"]], "fermi surface 3d plotting Options": [[4, "fermi-surface-3d-plotting-options"]], "pyprocar.core.BrillouinZone": [[6, "pyprocar-core-brillouinzone"]], "__init__": [[7, "init"], [10, "init"], [19, "init"], [64, "init"], [73, "init"], [81, "init"], [88, "init"], [97, "init"], [123, "init"], [142, "init"], [144, "init"], [146, "init"], [148, "init"], [151, "init"], [164, "init"], [173, "init"], [175, "init"], [177, "init"], [183, "init"], [185, "init"], [191, "init"], [236, "init"], [256, "init"], [276, "init"], [286, "init"], [296, "init"], [306, "init"], [313, "init"]], "wigner_seitz": [[8, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[9, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[11, "coupled-to-uncoupled-basis"]], "dos_sum": [[12, "dos-sum"]], "get_current_basis": [[13, "get-current-basis"]], "is_non_collinear": [[14, "is-non-collinear"], [42, "is-non-collinear"]], "n_dos": [[15, "n-dos"]], "n_energies": [[16, "n-energies"]], "n_spins": [[17, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[18, "pyprocar-core-electronicbandstructure"]], "bands_gradient": [[20, "bands-gradient"]], "bands_gradient_mesh": [[21, "bands-gradient-mesh"]], "bands_hessian": [[22, "bands-hessian"]], "bands_hessian_mesh": [[23, "bands-hessian-mesh"]], "bands_mesh": [[24, "bands-mesh"]], "calculate_scalar_gradient": [[25, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[26, "calculate-scalar-integral"]], "create_nd_mesh": [[27, "create-nd-mesh"]], "create_scaler_mesh": [[28, "create-scaler-mesh"]], "create_vector_mesh": [[29, "create-vector-mesh"]], "ebs_ipr": [[30, "ebs-ipr"]], "ebs_ipr_atom": [[31, "ebs-ipr-atom"]], "ebs_sum": [[32, "ebs-sum"]], "fermi_speed": [[33, "fermi-speed"]], "fermi_speed_mesh": [[34, "fermi-speed-mesh"]], "fermi_velocity": [[35, "fermi-velocity"]], "fermi_velocity_mesh": [[36, "fermi-velocity-mesh"]], "harmonic_average_effective_mass": [[37, "harmonic-average-effective-mass"]], "harmonic_average_effective_mass_mesh": [[38, "harmonic-average-effective-mass-mesh"]], "ibz2fbz": [[39, "ibz2fbz"]], "index_mesh": [[40, "index-mesh"]], "interpolate_mesh_grid": [[41, "interpolate-mesh-grid"]], "kpoints_cartesian": [[43, "kpoints-cartesian"], [186, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[44, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[45, "kpoints-mesh"]], "kpoints_reduced": [[46, "kpoints-reduced"], [187, "kpoints-reduced"]], "mesh_to_array": [[47, "mesh-to-array"]], "n_kx": [[48, "n-kx"]], "n_ky": [[49, "n-ky"]], "n_kz": [[50, "n-kz"]], "natoms": [[51, "natoms"], [114, "natoms"]], "nbands": [[52, "nbands"]], "nkpoints": [[53, "nkpoints"]], "norbitals": [[54, "norbitals"]], "nprincipals": [[55, "nprincipals"]], "nspins": [[56, "nspins"]], "plot_kpoints": [[57, "plot-kpoints"]], "projected_mesh": [[58, "projected-mesh"]], "projected_phase_mesh": [[59, "projected-phase-mesh"]], "ravel_array": [[60, "ravel-array"]], "unfold": [[61, "unfold"]], "weights_mesh": [[62, "weights-mesh"]], "pyprocar.core.FermiSurface": [[63, "pyprocar-core-fermisurface"]], "find_energy": [[67, "find-energy"]], "plot": [[68, "plot"]], "show": [[70, "show"], [253, "show"], [273, "show"]], "spin_texture": [[71, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[72, "pyprocar-core-fermisurface3d"]], "extend_surface": [[74, "extend-surface"]], "project_atomic_projections": [[75, "project-atomic-projections"]], "project_fermi_speed": [[76, "project-fermi-speed"]], "project_fermi_velocity": [[77, "project-fermi-velocity"]], "project_harmonic_effective_mass": [[78, "project-harmonic-effective-mass"]], "project_spin_texture_atomic_projections": [[79, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[80, "pyprocar-core-isosurface"]], "dxyz": [[82, "dxyz"]], "nX": [[83, "nx"]], "nY": [[84, "ny"]], "nZ": [[85, "nz"]], "surface_boundaries": [[86, "surface-boundaries"]], "pyprocar.core.KPath": [[87, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[89, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[90, "get-optimized-kpoints-transformed"]], "kdistances": [[91, "kdistances"]], "nsegments": [[92, "nsegments"]], "tick_names": [[93, "tick-names"]], "tick_positions": [[94, "tick-positions"]], "write_to_file": [[95, "write-to-file"]], "pyprocar.core.Structure": [[96, "pyprocar-core-structure"]], "a": [[98, "a"]], "alpha": [[99, "alpha"]], "atomic_numbers": [[100, "atomic-numbers"]], "b": [[101, "b"]], "beta": [[102, "beta"]], "c": [[103, "c"]], "cell_convex_hull": [[104, "cell-convex-hull"]], "density": [[105, "density"]], "gamma": [[106, "gamma"]], "get_space_group_international": [[107, "get-space-group-international"]], "get_space_group_number": [[108, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[109, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[110, "get-wyckoff-positions"]], "is_point_inside": [[111, "is-point-inside"]], "lattice_corners": [[112, "lattice-corners"]], "masses": [[113, "masses"]], "nspecies": [[115, "nspecies"]], "plot_cell_convex_hull": [[116, "plot-cell-convex-hull"]], "reciprocal_lattice": [[117, "reciprocal-lattice"], [180, "reciprocal-lattice"]], "species": [[118, "species"], [160, "species"], [169, "species"], [223, "species"]], "transform": [[120, "transform"]], "volume": [[121, "volume"]], "pyprocar.core.Surface": [[122, "pyprocar-core-surface"]], "centers": [[124, "centers"]], "export": [[125, "export"]], "faces_array": [[126, "faces-array"]], "set_color_with_cmap": [[127, "set-color-with-cmap"]], "set_scalars": [[128, "set-scalars"]], "set_vectors": [[129, "set-vectors"]], "pyprocar.io.abinit.AbinitKpoints": [[141, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[143, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[145, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[147, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[149, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[150, "pyprocar-io-lobster-lobsterparser"]], "dos": [[152, "dos"], [198, "dos"]], "dos_parametric": [[153, "dos-parametric"]], "dos_projected": [[154, "dos-projected"], [199, "dos-projected"]], "dos_to_dict": [[155, "dos-to-dict"], [200, "dos-to-dict"]], "dos_total": [[156, "dos-total"], [201, "dos-total"]], "final_structure": [[157, "final-structure"], [165, "final-structure"], [205, "final-structure"]], "initial_structure": [[158, "initial-structure"], [167, "initial-structure"], [214, "initial-structure"]], "parse_structure": [[159, "parse-structure"]], "structure": [[161, "structure"], [170, "structure"], [224, "structure"]], "structures": [[162, "structures"], [171, "structures"], [225, "structures"]], "pyprocar.io.qe.QEParser": [[163, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[166, "getkpointlabels"]], "kpoints_cart": [[168, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[172, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[174, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[176, "pyprocar-io-vasp-outcar"]], "efermi": [[178, "efermi"]], "get_symmetry_operations": [[179, "get-symmetry-operations"]], "rotations": [[181, "rotations"]], "pyprocar.io.vasp.Poscar": [[182, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[184, "pyprocar-io-vasp-procar"]], "repair": [[188, "repair"], [330, "repair"]], "symmetrize": [[189, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[190, "pyprocar-io-vasp-vaspxml"]], "bands": [[192, "bands"]], "bands_projected": [[193, "bands-projected"]], "conv": [[194, "conv"]], "convergence": [[195, "convergence"]], "convergence_electronic": [[196, "convergence-electronic"]], "convergence_ionic": [[197, "convergence-ionic"]], "energies": [[202, "energies"]], "energy": [[203, "energy"]], "fermi": [[204, "fermi"]], "forces": [[206, "forces"]], "get_general": [[207, "get-general"]], "get_params": [[208, "get-params"]], "get_scstep": [[209, "get-scstep"]], "get_set": [[210, "get-set"]], "get_structure": [[211, "get-structure"]], "get_varray": [[212, "get-varray"]], "incar": [[213, "incar"]], "is_finished": [[215, "is-finished"]], "iteration_data": [[216, "iteration-data"]], "kpoints": [[217, "kpoints"]], "kpoints_list": [[218, "kpoints-list"]], "last_energy": [[219, "last-energy"]], "parse_vasprun": [[220, "parse-vasprun"]], "potcar_info": [[221, "potcar-info"]], "read": [[222, "read"]], "text_to_bool": [[226, "text-to-bool"]], "vasp_parameters": [[227, "vasp-parameters"]], "pyprocar.plotter.DOSPlot": [[235, "pyprocar-plotter-dosplot"]], "draw_fermi": [[237, "draw-fermi"], [257, "draw-fermi"]], "plot_dos": [[240, "plot-dos"]], "plot_parametric": [[241, "plot-parametric"]], "plot_parametric_line": [[242, "plot-parametric-line"]], "plot_stack": [[243, "plot-stack"]], "plot_stack_orbitals": [[244, "plot-stack-orbitals"]], "plot_stack_species": [[245, "plot-stack-species"]], "save": [[246, "save"], [265, "save"]], "set_xlabel": [[247, "set-xlabel"], [267, "set-xlabel"]], "set_xlim": [[248, "set-xlim"], [268, "set-xlim"]], "set_xticks": [[249, "set-xticks"], [269, "set-xticks"]], "set_ylabel": [[250, "set-ylabel"], [270, "set-ylabel"]], "set_ylim": [[251, "set-ylim"], [271, "set-ylim"]], "set_yticks": [[252, "set-yticks"], [272, "set-yticks"]], "update_config": [[254, "update-config"], [274, "update-config"]], "pyprocar.plotter.EBSPlot": [[255, "pyprocar-plotter-ebsplot"]], "plot_atomic_levels": [[260, "plot-atomic-levels"]], "plot_bands": [[261, "plot-bands"]], "plot_parameteric": [[262, "plot-parameteric"]], "plot_parameteric_overlay": [[263, "plot-parameteric-overlay"]], "plot_scatter": [[264, "plot-scatter"]], "set_title": [[266, "set-title"]], "pyprocar.plotter.ProcarPlot": [[275, "pyprocar-plotter-procarplot"]], "atomicPlot": [[277, "atomicplot"]], "parametricPlot": [[278, "parametricplot"]], "plotBands": [[279, "plotbands"]], "scatterPlot": [[280, "scatterplot"]], "pyprocar.pyposcar.Poscar": [[285, "pyprocar-pyposcar-poscar"]], "add": [[287, "add"], [297, "add"]], "load_from_data": [[288, "load-from-data"]], "parse": [[289, "parse"]], "remove": [[290, "remove"], [301, "remove"]], "sort": [[291, "sort"]], "write": [[292, "write"], [304, "write"], [308, "write"]], "xyz": [[293, "xyz"]], "poscarDiff": [[294, "poscardiff"]], "pyprocar.pyposcar.poscar_modify": [[295, "pyprocar-pyposcar-poscar-modify"]], "change_elements": [[298, "change-elements"]], "pos_multiply": [[299, "pos-multiply"]], "pos_sum": [[300, "pos-sum"]], "scale_lattice": [[302, "scale-lattice"]], "shift": [[303, "shift"]], "pyprocar.pyposcar.poscar_supercell": [[305, "pyprocar-pyposcar-poscar-supercell"]], "pyprocar.scripts.FermiHandler": [[312, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[314, "create-isovalue-gif"]], "plot_fermi_cross_section": [[315, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[316, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[317, "plot-fermi-isoslider"]], "plot_fermi_surface": [[318, "plot-fermi-surface"]], "print_default_settings": [[319, "print-default-settings"]], "Band structure": [[409, "band-structure"]], "1. Plain band structure": [[409, "plain-band-structure"]], "2. Spin projection": [[409, "spin-projection"]], "3. Atom projection": [[409, "atom-projection"]], "4. Orbital projection": [[409, "orbital-projection"]], "Converting k-points from reduced to cartesian coordinates": [[409, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[409, "plotting-band-structures-with-a-discontinuous-k-path"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[6, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[7, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[8, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[9, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[10, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[11, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[12, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[13, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[14, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[15, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[16, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[17, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[18, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient (pyprocar.core.electronicbandstructure property)": [[20, "pyprocar.core.ElectronicBandStructure.bands_gradient"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[21, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian (pyprocar.core.electronicbandstructure property)": [[22, "pyprocar.core.ElectronicBandStructure.bands_hessian"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[23, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[25, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[26, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[27, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[28, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[29, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_ipr() (pyprocar.core.electronicbandstructure method)": [[30, "pyprocar.core.ElectronicBandStructure.ebs_ipr"]], "ebs_ipr_atom() (pyprocar.core.electronicbandstructure method)": [[31, "pyprocar.core.ElectronicBandStructure.ebs_ipr_atom"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[32, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "fermi_speed (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.fermi_speed"]], "fermi_speed_mesh (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.fermi_speed_mesh"]], "fermi_velocity (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.fermi_velocity"]], "fermi_velocity_mesh (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.fermi_velocity_mesh"]], "harmonic_average_effective_mass (pyprocar.core.electronicbandstructure property)": [[37, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass"]], "harmonic_average_effective_mass_mesh (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.harmonic_average_effective_mass_mesh"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "interpolate_mesh_grid() (pyprocar.core.electronicbandstructure method)": [[41, "pyprocar.core.ElectronicBandStructure.interpolate_mesh_grid"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[42, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[43, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[44, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[45, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[46, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "mesh_to_array() (pyprocar.core.electronicbandstructure method)": [[47, "pyprocar.core.ElectronicBandStructure.mesh_to_array"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[48, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[49, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[50, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[51, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[52, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[54, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[55, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[56, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[57, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[58, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[59, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "ravel_array() (pyprocar.core.electronicbandstructure method)": [[60, "pyprocar.core.ElectronicBandStructure.ravel_array"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[61, "pyprocar.core.ElectronicBandStructure.unfold"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[62, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[63, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[64, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[65, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[66, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[67, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[68, "pyprocar.core.FermiSurface.plot"]], "savefig() (pyprocar.core.fermisurface method)": [[69, "pyprocar.core.FermiSurface.savefig"]], "show() (pyprocar.core.fermisurface method)": [[70, "pyprocar.core.FermiSurface.show"]], "spin_texture() (pyprocar.core.fermisurface method)": [[71, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[72, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.__init__"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[74, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[75, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_fermi_speed() (pyprocar.core.fermisurface3d method)": [[76, "pyprocar.core.FermiSurface3D.project_fermi_speed"]], "project_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[77, "pyprocar.core.FermiSurface3D.project_fermi_velocity"]], "project_harmonic_effective_mass() (pyprocar.core.fermisurface3d method)": [[78, "pyprocar.core.FermiSurface3D.project_harmonic_effective_mass"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[79, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[80, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[81, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[82, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[83, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[84, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[85, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[86, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[87, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[88, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[89, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[90, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[91, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[92, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[93, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[94, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[95, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[96, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[97, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[101, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[102, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[103, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[104, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[105, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[106, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[107, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[108, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[109, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[110, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[111, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[113, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[114, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[116, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[117, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[118, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[119, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[120, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[121, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[122, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[123, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[124, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[125, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[126, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[127, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[128, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[129, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[141, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[142, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[143, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[144, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[145, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[146, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[147, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[148, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[149, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[150, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[151, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[153, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[156, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[157, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[158, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[159, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[160, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[161, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[162, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[163, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[164, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[165, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[166, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[167, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[168, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[169, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[170, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[171, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[172, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[173, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[174, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[175, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[176, "pyprocar.io.vasp.Outcar"]], "file_str (pyprocar.io.vasp.outcar attribute)": [[176, "pyprocar.io.vasp.Outcar.file_str"]], "filename (pyprocar.io.vasp.outcar attribute)": [[176, "pyprocar.io.vasp.Outcar.filename"]], "variables (pyprocar.io.vasp.outcar attribute)": [[176, "pyprocar.io.vasp.Outcar.variables"]], "__init__() (pyprocar.io.vasp.outcar method)": [[177, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[178, "pyprocar.io.vasp.Outcar.efermi"]], "get_symmetry_operations() (pyprocar.io.vasp.outcar method)": [[179, "pyprocar.io.vasp.Outcar.get_symmetry_operations"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[180, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[181, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[182, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[183, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[184, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[185, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[186, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[187, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[188, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[189, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[190, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[191, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[194, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[200, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[201, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[202, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[203, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[204, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[205, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[206, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[207, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[208, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[209, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[210, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[211, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[212, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[213, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[214, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[215, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[219, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[220, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[221, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[222, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[223, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[224, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[225, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[226, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[227, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[235, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[247, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[248, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[249, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[250, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[251, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[252, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[253, "pyprocar.plotter.DOSPlot.show"]], "update_config() (pyprocar.plotter.dosplot method)": [[254, "pyprocar.plotter.DOSPlot.update_config"]], "ebsplot (class in pyprocar.plotter)": [[255, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.legend"]], "plot_atomic_levels() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.plot_atomic_levels"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[265, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[266, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[267, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[268, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[269, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[270, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[271, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[272, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[273, "pyprocar.plotter.EBSPlot.show"]], "update_config() (pyprocar.plotter.ebsplot method)": [[274, "pyprocar.plotter.EBSPlot.update_config"]], "procarplot (class in pyprocar.plotter)": [[275, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[276, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[277, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[278, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[279, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[280, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "poscar (class in pyprocar.pyposcar)": [[285, "pyprocar.pyposcar.Poscar"]], "ntotal (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.Ntotal"]], "__init__() (pyprocar.pyposcar.poscar method)": [[286, "pyprocar.pyposcar.Poscar.__init__"]], "cpos (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.cpos"]], "dpos (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.dpos"]], "elm (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.elm"]], "filename (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.filename"]], "flags (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.flags"]], "lat (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.lat"]], "numbersp (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.numberSp"]], "poscar (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.poscar"]], "selectflags (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.selectFlags"]], "selective (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.selective"]], "typesp (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.typeSp"]], "verbose (pyprocar.pyposcar.poscar.self attribute)": [[286, "pyprocar.pyposcar.Poscar.self.verbose"]], "volume (pyprocar.pyposcar.self attribute)": [[286, "pyprocar.pyposcar.self.volume"]], "add() (pyprocar.pyposcar.poscar method)": [[287, "pyprocar.pyposcar.Poscar.add"]], "load_from_data() (pyprocar.pyposcar.poscar method)": [[288, "pyprocar.pyposcar.Poscar.load_from_data"]], "parse() (pyprocar.pyposcar.poscar method)": [[289, "pyprocar.pyposcar.Poscar.parse"]], "remove() (pyprocar.pyposcar.poscar method)": [[290, "pyprocar.pyposcar.Poscar.remove"]], "sort() (pyprocar.pyposcar.poscar method)": [[291, "pyprocar.pyposcar.Poscar.sort"]], "write() (pyprocar.pyposcar.poscar method)": [[292, "pyprocar.pyposcar.Poscar.write"]], "xyz() (pyprocar.pyposcar.poscar method)": [[293, "pyprocar.pyposcar.Poscar.xyz"]], "poscardiff() (in module pyprocar.pyposcar)": [[294, "pyprocar.pyposcar.poscarDiff"]], "poscar_modify (class in pyprocar.pyposcar)": [[295, "pyprocar.pyposcar.poscar_modify"]], "__init__() (pyprocar.pyposcar.poscar_modify method)": [[296, "pyprocar.pyposcar.poscar_modify.__init__"]], "add() (pyprocar.pyposcar.poscar_modify method)": [[297, "pyprocar.pyposcar.poscar_modify.add"]], "change_elements() (pyprocar.pyposcar.poscar_modify method)": [[298, "pyprocar.pyposcar.poscar_modify.change_elements"]], "pos_multiply() (pyprocar.pyposcar.poscar_modify method)": [[299, "pyprocar.pyposcar.poscar_modify.pos_multiply"]], "pos_sum() (pyprocar.pyposcar.poscar_modify method)": [[300, "pyprocar.pyposcar.poscar_modify.pos_sum"]], "remove() (pyprocar.pyposcar.poscar_modify method)": [[301, "pyprocar.pyposcar.poscar_modify.remove"]], "scale_lattice() (pyprocar.pyposcar.poscar_modify method)": [[302, "pyprocar.pyposcar.poscar_modify.scale_lattice"]], "shift() (pyprocar.pyposcar.poscar_modify method)": [[303, "pyprocar.pyposcar.poscar_modify.shift"]], "write() (pyprocar.pyposcar.poscar_modify method)": [[304, "pyprocar.pyposcar.poscar_modify.write"]], "poscar_supercell (class in pyprocar.pyposcar)": [[305, "pyprocar.pyposcar.poscar_supercell"]], "__init__() (pyprocar.pyposcar.poscar_supercell method)": [[306, "pyprocar.pyposcar.poscar_supercell.__init__"]], "supercell() (pyprocar.pyposcar.poscar_supercell method)": [[307, "pyprocar.pyposcar.poscar_supercell.supercell"]], "write() (pyprocar.pyposcar.poscar_supercell method)": [[308, "pyprocar.pyposcar.poscar_supercell.write"]], "fermihandler (class in pyprocar.scripts)": [[312, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[313, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[314, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[315, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[316, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[317, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[318, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "print_default_settings() (pyprocar.scripts.fermihandler method)": [[319, "pyprocar.scripts.FermiHandler.print_default_settings"]], "bandgap() (in module pyprocar.scripts)": [[320, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[321, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[322, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[323, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[324, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[325, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[326, "pyprocar.scripts.fermi2D"]], "fermi3d() (in module pyprocar.scripts)": [[327, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[328, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[329, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[330, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[409, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[409, "module-pyprocar.scripts.scriptBandsplot"], [410, "module-pyprocar.scripts.scriptCat"], [412, "module-pyprocar.scriptDosplot"], [414, "module-pyprocar.scripts.scriptFermi2D"], [415, "module-pyprocar.scripts.scriptFermi3D"], [416, "module-pyprocar.scripts.scriptFilter"], [419, "module-pyprocar.scripts.scriptRepair"], [421, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[409, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[410, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[410, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[412, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[414, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[414, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[415, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[415, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[416, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[416, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[419, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[419, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[421, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[421, "pyprocar.scripts.scriptUnfold.unfold"]]}})