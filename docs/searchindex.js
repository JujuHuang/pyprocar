Search.setIndex({"docnames": ["api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_vector_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_color", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi2D", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plotting_colinear", "examples/00-band_structure/plotting_compare_bands", "examples/00-band_structure/plotting_noncolinear_qe", "examples/00-band_structure/plotting_noncolinear_vasp", "examples/00-band_structure/plotting_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plotting_colinear_dos", "examples/01-dos/plotting_noncolinear_dos_qe", "examples/01-dos/plotting_noncolinear_dos_vasp", "examples/01-dos/plotting_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plotting_bandsdosplot", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plotting_fermi2d", "examples/03-fermi2d/plotting_fermi2d_spin_texture", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plotting_de_hass_van_alphen", "examples/04-fermi3d/plotting_fermi3d_cross_section", "examples/04-fermi3d/plotting_fermi3d_isoslider", "examples/04-fermi3d/plotting_fermi3d_isovalue_gif", "examples/04-fermi3d/plotting_fermi3d_plain", "examples/04-fermi3d/plotting_fermi3d_spin-polarized", "examples/04-fermi3d/plotting_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plotting_2dkmesh_generation", "examples/05-other/plotting_bandgap", "examples/05-other/plotting_kpath_generation", "examples/05-other/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_vector_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_color.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi2D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plotting_colinear.rst", "examples\\00-band_structure\\plotting_compare_bands.rst", "examples\\00-band_structure\\plotting_noncolinear_qe.rst", "examples\\00-band_structure\\plotting_noncolinear_vasp.rst", "examples\\00-band_structure\\plotting_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plotting_colinear_dos.rst", "examples\\01-dos\\plotting_noncolinear_dos_qe.rst", "examples\\01-dos\\plotting_noncolinear_dos_vasp.rst", "examples\\01-dos\\plotting_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plotting_bandsdosplot.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plotting_fermi2d.rst", "examples\\03-fermi2d\\plotting_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plotting_de_hass_van_alphen.rst", "examples\\04-fermi3d\\plotting_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plotting_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plotting_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plotting_fermi3d_plain.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plotting_2dkmesh_generation.rst", "examples\\05-other\\plotting_bandgap.rst", "examples\\05-other\\plotting_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient_mesh", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_sum", "ibz2fbz", "index_mesh", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "unfold", "update_bands_gradient_mesh", "update_bands_hessian_mesh", "update_bands_mesh", "update_index_mesh", "update_kpoints_cartesian_mesh", "update_kpoints_mesh", "update_projected_mesh", "update_projected_phase_mesh", "update_weights", "update_weights_mesh", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "calculate_effective_mass", "calculate_fermi_speed", "calculate_fermi_velocity", "calculate_first_and_second_derivative_energy", "calculate_first_and_second_derivative_energy_band", "create_spin_texture", "create_vector_texture", "extend_surface", "project_atomic_projections", "project_color", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_cross_section_box_widget", "plot_fermi_isoslider", "plot_fermi_surface", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi2D", "fermi3D", "FermiHandler", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting fermi2d noncolinear", "Computation times", "Fermi 3D", "Showing how to get van alphen fequencies from the fermi surface", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"class": [0, 3, 12, 54, 60, 61, 74, 81, 90, 116, 125, 126, 128, 129, 130, 132, 133, 135, 137, 139, 141, 144, 157, 166, 167, 168, 170, 175, 177, 183, 228, 247, 265, 274, 275, 276, 334, 335, 336, 337, 338, 339, 340, 348, 358, 360, 363, 365], "reciprocal_lattic": [0, 1, 12, 13, 61, 62, 137, 138, 153, 177, 178, 358, 365], "ndarrai": [0, 1, 3, 4, 12, 13, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 69, 72, 74, 75, 83, 84, 85, 104, 105, 106, 111, 113, 114, 116, 117, 122, 123, 153, 162, 174, 177, 178, 179, 180, 185, 186, 192, 210, 253, 254, 255, 284, 285, 354], "transformation_matrix": [0, 1, 39, 42, 83, 84, 114, 366], "option": [0, 1, 3, 4, 6, 12, 13, 22, 39, 42, 54, 55, 59, 60, 61, 62, 69, 70, 72, 74, 75, 82, 89, 101, 102, 103, 104, 105, 114, 116, 117, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 175, 177, 178, 182, 183, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 306, 312, 348, 354, 355, 359, 360, 361, 366], "list": [0, 1, 6, 12, 13, 22, 24, 51, 54, 55, 59, 60, 61, 62, 69, 70, 74, 75, 76, 80, 82, 87, 88, 90, 94, 107, 112, 116, 118, 120, 122, 129, 132, 141, 143, 147, 148, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 195, 209, 218, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 247, 248, 251, 253, 254, 255, 259, 260, 262, 263, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 309, 310, 330, 331, 348, 354, 355, 357, 358, 359, 360, 361], "int": [0, 1, 3, 4, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 60, 61, 62, 67, 70, 74, 75, 77, 78, 79, 86, 102, 108, 109, 147, 153, 154, 163, 177, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 247, 248, 253, 254, 255, 260, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 354, 355, 359, 360, 361], "none": [0, 1, 3, 4, 5, 6, 12, 13, 22, 39, 42, 51, 54, 55, 58, 60, 61, 62, 70, 72, 74, 75, 81, 82, 90, 91, 105, 116, 117, 119, 121, 137, 138, 139, 140, 144, 145, 147, 153, 175, 176, 177, 178, 182, 183, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 330, 331, 348, 354, 355, 359, 360, 361, 366], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 17, 18, 19, 20, 21, 22, 23, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 89, 90, 91, 101, 102, 103, 104, 105, 110, 113, 114, 116, 117, 119, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 157, 158, 160, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 183, 184, 187, 200, 201, 202, 203, 204, 205, 213, 215, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 349, 351, 352, 354, 355, 359, 360, 361, 364, 366], "A": [0, 3, 12, 51, 54, 58, 61, 83, 84, 90, 105, 110, 113, 118, 120, 143, 148, 153, 168, 170, 175, 177, 182, 183, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 307, 327, 330, 331, 334, 343, 345, 348, 353, 354, 355, 359, 360, 361, 366], "surfac": [0, 54, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 80, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 230, 276, 277, 278, 279, 280, 281, 288, 289, 299, 303, 333, 336, 337, 341, 343, 347, 348, 351, 352, 353, 354, 359, 362], "object": [0, 12, 54, 61, 82, 116, 121, 146, 147, 148, 157, 177, 191, 192, 206, 210, 211, 228, 247, 281, 287, 289, 314, 315, 316, 317, 318, 321, 322, 323, 324, 334, 335, 336, 337, 338, 339, 340, 348, 358, 360, 362, 363, 365], "vert": [0, 2, 74, 116, 117], "face": [0, 2, 116, 117, 118, 120, 122, 129, 133, 360], "line": [0, 230, 235, 249, 287, 318, 324, 335, 345, 348, 350, 360, 362, 366], "represent": [0, 27, 28, 43, 44, 45, 47, 48, 49, 50, 52, 74, 358, 360], "repres": [0, 14, 15, 61, 90, 116, 122, 141, 188, 189, 190, 218, 236, 287, 289, 348, 357, 360, 366], "thi": [0, 3, 5, 8, 12, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 59, 60, 61, 68, 69, 74, 80, 116, 119, 128, 129, 130, 133, 134, 135, 137, 139, 141, 143, 147, 157, 160, 187, 200, 201, 202, 203, 208, 214, 219, 220, 223, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 291, 292, 303, 306, 308, 310, 312, 315, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "calcul": [0, 2, 3, 17, 18, 22, 25, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 144, 154, 157, 163, 167, 177, 182, 188, 189, 190, 191, 196, 206, 209, 210, 211, 212, 214, 215, 220, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 303, 306, 307, 308, 309, 318, 324, 339, 344, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "correspond": [0, 51, 54, 69, 74, 111, 288, 348, 353, 354, 359, 361, 366], "reciproc": [0, 12, 39, 61, 70, 111, 124, 126, 129, 139, 153, 173, 177, 312, 354, 366], "lattic": [0, 12, 23, 39, 61, 70, 90, 91, 92, 93, 95, 96, 97, 100, 105, 106, 111, 114, 124, 126, 129, 132, 139, 153, 173, 177, 307, 312, 354, 365, 366], "paramet": [0, 3, 6, 12, 17, 22, 23, 39, 42, 51, 54, 58, 59, 60, 61, 67, 69, 70, 72, 74, 82, 83, 84, 89, 90, 101, 102, 103, 104, 105, 113, 114, 116, 119, 121, 122, 123, 141, 143, 144, 147, 153, 157, 167, 168, 170, 175, 177, 182, 183, 206, 220, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 310, 312, 345, 348, 354, 355, 356, 357, 359, 360, 361, 364, 366], "np": [0, 3, 12, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 69, 72, 74, 83, 84, 85, 104, 105, 106, 111, 113, 114, 123, 153, 162, 173, 174, 177, 179, 180, 185, 186, 192, 210, 253, 254, 255, 284, 285, 287, 344, 345, 354, 366], "us": [0, 42, 54, 61, 74, 80, 116, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 148, 157, 167, 182, 192, 206, 210, 211, 214, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 267, 271, 272, 273, 276, 277, 278, 279, 280, 281, 283, 284, 287, 288, 289, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 312, 318, 324, 330, 331, 335, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "gener": [0, 74, 124, 128, 129, 130, 133, 137, 277, 286, 287, 288, 289, 290, 302, 303, 304, 306, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 351, 352, 355, 357, 359, 360, 361, 362], "brillouin": [0, 39, 74, 124, 129, 277, 278, 279, 280, 281, 289, 355, 359, 360, 366], "zone": [0, 39, 74, 124, 129, 277, 278, 279, 280, 281, 289, 355, 358, 359, 360, 366], "usgin": 0, "wigner": [0, 2, 362], "seitz": [0, 2, 362], "3": [0, 3, 5, 6, 12, 14, 15, 17, 27, 28, 42, 61, 74, 90, 116, 118, 147, 277, 287, 289, 309, 334, 345, 348, 350, 359, 361, 362, 366], "float": [0, 6, 12, 13, 22, 39, 51, 58, 61, 62, 74, 75, 76, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 115, 116, 118, 121, 153, 177, 178, 182, 183, 184, 230, 234, 235, 236, 237, 238, 249, 253, 254, 255, 259, 262, 263, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 354, 359, 360], "ani": [0, 3, 4, 61, 200, 203, 287, 289, 348, 354, 356, 359, 360, 364], "transform": [0, 42, 74, 83, 84, 113, 348, 354], "appli": [0, 23, 74, 276, 348, 353, 354, 364], "unit": [0, 115], "cell": [0, 2, 74, 98, 99, 109, 112, 115, 351, 352, 360, 366], "rotat": [0, 23, 90, 91, 175, 176, 288, 330, 331, 358, 360, 362, 365], "supercel": [0, 61, 62, 277, 278, 279, 280, 281, 289, 360, 361, 366], "default": [0, 3, 6, 12, 22, 39, 42, 54, 59, 60, 61, 69, 70, 72, 74, 82, 89, 101, 102, 103, 104, 105, 114, 116, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 175, 177, 182, 183, 228, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 312, 318, 324, 331, 354, 355, 357, 359, 360, 361], "method": [0, 3, 12, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 81, 83, 84, 90, 105, 110, 113, 116, 135, 137, 139, 141, 143, 144, 153, 157, 160, 166, 168, 170, 175, 177, 182, 183, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 276, 277, 278, 279, 280, 281, 334, 335, 336, 337, 338, 339, 340, 348, 354, 358, 362], "attribut": [0, 3, 12, 61, 74, 81, 90, 116, 144, 157, 170, 177, 183, 315, 348, 358], "brillouinzon": [1, 2, 129], "initi": [1, 62, 75, 117, 146, 207, 276, 278, 279, 335, 348], "polydata": [1, 39, 62, 75, 116, 117, 129, 133], "form": [2, 174, 210, 211, 348, 358], "tupl": [2, 61, 70, 80, 116, 277, 278, 279, 280, 281, 287, 289, 360], "contain": [2, 3, 54, 61, 74, 82, 120, 139, 259, 262, 283, 287, 288, 289, 303, 312, 330, 331, 348, 354, 359, 360, 361], "return": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 220, 228, 230, 231, 232, 233, 239, 240, 243, 246, 247, 252, 280, 281, 282, 287, 288, 289, 290, 315, 348, 359, 360], "type": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 129, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 187, 191, 192, 193, 194, 206, 210, 211, 215, 228, 230, 231, 232, 233, 239, 240, 243, 246, 247, 252, 273, 280, 281, 282, 284, 285, 287, 288, 289, 290, 303, 348, 353, 354, 359, 360], "n_vert": 2, "n_face": 2, "energi": [3, 4, 10, 12, 54, 58, 59, 60, 61, 125, 126, 127, 129, 139, 150, 153, 172, 177, 197, 212, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 312, 330, 331, 334, 335, 336, 337, 338, 339, 340, 351, 352, 354, 358, 359, 360, 362, 366], "dtype": [3, 4], "float64": [3, 4], "total": [3, 4, 125, 129, 149, 150, 193, 194, 234, 236, 237, 238, 287, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 354, 355, 357, 361, 362], "project": [3, 4, 5, 12, 13, 22, 23, 40, 41, 49, 50, 54, 60, 61, 71, 72, 73, 125, 126, 127, 129, 147, 148, 149, 157, 182, 186, 192, 193, 234, 235, 253, 254, 255, 277, 278, 279, 280, 281, 284, 285, 287, 289, 310, 312, 314, 316, 317, 318, 321, 322, 323, 324, 330, 339, 348, 351, 352, 355, 356, 357, 358, 360, 361, 362], "interpolation_factor": [3, 4, 61, 62, 74, 75, 153, 177, 178, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 354, 360, 366], "1": [3, 4, 5, 6, 12, 22, 53, 61, 62, 74, 75, 80, 114, 116, 147, 153, 177, 178, 183, 184, 230, 234, 235, 237, 238, 249, 268, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 309, 310, 314, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 355, 359, 361, 362, 366], "densiti": [3, 6, 125, 129, 134, 144, 149, 150, 157, 193, 223, 228, 233, 234, 273, 283, 287, 288, 294, 298, 303, 308, 309, 325, 351, 352, 353, 354, 359, 361, 362, 365], "state": [3, 6, 74, 125, 129, 134, 144, 149, 150, 193, 228, 233, 234, 273, 283, 287, 288, 294, 298, 303, 309, 325, 348, 351, 352, 353, 354, 359, 362], "function": [3, 61, 74, 80, 119, 137, 147, 187, 200, 201, 202, 203, 219, 223, 282, 283, 284, 285, 287, 288, 289, 297, 299, 303, 306, 308, 312, 348, 351, 352, 354, 356, 357, 359, 360, 362, 366], "theori": [3, 287, 308, 352], "point": [3, 23, 24, 35, 37, 39, 74, 76, 77, 78, 79, 82, 105, 127, 129, 130, 135, 174, 181, 253, 254, 255, 267, 283, 287, 289, 290, 343, 345, 351, 352, 356, 358, 359, 360, 362, 366], "spectrum": 3, "shape": [3, 12, 14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "n_do": 3, "each": [3, 14, 15, 16, 40, 41, 53, 61, 74, 76, 107, 116, 125, 129, 195, 205, 209, 251, 253, 254, 255, 287, 289, 348, 353, 354, 355, 356, 357, 358, 360, 361, 362], "element": [3, 151, 152, 155, 159, 161, 164, 200, 203, 251, 287, 361], "orbit": [3, 5, 6, 7, 12, 22, 36, 60, 61, 147, 234, 235, 236, 237, 238, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 315, 316, 317, 318, 321, 322, 323, 324, 330, 331, 338, 339, 351, 352, 356, 357, 358, 359, 360, 362, 366], "spin": [3, 6, 11, 22, 38, 54, 60, 61, 68, 73, 127, 141, 147, 150, 233, 234, 235, 236, 237, 238, 247, 248, 253, 254, 255, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 303, 307, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 327, 330, 333, 334, 336, 337, 338, 341, 343, 344, 345, 347, 348, 351, 352, 355, 357, 358, 360, 362, 366], "etc": [3, 353, 354, 360], "n_atom": [3, 12, 40, 41, 54], "n_princip": 3, "n_orbit": [3, 40, 41, 54], "n_spin": [3, 12, 40, 41, 54, 125, 129], "i_princip": 3, "work": [3, 61, 289, 327, 330, 348, 349, 354, 359, 360], "like": [3, 60, 348, 353, 354, 358], "princip": [3, 22, 37, 234, 235, 237, 238], "quantum": [3, 6, 22, 37, 157, 222, 223, 224, 225, 226, 234, 235, 237, 238, 308, 309, 313, 319, 320, 325, 347, 352, 353, 354, 358, 362], "number": [3, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 61, 72, 77, 78, 79, 86, 94, 101, 102, 108, 109, 122, 154, 163, 234, 235, 237, 238, 277, 280, 287, 289, 290, 348, 354, 356, 358, 360, 362, 363, 364], "n": [3, 6, 61, 74, 90, 118, 312, 362, 363], "The": [3, 6, 9, 10, 11, 12, 17, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 54, 58, 59, 60, 61, 67, 69, 72, 74, 77, 78, 79, 82, 83, 84, 86, 87, 88, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 141, 144, 150, 153, 157, 167, 168, 170, 174, 175, 177, 179, 180, 182, 183, 185, 186, 191, 193, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 239, 240, 241, 243, 244, 247, 249, 253, 254, 255, 263, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 309, 310, 312, 318, 321, 324, 327, 334, 344, 345, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "last": [3, 151, 155, 159, 164, 172, 173, 189, 196, 212, 217, 354], "index": [3, 6, 24, 46, 54, 67, 147, 281, 288, 352, 353, 354, 358, 359, 361, 362], "should": [3, 22, 84, 122, 181, 201, 286, 287, 344, 348, 353, 354, 355, 359, 360, 361, 366], "0": [3, 5, 6, 39, 60, 61, 62, 74, 80, 114, 116, 147, 181, 183, 184, 234, 249, 269, 277, 278, 279, 280, 281, 287, 288, 289, 291, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 353, 354, 357, 359, 360, 361, 362, 363, 364, 366], "2": [3, 5, 6, 61, 74, 80, 147, 287, 289, 309, 310, 312, 314, 316, 317, 322, 323, 331, 334, 336, 337, 338, 339, 348, 359, 361, 362, 366], "": [3, 5, 6, 134, 147, 287, 289, 306, 334, 345, 348, 353, 357, 359, 360, 361, 362], "p": [3, 5, 287, 289, 312, 314, 353, 357, 360, 361, 363], "d": [3, 5, 14, 15, 287, 289, 314, 348, 353, 354, 356, 357, 360], "i_orbit": 3, "similar": [3, 287, 289, 306, 348, 357, 360], "angular": [3, 362], "l": [3, 5, 310, 353, 354, 362, 366], "same": [3, 6, 84, 90, 122, 283, 289, 294, 303, 307, 309, 310, 312, 318, 324, 348, 353, 354, 356, 357, 359, 360, 361, 362], "follow": [3, 74, 129, 181, 223, 273, 287, 289, 303, 307, 309, 310, 312, 331, 343, 345, 348, 350, 353, 354, 355, 357, 358, 360, 361, 362, 366], "order": [3, 5, 6, 90, 287, 289, 345, 348, 353, 354, 356, 360], "4": [3, 5, 6, 39, 61, 147, 287, 289, 314, 315, 317, 318, 321, 323, 324, 330, 334, 338, 339, 348, 353, 356, 360, 362, 366], "5": [3, 5, 6, 74, 101, 102, 103, 104, 116, 147, 182, 278, 279, 287, 289, 307, 310, 312, 314, 315, 317, 318, 321, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 343, 345, 348, 353, 354, 356, 360, 362, 363, 366], "6": [3, 6, 60, 147, 287, 288, 289, 307, 314, 315, 317, 318, 321, 323, 324, 327, 330, 331, 336, 337, 338, 339, 343, 345, 348, 353, 354, 356, 359, 360, 362, 363], "7": [3, 6, 147, 287, 289, 314, 315, 317, 318, 321, 323, 324, 330, 334, 336, 337, 338, 339, 343, 348, 353, 354, 356, 357, 360, 362], "8": [3, 6, 147, 287, 289, 310, 314, 315, 316, 317, 318, 321, 322, 323, 324, 330, 334, 336, 337, 338, 339, 353, 354, 356, 357, 360, 362], "py": [3, 6, 147, 287, 289, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 350, 360, 361, 362], "pz": [3, 6, 147, 287, 289, 360, 361, 362], "px": [3, 6, 147, 287, 289, 360, 361, 362], "dxy": [3, 6, 147, 287, 289, 360, 362], "dyz": [3, 6, 147, 287, 289, 360, 362], "dz2": [3, 6, 147, 287, 289, 360, 362], "dxz": [3, 6, 147, 287, 289, 360, 362], "dx2": [3, 362], "y2": [3, 6, 74, 147, 287, 289, 290, 343, 360], "i_spin": 3, "magnet": [3, 353, 354, 362], "m": [3, 5, 115, 307, 353, 354, 355, 362, 366], "up": [3, 141, 150, 181, 287, 318, 324, 350, 354, 357, 360, 361, 366], "down": [3, 150, 287, 318, 324, 354, 357, 360, 361, 366], "increas": [3, 61, 74, 289, 360, 366], "factor": [3, 61, 74, 144, 153, 177, 183, 277, 278, 279, 280, 281, 285, 287, 289, 360, 366], "interpol": [3, 59, 60, 74, 80, 128, 129, 144, 153, 177, 183, 277, 278, 279, 280, 281, 284, 285, 287, 289, 354, 360], "densityofst": [4, 5, 6, 7, 8, 9, 10, 11, 129, 146, 147, 148, 191, 228, 229, 273], "convert": [5, 187, 362], "coupl": [5, 316, 322, 360], "uncoupl": 5, "assum": [5, 348], "ar": [5, 39, 42, 58, 60, 74, 82, 116, 129, 150, 157, 219, 236, 273, 284, 285, 287, 288, 289, 303, 307, 318, 324, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362], "coupled_orbit": 5, "j": [5, 345, 348, 353], "uncoupled_orbit": 5, "ret": [5, 6, 22, 200, 203], "atom": [6, 22, 33, 60, 61, 71, 73, 90, 91, 94, 107, 108, 129, 132, 147, 148, 154, 157, 163, 234, 235, 236, 237, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 303, 314, 316, 317, 318, 321, 322, 323, 324, 330, 331, 338, 339, 351, 352, 357, 358, 359, 360, 362, 365, 366], "principal_q_numb": [6, 22, 234, 235, 237, 238], "sum_noncolinear": [6, 22], "bool": [6, 8, 12, 22, 25, 39, 60, 82, 84, 105, 168, 182, 234, 235, 236, 237, 238, 254, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 354, 355, 359, 360, 361], "true": [6, 22, 39, 81, 82, 135, 136, 168, 169, 182, 208, 234, 235, 236, 237, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 307, 309, 310, 312, 315, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 354, 355, 357, 359, 360, 364, 366], "tabl": [6, 287, 289, 360, 366], "lm": [6, 353, 354, 362], "tot": [6, 354, 362], "x2": [6, 74, 147, 287, 289, 290, 343, 360], "need": [6, 39, 137, 147, 208, 267, 287, 306, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 354, 356, 357, 360, 361, 366], "sume": [6, 147], "over": [6, 17, 22, 147, 289, 348, 349, 351, 352, 357, 358, 360, 362], "count": [6, 287, 289, 353, 354, 359, 360, 361], "from": [6, 60, 61, 116, 119, 124, 129, 130, 133, 137, 139, 144, 147, 157, 283, 286, 287, 289, 333, 341, 343, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 364, 366], "zero": [6, 287, 289, 353, 354, 360, 362], "input": [6, 167, 223, 286, 287, 289, 292, 303, 306, 309, 310, 354, 355, 360, 364], "i": [6, 8, 12, 14, 15, 16, 25, 40, 41, 42, 53, 54, 60, 61, 72, 74, 105, 114, 116, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 143, 157, 167, 181, 201, 208, 221, 222, 223, 224, 225, 226, 227, 228, 233, 247, 271, 272, 273, 274, 276, 283, 285, 286, 287, 288, 289, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 312, 315, 318, 324, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 366], "sum": [6, 22, 147, 354, 357, 358, 360], "string": [7, 121, 154, 163, 233, 234, 235, 236, 237, 238, 251, 256, 257, 258, 261, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 335, 354, 355, 359], "current": [7, 42, 309, 352, 353, 354], "basi": [7, 26, 29, 30, 31, 32, 39, 42, 316, 322, 353, 358], "str": [7, 39, 54, 59, 60, 61, 62, 69, 72, 74, 75, 89, 90, 101, 112, 119, 121, 122, 123, 144, 147, 153, 157, 158, 166, 167, 168, 170, 175, 177, 178, 182, 183, 219, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 249, 251, 256, 257, 258, 260, 261, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 354, 355, 359, 360, 361, 364], "properti": [8, 9, 10, 11, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 53, 76, 77, 78, 79, 80, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 111, 112, 115, 118, 120, 146, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 289, 348], "boolean": [8, 12, 25, 39, 84, 105, 168, 182, 230, 234, 235, 236, 237, 238, 254, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 354, 355, 358, 359, 360], "non": [8, 22, 25, 68, 287, 289, 310, 312, 313, 314, 315, 319, 320, 321, 325, 327, 331, 334, 335, 336, 337, 338, 340, 344, 345, 347, 348, 353, 354, 358, 360, 361, 362, 366], "colinear": [8, 22, 25, 68, 286, 307, 310, 312, 313, 318, 319, 320, 324, 325, 330, 331, 335, 339, 340, 345, 347, 353, 354, 355, 360, 361], "calc": [8, 208], "do": [9, 61, 134, 147, 148, 157, 192, 194, 228, 229, 234, 236, 237, 238, 239, 283, 287, 289, 309, 310, 312, 318, 320, 321, 324, 325, 327, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 353, 354, 356, 357, 360], "valu": [9, 10, 61, 74, 121, 123, 126, 128, 129, 130, 182, 234, 235, 236, 253, 254, 255, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 331, 337, 354, 355, 357, 359, 360], "channel": [11, 38, 287, 353, 354, 362], "kpoint": [12, 13, 23, 24, 26, 27, 28, 29, 30, 31, 32, 39, 42, 46, 47, 48, 51, 54, 55, 61, 62, 69, 72, 82, 83, 84, 89, 126, 128, 129, 135, 136, 153, 162, 169, 177, 178, 179, 180, 182, 211, 223, 265, 266, 276, 288, 289, 291, 309, 310, 312, 343, 345, 354, 358, 360, 361, 362, 366], "band": [12, 13, 14, 15, 16, 23, 34, 42, 45, 54, 55, 58, 61, 62, 66, 67, 72, 74, 82, 86, 126, 127, 129, 131, 134, 141, 157, 158, 160, 182, 186, 228, 233, 247, 252, 256, 257, 265, 266, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 288, 289, 291, 295, 296, 300, 301, 303, 307, 309, 319, 324, 327, 334, 335, 336, 337, 338, 339, 340, 344, 345, 351, 352, 353, 357, 359, 360, 361, 362, 363], "efermi": [12, 13, 137, 138, 177, 178, 307, 358, 366], "projected_phas": [12, 13, 50, 358], "weight": [12, 13, 42, 51, 52, 53, 126, 129, 211, 253, 254, 255, 309, 358, 361, 362, 366], "kpath": [12, 13, 39, 82, 83, 84, 85, 86, 87, 88, 89, 126, 129, 137, 138, 160, 177, 178, 247, 248, 283, 303, 309, 345, 358, 362], "label": [12, 13, 56, 57, 82, 232, 234, 235, 236, 237, 238, 240, 243, 251, 258, 261, 283, 287, 288, 309, 310, 312, 345, 354, 357, 358, 359, 362, 366], "store": [12, 14, 15, 16, 24, 40, 41, 53, 61, 125, 126, 128, 129, 131, 132, 219, 276, 289, 358, 360, 361], "electron": [12, 126, 129, 134, 153, 185, 188, 189, 195, 209, 228, 247, 271, 273, 327, 330, 331, 343, 345, 348, 351, 352, 353, 354, 360, 362], "structur": [12, 42, 61, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 129, 131, 134, 139, 151, 152, 157, 159, 161, 177, 178, 182, 198, 200, 204, 207, 228, 229, 247, 252, 257, 265, 273, 274, 283, 291, 295, 296, 300, 301, 303, 307, 309, 319, 327, 330, 331, 343, 344, 345, 348, 351, 352, 353, 356, 357, 361, 362, 363, 366], "informomr": 12, "arrai": [12, 14, 15, 16, 40, 41, 53, 54, 60, 61, 69, 72, 85, 114, 125, 127, 129, 130, 132, 148, 192, 205, 287, 289, 291, 345, 353, 354, 358, 360, 366], "Will": 12, "have": [12, 208, 287, 289, 303, 309, 348, 349, 356, 357, 358, 359, 360, 361, 362], "n_kpoint": [12, 54, 60], "n_band": [12, 14, 15, 16, 40, 41, 54, 60], "fermi": [12, 54, 59, 60, 61, 62, 64, 65, 68, 69, 72, 126, 127, 128, 129, 134, 139, 153, 172, 177, 230, 249, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 299, 303, 309, 330, 331, 335, 336, 337, 338, 339, 340, 341, 343, 348, 351, 352, 353, 354, 358, 359, 361, 362, 366], "norbit": [12, 358], "full": [12, 287, 289, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 355, 358, 360], "incud": 12, "complex": [12, 358], "part": [12, 190, 348, 360], "clacul": 12, "name": [12, 69, 72, 87, 122, 123, 144, 153, 157, 240, 242, 243, 245, 256, 258, 260, 261, 276, 277, 278, 279, 280, 282, 283, 284, 285, 289, 348, 353, 354, 360, 361, 366], "vector": [12, 69, 90, 92, 93, 95, 96, 97, 100, 116, 117, 123, 139, 173, 258, 289, 312, 353, 354, 360], "matrix": [12, 39, 42, 74, 83, 84, 90, 105, 111, 113, 114, 124, 129, 132, 153, 174, 177, 288, 359, 360, 366], "shifted_to_efermi": [12, 358], "determin": [12, 22, 25, 39, 60, 82, 84, 105, 168, 288, 348, 359, 360], "shift": [12, 61, 80, 277, 278, 279, 280, 281, 360], "fals": [12, 39, 60, 84, 238, 254, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 289, 310, 315, 330, 331, 335, 354, 355, 356, 359, 360, 361, 366], "electronicbandstructur": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 129, 247, 248, 273, 362, 363], "gradient": [14, 17, 358], "mesh": [14, 15, 16, 17, 24, 27, 28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 69, 278, 279, 302, 312, 343, 351, 352, 358, 360, 362], "numpi": [14, 15, 16, 40, 41, 53, 54, 60, 61, 74, 125, 127, 129, 130, 132, 287, 289, 344, 345, 350, 358, 360, 366], "grid": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 74, 76, 77, 78, 79, 84, 283, 287, 289, 312, 343, 345, 354, 358, 359, 360], "n_kx": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 358], "n_ky": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 358], "n_kz": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 358], "where": [14, 15, 157, 236, 276, 284, 285, 288, 289, 303, 310, 335, 348, 354, 355, 359, 360, 361, 362], "first": [14, 15, 66, 67, 74, 92, 96, 100, 152, 161, 307, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 345, 348, 356, 359, 360, 361, 366], "dimens": [14, 15], "dx": [14, 15], "dy": [14, 15], "dz": [14, 15], "fradient": 14, "hessian": [15, 358], "second": [15, 67, 93, 95, 100, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 360], "scalar_mesh": [17, 18], "scalar": [17, 18, 72, 116, 117, 122, 128, 129, 130, 360], "k": [17, 35, 39, 127, 129, 131, 135, 181, 258, 267, 302, 303, 307, 309, 315, 343, 351, 352, 355, 356, 358, 359, 360, 362, 366], "cartesian": [17, 26, 27, 39, 61, 162, 179, 358, 360, 362], "coordin": [17, 61, 74, 129, 130, 132, 162, 179, 180, 290, 343, 358, 362], "scalar_gradient_mesh": 17, "integr": 18, "nd_list": 19, "scalar_list": 20, "vector_list": 21, "_summary_": [22, 290], "symmetri": [23, 82, 101, 102, 103, 104, 168, 174, 182, 276, 330, 331, 354, 355, 358, 360], "oper": [23, 174, 348, 359], "particular": [24, 289, 309, 348, 358, 359, 360, 361], "rtype": [27, 28], "fraction": [29, 90, 129, 132], "uniqu": [30, 31, 32, 345, 358], "kx": [30, 31], "direct": [30, 31, 32, 61, 70, 74, 76, 77, 78, 79, 277, 278, 279, 280, 281, 287, 289, 290, 343, 348, 353, 354, 355, 358, 359, 360, 361], "reduc": [30, 31, 32, 39, 180, 276, 358, 361, 362], "ky": 32, "numbersk": 37, "show_brillouin_zon": 39, "color": [39, 54, 60, 61, 62, 116, 121, 122, 230, 233, 234, 235, 236, 237, 238, 249, 253, 254, 255, 260, 269, 277, 278, 279, 280, 281, 283, 287, 288, 289, 315, 318, 324, 330, 343, 345, 353, 354, 356, 357, 359, 366], "r": [39, 261, 287, 307, 354, 357, 360], "point_siz": [39, 343, 345], "render_points_as_spher": [39, 343, 345], "move": [39, 312, 360], "core": [39, 42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 177, 182, 191, 192, 210, 211, 218, 228, 247, 360], "updat": [39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 122, 123, 348], "new": [39, 42, 181, 289, 348, 360, 361], "implement": [39, 267, 348, 354], "pyvista": [39, 74, 116, 129, 133, 289, 334, 335, 336, 337, 338, 339, 340, 343, 345, 350, 360], "plot": [39, 54, 56, 57, 60, 110, 127, 129, 131, 134, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 264, 265, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 291, 294, 295, 296, 298, 299, 300, 301, 303, 307, 313, 319, 320, 325, 328, 329, 332, 333, 334, 341, 351, 352, 353, 355, 356, 357, 358, 360, 361, 362, 364], "wether": 39, "show": [39, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 309, 310, 312, 315, 333, 335, 336, 338, 339, 340, 341, 343, 345, 347, 348, 354, 356, 357, 359, 360, 366], "size": [39, 42, 54, 60, 61, 72, 84, 122, 269, 270, 277, 278, 279, 280, 281, 283, 288, 289, 335, 345, 359, 360, 361, 366], "how": [39, 82, 134, 289, 310, 333, 341, 347, 348, 360], "render": [39, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 360], "phase": [41, 50, 126, 129, 312, 358, 366], "help": [42, 54, 127, 129, 144, 308, 310, 312, 348, 349, 360, 361, 366], "done": [42, 278, 279, 287, 312, 327, 344, 350, 355, 359], "find": [42, 58, 59, 60, 61, 74, 80, 172, 173, 174, 282, 342, 346, 347, 348, 354, 366], "expect": [42, 54, 126, 127, 129, 132, 273, 303, 348], "pyprocar": [42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 182, 191, 192, 221, 222, 223, 224, 225, 226, 227, 271, 272, 273, 274, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366], "materi": [42, 101, 102, 289, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345, 348, 353, 354, 356, 360], "bands_gradi": 43, "bands_hessian": 44, "spd": [54, 55, 61, 62, 265, 266], "band_indic": [54, 55, 288, 330, 331, 359], "band_color": [54, 55, 288, 330, 331, 359], "cmap": [54, 55, 61, 62, 121, 234, 235, 267, 268, 270, 277, 278, 279, 280, 281, 283, 287, 288, 289, 339, 353, 354, 359, 360], "jet": [54, 55, 234, 235, 268, 277, 278, 279, 280, 281, 283, 287, 288, 289, 339, 354, 356, 359, 360], "loglevel": [54, 55], "30": [54, 55, 287, 310, 348], "2d": [54, 59, 60, 127, 129, 278, 279, 285, 288, 289, 296, 299, 301, 302, 303, 331, 343, 351, 352, 360, 362], "nx3": 54, "alreadi": [54, 60, 348], "substract": 54, "n_kppint": 54, "indic": [54, 287, 288, 289, 314, 316, 317, 318, 321, 322, 323, 324, 348, 354, 359, 360, 366], "given": [54, 58, 127, 129, 147, 288, 330, 334, 339, 343, 345, 348, 351, 352, 354, 357, 359, 366], "_type_": [54, 144, 280, 283, 284, 285, 290, 292, 354, 361, 364], "verbos": [54, 283, 287], "level": [54, 59, 60, 267, 283, 289, 336, 337, 353, 354, 360, 361], "log": 54, "warn": 54, "fermisurfac": [55, 56, 57, 58, 59, 60, 129, 281], "add": [56, 57, 61, 267, 278, 279, 287, 288, 310, 348, 359], "matplotlib": [56, 57, 59, 228, 247, 284, 285, 287, 288, 289, 315, 350, 353, 360, 362], "which": [58, 66, 74, 120, 147, 287, 288, 289, 303, 310, 312, 318, 324, 339, 348, 353, 354, 358, 359, 360, 363, 366], "search": [58, 61, 277, 278, 279, 280, 281, 289, 336, 337, 352, 360], "around": [58, 289, 336, 337, 360, 362], "rais": [58, 59, 60, 114, 183, 280, 288, 359, 361], "runtimeerror": [58, 59, 60, 288, 359, 361], "If": [58, 61, 228, 247, 286, 287, 289, 312, 335, 348, 349, 354, 355, 357, 360, 361], "found": [58, 172, 181, 183, 310, 344, 345, 348, 357, 362], "an": [58, 74, 85, 128, 129, 130, 133, 205, 228, 247, 280, 281, 306, 312, 315, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 353, 354, 357, 362], "error": [58, 59, 60, 114, 181, 208, 355, 359], "mode": [59, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 303, 309, 310, 312, 315, 331, 334, 335, 348, 353, 354, 356, 359, 360, 362, 366], "500": 59, "along": [59, 60, 85, 348, 355, 358, 363], "z": [59, 60, 74, 76, 79, 123, 288, 290, 331, 343, 359, 360, 361, 362], "axi": [59, 287, 359], "onli": [59, 60, 89, 116, 181, 276, 287, 289, 309, 321, 324, 330, 331, 348, 349, 353, 354, 360, 361], "layer": [59, 60, 360], "geometri": [59, 60, 366], "set": [59, 74, 121, 122, 123, 173, 203, 240, 241, 242, 243, 244, 245, 257, 258, 259, 260, 261, 262, 263, 286, 287, 288, 289, 306, 307, 309, 310, 312, 318, 324, 327, 331, 345, 351, 352, 353, 354, 355, 356, 357, 359, 360, 364, 366], "pyplot": [59, 288, 362], "instanc": [59, 303, 353, 354, 364, 366], "wa": [59, 60, 287, 348, 354, 362], "call": [59, 60, 276, 292, 303, 309, 310, 312, 334, 335, 336, 337, 338, 339, 340, 348, 356, 360, 364], "befor": [59, 60, 359, 364, 366], "sx": 60, "sy": 60, "sz": 60, "arrow_project": [60, 288, 331, 359], "no_arrow": [60, 288, 330, 331, 359], "300": 60, "arrow_color": [60, 277, 278, 279, 280, 281, 288, 289, 331, 359, 360], "arrow_s": [60, 277, 278, 279, 280, 281, 288, 289, 331, 335, 340, 359, 360], "05": [60, 101, 102, 103, 104, 182, 291, 345], "arrow_dens": [60, 288, 331, 359], "color_bar": [60, 288, 331, 359], "textur": [60, 68, 73, 127, 277, 278, 279, 280, 281, 289, 343, 348, 353, 354, 360, 362], "It": [60, 141, 181, 267, 287, 348, 353, 354, 359], "enhanc": 60, "version": [60, 306, 327, 330, 331, 343, 345, 348, 349, 350, 357, 360, 361], "nkpoint": [60, 358], "x": [60, 74, 76, 77, 123, 240, 241, 258, 259, 260, 287, 290, 306, 307, 309, 310, 331, 343, 350, 354, 359, 360, 361, 362], "nband": [60, 358, 362], "thei": [60, 181, 348, 356], "also": [60, 289, 306, 310, 318, 324, 330, 331, 348, 353, 354, 359, 360, 366], "other": [60, 74, 200, 287, 289, 345, 346, 348, 354, 358, 359, 360, 361, 362, 364], "compon": [60, 348, 359, 361, 362], "y": [60, 74, 76, 78, 123, 243, 244, 261, 262, 263, 287, 290, 331, 343, 345, 359, 360, 361, 362], "marker": [60, 269, 270], "arrow": [60, 277, 278, 279, 280, 281, 288, 289, 331, 359, 360], "whether": [60, 287, 348, 366], "eb": [61, 62, 157, 247, 248, 318, 324, 358, 363], "bands_to_keep": [61, 62], "spd_spin": [61, 62], "fermi_shift": [61, 62, 277, 278, 279, 280, 281, 289, 360], "fermi_toler": [61, 62, 277, 278, 279, 280, 281, 289, 360], "surface_color": [61, 62], "projection_accuraci": [61, 62, 277, 278, 279, 280, 281, 289, 360], "normal": [61, 62, 116, 121, 234, 235, 253, 254, 255, 277, 278, 279, 280, 281, 284, 285, 289, 348, 354, 359, 360], "viridi": [61, 62, 121], "vmin": [61, 62, 121, 234, 235, 253, 254, 255, 267, 268, 270, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 314, 316, 317, 318, 321, 322, 323, 324, 336, 337, 338, 354, 359, 360, 366], "vmax": [61, 62, 121, 234, 235, 253, 254, 255, 267, 268, 270, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 314, 316, 317, 318, 321, 322, 323, 324, 336, 337, 338, 354, 359, 360, 366], "manapul": 61, "3d": [61, 68, 69, 72, 128, 129, 281, 289, 303, 351, 352, 362], "dft": [61, 134, 287, 289, 309, 345, 348, 351, 352, 353, 354, 355, 357, 358, 360, 362, 365, 366], "ha": [61, 74, 129, 137, 167, 168, 220, 223, 273, 287, 289, 303, 306, 309, 310, 312, 315, 334, 348, 360, 366], "being": [61, 287, 348], "differ": [61, 112, 287, 289, 309, 310, 312, 316, 322, 348, 354, 355, 356, 357, 360], "ith": 61, "coorespond": 61, "one": [61, 74, 80, 116, 172, 173, 267, 276, 287, 289, 309, 310, 312, 331, 345, 348, 353, 354, 355, 357, 359, 360, 361], "want": [61, 74, 116, 287, 289, 335, 348, 349, 359, 360, 361], "isosurfac": [61, 75, 76, 77, 78, 79, 80, 128, 129, 277, 278, 279, 280, 281, 336, 337, 360], "inform": [61, 116, 125, 126, 129, 131, 132, 135, 141, 144, 153, 160, 167, 202, 209, 211, 214, 215, 303, 312, 315, 331, 343, 345, 348, 353, 354, 357, 358, 360, 361, 362], "about": [61, 116, 134, 214, 215, 315, 331, 348, 349, 357, 360], "improv": [61, 289, 360], "effienc": [61, 289, 360], "prior": [61, 137, 289, 348, 350, 360], "select": [61, 287, 289, 318, 324, 357, 360, 362], "within": [61, 289, 345, 348, 350, 354, 360, 361, 362, 366], "toler": [61, 101, 102, 103, 104, 277, 278, 279, 280, 281, 289, 345, 360], "everi": [61, 287, 348, 351, 352, 362], "you": [61, 134, 289, 308, 309, 310, 312, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 349, 350, 357, 358, 360, 361, 363, 365, 366], "rgba": [61, 289, 360], "argument": [61, 283, 287, 289, 303, 327, 335, 348, 357, 358, 360, 363, 365], "doe": [61, 287, 289, 330, 348, 357, 359, 360, 361], "whena": [61, 289, 360], "file": [61, 89, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 172, 174, 175, 177, 183, 221, 222, 224, 225, 226, 227, 256, 276, 281, 282, 283, 286, 287, 288, 289, 291, 292, 297, 303, 305, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 348, 351, 352, 353, 354, 355, 357, 359, 361, 362, 364, 366], "save": [61, 157, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 310, 330, 331, 354, 356, 359, 360, 366], "when": [61, 276, 277, 278, 279, 280, 281, 288, 289, 306, 312, 315, 318, 324, 334, 335, 336, 337, 338, 339, 340, 343, 345, 348, 353, 355, 356, 359, 360, 361, 363], "save3d": [61, 289, 360], "we": [61, 208, 287, 289, 309, 310, 312, 334, 348, 349, 353, 357, 359, 360, 362, 366], "recomend": [61, 289, 360], "qualit": [61, 289, 360], "colormap": [61, 121, 235, 277, 278, 279, 280, 281, 287, 288, 289, 356, 359, 360], "automat": [61, 287, 289, 312, 343, 345, 348, 354, 360], "choos": [61, 287, 289, 348, 360], "e": [61, 74, 172, 261, 287, 289, 310, 334, 348, 354, 357, 359, 360, 361], "g": [61, 74, 287, 289, 309, 310, 334, 345, 354, 355, 359, 360, 361], "red": [61, 287, 289, 331, 339, 345, 354, 360], "blue": [61, 230, 233, 249, 269, 287, 289, 330, 331, 339, 343, 345, 354, 360, 366], "green": [61, 287, 289, 360], "control": [61, 289, 309, 348, 360], "accuraci": [61, 289, 360], "high": [61, 289, 354, 355, 360], "map": [61, 69, 82, 116, 121, 122, 234, 287, 288, 289, 353, 354, 359, 360], "minimum": [61, 116, 121, 234, 235, 253, 254, 255, 277, 278, 279, 280, 281, 284, 285, 287, 289, 354, 359, 360, 361], "maximum": [61, 121, 234, 253, 254, 255, 277, 278, 279, 280, 281, 284, 285, 287, 289, 354, 359, 360, 361], "pad": [61, 74, 75], "assist": [61, 129, 273], "fermisurface3d": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 129, 360], "effect": [63, 277, 278, 279, 280, 281, 289, 334, 348, 359, 360], "mass": [63, 277, 278, 279, 280, 281, 289, 360], "speed": [64, 277, 278, 279, 280, 281], "veloc": [65, 277, 278, 279, 280, 281, 289, 351, 352, 360], "helper": [66, 67, 143], "secoond": 66, "deriv": [66, 67], "all": [66, 74, 147, 172, 199, 218, 220, 286, 287, 289, 347, 348, 354, 355, 357, 359, 360, 361, 362, 366], "iband": 67, "creat": [68, 74, 116, 287, 289, 291, 309, 310, 312, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 354, 360, 361], "case": [68, 157, 287, 289, 303, 348, 354, 355, 360, 361, 366], "vectors_arrai": 69, "vectors_nam": [69, 123], "extended_zone_direct": [70, 277, 278, 279, 280, 281, 289, 360], "extend": [70, 348], "vecctor": 70, "expand": [70, 277, 278, 279, 280, 281], "scalars_arrai": 72, "scalar_nam": [72, 122], "len": [72, 345], "self": [72, 74, 188, 189, 202, 312, 344], "length": [72, 76, 348], "iso": [72, 288, 289, 359, 360], "xyz": [74, 75], "v": [74, 75, 287, 289, 353, 354, 357, 360], "isovalu": [74, 75, 129, 130, 289, 360], "v_matrix": [74, 75], "algorithm": [74, 75], "lewin": [74, 75], "transform_matrix": [74, 75], "boundari": [74, 75], "equat": [74, 360, 362], "f": [74, 219, 309, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345, 348, 353, 354, 359, 360], "must": [74, 289, 303, 309, 310, 335, 345, 348, 354, 360, 366], "between": [74, 76, 82, 93, 96, 100, 116, 348, 354, 360, 364], "x1": [74, 290, 343], "y1": [74, 290, 343], "z1": 74, "z2": 74, "descript": [74, 80, 206, 357], "v1": [74, 287, 289, 360], "v2": 74, "constant": [74, 359], "nx": 74, "ny": 74, "nz": 74, "One": [74, 287, 289, 353, 354, 359, 360], "can": [74, 116, 134, 141, 287, 289, 303, 306, 307, 310, 312, 318, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 365, 366], "present": [74, 109, 112, 173, 286, 287, 289, 348, 354, 355, 360], "instead": [74, 337, 348, 354, 359], "togeth": [74, 306, 348, 353, 354], "provid": [74, 121, 228, 247, 276, 286, 287, 289, 303, 306, 312, 348, 351, 352, 353, 354, 355, 357, 358, 360, 362, 363, 365], "scikit": [74, 350], "imag": [74, 289, 334, 335, 336, 337, 338, 339, 340, 343, 345, 350, 354, 360], "possibl": [74, 348, 353, 354, 360], "classic": 74, "modul": [74, 223, 286, 291, 292, 352, 355, 356, 359, 361, 364, 366], "fourier": [74, 289, 360], "dafault": [74, 357], "period": 74, "dataset": [74, 103, 360, 361], "solid": 74, "1st": [74, 289, 360], "bz": [74, 355, 360, 366], "cover": [74, 348], "fulli": 74, "so": [74, 287, 348, 354, 356, 358, 360, 361, 362], "might": [74, 348, 350, 357, 360], "wrap": 74, "look": [74, 289, 339, 360], "afterward": 74, "clip": 74, "easili": [74, 357], "doabl": 74, "trimesh": [74, 119, 121, 289, 350, 360], "goe": [74, 354, 357, 361], "eigen_matrix": 74, "In": [74, 134, 287, 289, 312, 334, 345, 348, 349, 353, 354, 357, 360, 361, 362, 366], "word": [74, 287, 289, 360], "super": [74, 351, 352], "withpad": 74, "vertic": [74, 129, 133, 230, 234, 235, 236, 237, 238, 287, 307, 357, 360], "verts_prim": 74, "t": [74, 219, 267, 309, 348, 349, 360], "exampl": [74, 116, 147, 287, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 346, 348, 349, 353, 354, 357, 359, 361, 362], "space": [76, 101, 102, 336, 337, 345, 359, 360, 364, 366], "tri": [80, 181], "correct": [80, 348], "posit": [80, 88, 104, 242, 245, 260, 277, 278, 279, 280, 281, 289, 335, 360], "abl": [80, 335, 353, 354, 360, 362], "min": 80, "max": 80, "kname": [81, 82, 283, 284, 285, 354, 363, 366], "ktick": [81, 82, 283, 284, 285, 354, 363, 366], "special_kpoint": [81, 82, 363], "ngrid": [81, 82, 363], "has_time_revers": [81, 82, 135, 136, 168, 169], "handl": [82, 223, 276, 360, 364], "tick": [82, 87, 88, 242, 245, 260, 263, 268, 269, 270, 363], "special": [82, 348, 353, 359], "mani": [82, 289, 348, 353, 354, 360, 361], "time": [82, 168, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 360, 366], "revers": [82, 168, 345, 348], "get": [83, 84, 160, 293, 309, 333, 341, 345, 347, 348, 360], "same_grid_s": 84, "optim": 84, "after": [84, 348, 357, 362], "transformm": 84, "retain": [84, 348], "segment": [86, 359, 363], "filenam": [89, 135, 136, 141, 143, 144, 153, 157, 168, 169, 170, 171, 175, 176, 177, 178, 182, 183, 184, 239, 256, 282, 283, 287, 288, 292, 335, 357, 359, 364, 366], "fmt": 89, "vasp": [89, 137, 144, 206, 220, 223, 227, 282, 283, 284, 285, 287, 288, 289, 306, 308, 309, 313, 315, 319, 320, 325, 334, 344, 345, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366], "write": [89, 348, 361], "support": [89, 289, 309, 310, 348, 350, 352, 353, 354, 360], "moment": [89, 362], "_description_": [89, 280, 283, 285, 288, 290, 359, 361], "cartesian_coordin": [90, 91, 365], "fractional_coordin": [90, 91, 365], "defin": [90, 287, 289, 345, 348, 354, 357, 359, 360, 361, 362], "perid": 90, "crystal": [90, 92, 93, 95, 96, 97, 100, 105, 106, 111, 217, 309, 310, 345, 351, 352], "symbol": [90, 129, 132], "natom": [90, 358, 365], "coordinatesd": 90, "magnitud": [92, 95, 97, 289, 353, 354, 360], "angl": [93, 96, 100, 345, 359], "third": [93, 96, 97, 348], "convex": [98, 110], "hull": [98, 110], "scipi": [98, 350], "spatial": 98, "convexhul": 98, "symprec": [101, 102, 103, 104, 182, 291, 345], "1e": [101, 102, 103, 104, 182, 291, 345], "intern": 101, "group": [101, 102, 330, 331], "spglib": [103, 182], "dict": [103, 149, 150, 193, 194, 211, 215, 236, 283, 284, 285, 287, 354, 357], "wyckoff": 104, "insid": [105, 141, 348], "unitcel": 105, "question": 105, "corner": [106, 357], "speci": [109, 238, 287, 357], "crystla": 114, "valueerror": [114, 183], "proper": 114, "face_norm": [116, 117], "vert_norm": [116, 117], "face_color": [116, 117, 360], "vert_color": [116, 117], "hold": 116, "inherit": 116, "To": [116, 286, 287, 289, 306, 307, 309, 310, 312, 334, 348, 350, 354, 355, 357, 359, 360, 362], "requir": [116, 306, 307, 309, 310, 312, 348, 354, 356, 358, 359, 360, 361], "nvert": 116, "vertici": 116, "integ": [116, 277, 278, 279, 280, 281], "nface": 116, "connect": [116, 345, 348, 360], "vertex": 116, "attach": [116, 348], "glyph": 116, "file_obj": 119, "output": [119, 140, 144, 223, 286, 287, 289, 292, 306, 348, 354, 355, 357, 360, 364], "glb": [119, 289, 360], "file_typ": 119, "new_fac": 120, "vectors_x": 123, "vectors_i": 123, "vectors_z": 123, "manipul": [125, 126, 129], "1d": [125, 129, 130], "n_energi": [125, 129], "see": [125, 126, 127, 128, 131, 132, 334, 348, 349, 353, 354, 359, 360, 366], "further": [125, 126, 127, 128, 131, 132, 137, 348, 354, 359, 361, 366], "detail": [125, 126, 127, 128, 131, 132, 287, 314, 316, 317, 318, 321, 322, 323, 324, 345, 348, 354, 360], "plane": [127, 129, 288, 289, 335, 343, 353, 354, 359, 360], "informt": [128, 129], "includ": [128, 129, 134, 147, 174, 231, 232, 234, 236, 277, 278, 279, 280, 281, 303, 309, 312, 348, 351, 352, 353, 354, 362, 366], "extens": [128, 129, 130, 133, 348], "chapter": [129, 273], "intend": [129, 134, 273, 348], "describ": [129, 273, 277, 278, 279, 280, 281], "data": [129, 134, 273, 276, 303, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345, 348, 351, 352, 358, 360, 362, 363, 365], "process": [129, 137, 303, 327, 330, 331, 343, 345, 348, 351, 352, 354, 359, 361, 362, 366], "path": [129, 131, 157, 287, 289, 303, 307, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 351, 352, 355, 356, 360, 362], "tick_label": [129, 131], "tick_posit": [129, 131, 242, 245, 260, 363], "n_segement": [129, 131], "kdistanc": [129, 131, 363], "section": [134, 223, 278, 279, 289, 303, 306, 310, 318, 324, 348, 357, 359, 360, 362], "learn": [134, 349], "more": [134, 172, 173, 267, 277, 278, 279, 280, 281, 289, 303, 318, 324, 331, 345, 348, 349, 353, 354, 357, 360, 361], "pars": [134, 135, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 170, 175, 177, 183, 185, 186, 200, 215, 221, 222, 223, 224, 225, 226, 227, 288, 357, 359, 360], "code": [134, 141, 144, 145, 206, 223, 275, 276, 282, 283, 284, 285, 287, 288, 289, 306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 365, 366], "highlight": [134, 366], "python": [134, 149, 193, 219, 287, 289, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 348, 349, 350, 351, 352, 360], "interfac": [134, 348, 360], "io": [134, 221, 222, 224, 225, 226, 227, 358, 363, 365], "plotter": [134, 271, 272, 274, 278, 279, 280, 314, 315, 316, 317, 318, 321, 322, 323, 324, 343, 345], "script": [134, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 354, 355, 359, 360, 361, 364, 366], "bandsplot": [134, 283, 303, 309, 310, 312, 314, 315, 316, 317, 318, 324, 327, 354, 356, 357, 360], "dosplot": [134, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 273, 283, 303, 309, 310, 312, 321, 322, 323, 324, 327, 357], "bandsdosplot": [134, 303, 309, 310, 312, 326, 328, 347, 357], "abinitkpoint": [136, 223], "infil": [137, 138, 141, 142, 143, 286, 289, 291, 292, 345, 355, 360, 361, 364], "abinit_output": [137, 138, 139, 140, 286, 289, 306, 354, 355, 360, 366], "procar": [137, 144, 145, 153, 178, 179, 180, 181, 182, 223, 276, 282, 283, 286, 287, 288, 289, 292, 297, 303, 305, 306, 312, 344, 350, 351, 352, 353, 354, 355, 359, 361, 362, 364, 366], "unlik": 137, "here": [137, 181, 267, 308, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347, 349, 354], "merg": [137, 286, 306, 348, 355], "fix": [137, 181, 208, 286, 306, 348, 355], "format": [137, 181, 219, 223, 286, 287, 289, 306, 309, 343, 344, 345, 348, 351, 352, 354, 355, 360, 362, 364], "issu": [137, 286, 306, 355, 364], "abinitprocar": [138, 223], "through": [141, 143, 280, 348, 353, 354, 358, 359, 360, 363, 365, 366], "becaus": [141, 348, 354], "some": [141, 181, 289, 303, 310, 348, 353, 360], "multipl": [141, 286, 297, 306, 351, 352, 357, 362], "bsxf": 141, "sown": 141, "bxsfparser": [142, 143, 223], "bxsf": [142, 143, 222, 223, 289, 360], "dirnam": [144, 145, 157, 158, 275, 276, 282, 283, 284, 285, 287, 288, 289, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345, 354, 359, 360, 366], "qe": [144, 145, 223, 224, 225, 287, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 324, 327, 330, 331, 335, 336, 337, 338, 339, 340], "lobsterin": [144, 145, 309], "lobsterout": [144, 145, 309], "scfin_filenam": [144, 145], "scf": [144, 145, 157, 158, 309, 310, 312], "outcar": [144, 145, 153, 171, 172, 173, 174, 182, 223, 282, 283, 287, 289, 312, 344, 354, 356, 359, 360, 366], "poscar": [144, 145, 153, 176, 216, 223, 283, 287, 289, 345, 360, 361, 366], "dos_interpolation_factor": [144, 145, 183, 184], "directori": [144, 157, 276, 284, 285, 286, 287, 288, 303, 307, 309, 310, 312, 354, 355, 359], "put": [144, 287, 289, 355, 360], "lobsterpars": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 223], "retrun": 146, "titl": [147, 257, 283, 284, 285, 287, 348, 354, 357, 359, 360, 366], "dos_paramater": 147, "separatli": 147, "pychemia": [147, 198, 206, 207, 210, 211, 218, 350], "visual": [147, 359, 360], "multi": [148, 192], "diment": [148, 192, 360], "per": 148, "complet": [149, 193, 307], "dictionari": [149, 193, 201, 204, 236, 283, 284, 285, 287, 303, 354], "denis": 149, "kei": [150, 236, 284, 285, 287, 348, 354, 360], "sturcutu": 153, "scf_in_filenam": [157, 158], "bands_in_filenam": [157, 158], "pdos_in_filenam": [157, 158], "pdo": [157, 158, 310], "kpdos_in_filenam": [157, 158], "kpdo": [157, 158, 310], "atomic_proj_xml": [157, 158], "atomic_proj": [157, 158, 310], "xml": [157, 158, 183, 184, 187, 208, 215, 283, 287, 310, 357], "expresso": 157, "most": [157, 287, 348, 354, 357], "import": [157, 287, 289, 309, 310, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 350, 358, 359, 360, 363, 365, 366], "come": [157, 348, 351, 352], "parser": [157, 208, 223, 354, 358, 363, 365], "took": 157, "place": [157, 303, 310, 348, 360], "ofstat": 157, "locat": [157, 228, 247, 263, 361], "outdir": 157, "prefix": 157, "qepars": [158, 159, 160, 161, 162, 163, 164, 165, 223], "fdf_file": [166, 167], "siestapars": [167, 223], "siesta": [167, 223, 226, 308], "fdf": 167, "vlaue": 168, "kpioint": 168, "ourcar": 170, "just": [172, 173, 267, 360, 361], "field": [172, 360], "keep": [172, 287, 289, 348, 353, 360, 361], "than": [172, 173, 200, 267, 287, 289, 348, 353, 354, 360, 361, 366], "ndaarai": 173, "them": [174, 219, 348, 354, 362], "matric": [174, 362], "stupid": 181, "problem": [181, 348], "due": [181, 364, 366], "fortran": [181, 364], "now": [181, 309, 310, 359, 361, 362], "separ": [181, 348, 353, 354, 355], "61": 181, "00000000": [181, 362], "50000000": 181, "But": [181, 331, 348, 359], "precis": [182, 348], "vasprun": [183, 184, 213, 215, 283, 287, 357], "vaspxml": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 366], "el": 187, "_type": 187, "text": [187, 219], "specifi": [187, 276, 277, 278, 279, 280, 287, 289, 307, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 354, 357, 360], "attrib": 187, "tree": 187, "boolian": [188, 189, 190, 219, 287], "consist": [188, 189, 202, 312, 344, 348, 353, 354, 362], "ionic": [188, 190, 195, 199, 209, 218], "converg": [189, 190], "step": [195, 199, 202, 209, 217, 218, 310, 312, 348], "system": [196, 212, 309, 348, 355, 359, 366], "final": [198, 348, 354, 355], "xml_tree": [200, 201, 202, 203, 204, 205], "calculatio": 200, "scstep": 200, "dest": 201, "recurc": [201, 203], "check": [201, 286, 349, 355], "spell": 201, "extract": [202, 203, 312, 361], "tage": 203, "varrai": 205, "tag": [205, 354, 359, 360], "vaspincar": 206, "alwai": [208, 359], "accord": [208, 348, 359], "read": [208, 289, 310, 345, 348, 357, 360, 366], "finish": 208, "pseudopotenti": 214, "potcar": 214, "covert": 219, "abinit": [221, 223, 286, 287, 289, 308, 309, 353, 354, 355, 360, 366], "espresso": [222, 223, 224, 225, 226, 308, 309, 313, 319, 320, 325, 347, 352, 353, 354], "decrib": 223, "result": [223, 334, 348, 361, 366], "lobster": [223, 224, 283, 285, 287, 288, 308, 359], "abinitpars": 223, "vasppars": 223, "ax": [228, 229, 247, 248, 267, 268, 269, 270, 283, 284, 285, 287, 288, 315, 354, 356, 359, 366], "kwarg": [228, 229, 247, 248, 283, 284, 285, 354, 366], "mpl": [228, 247], "orient": [230, 233, 234, 235, 236, 237, 238, 283, 287, 335, 353, 354, 357], "horizont": [230, 233, 234, 235, 236, 237, 238, 283, 287, 357], "linestyl": [230, 249], "dot": [230, 249], "linewidth": [230, 249, 268, 283, 287], "draw": [230, 249], "THe": 230, "style": [230, 318, 324], "plain": [233, 252, 283, 284, 285, 287, 288, 289, 309, 310, 312, 315, 333, 341, 347, 351, 352, 356, 359, 362, 366], "spin_color": [234, 235, 236, 237, 238, 277, 278, 279, 280, 281, 283, 287, 339], "spin_label": [234, 235, 236, 237, 238, 283, 287], "plot_tot": [234, 236, 237, 238, 283, 287, 357], "plot_bar": [234, 235, 268], "parametr": [234, 235, 254, 287, 289, 303, 315, 334, 353, 354, 356, 360, 362], "colorba": 234, "mmaximum": 235, "colorbar": 235, "item": [236, 283, 284, 285, 287, 314, 321, 324, 348, 354, 357, 366], "contribut": [236, 237, 238, 287, 289, 348, 349, 353, 354, 357, 360], "stack": [236, 237, 238, 287, 321, 362], "eachoth": 238, "pdf": [239, 256, 287], "interv": [241, 244, 259, 262, 263, 356], "xlim": 241, "tick_nam": [242, 245, 260, 363], "xtick": 242, "ylim": 244, "ytick": 245, "ebsplot": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 314, 315, 316, 317, 318], "fermi_level": 249, "methdo": 251, "width_mask": [253, 255], "color_mask": [253, 255], "width_weight": [253, 255], "color_weight": [253, 255], "scatter": [253, 255, 354], "width": [253, 255, 287, 345, 360, 366], "mask": [253, 255, 268, 270, 284, 285, 348, 354], "plot_color_bar": [254, 283], "overlai": 254, "bar": [254, 283, 287, 288, 289, 359, 360], "fo": [258, 261, 280], "limit": [259, 262, 287, 348, 354], "begin": [259, 262, 290, 362], "end": [259, 262, 290, 348, 357, 362], "black": [260, 356], "_f": 261, "ev": [261, 336, 337, 344, 359], "major": [263, 348], "minor": 263, "depeci": 265, "ot": 265, "procarplot": [266, 267, 268, 269, 270, 273], "hot_r": [267, 270], "handler": 267, "parametricplot": 267, "fake": 267, "shouldn": 267, "invok": [267, 348, 350], "discontinu": [268, 269, 270, 283, 310, 362], "figsiz": [268, 269], "13": [268, 269, 316, 322, 335, 340, 341, 348, 353, 361, 362], "9": [268, 269, 306, 316, 322, 330, 336, 337, 338, 339, 353, 362], "02": [269, 319], "o": [269, 270, 287, 289, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 353, 354, 357, 360], "50": [270, 312, 361], "structutu": 271, "stuctur": 273, "depreci": 274, "repair": [275, 276, 282, 283, 288, 289, 303, 305, 348, 359, 360, 362], "apply_symmetri": [275, 276, 334, 335, 336, 337, 338, 339, 340], "fermihandl": [276, 277, 278, 279, 280, 281, 303, 312, 334, 335, 336, 337, 338, 339, 340], "Then": [276, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 345, 366], "srufac": [276, 280], "iso_rang": [277, 280, 289, 336, 337, 360], "iso_surfac": [277, 280, 289, 336, 337, 360], "10": [277, 287, 289, 316, 322, 331, 334, 345, 348, 353, 360, 361, 362], "iso_valu": [277, 337], "spin_textur": [277, 278, 279, 280, 281, 288, 289, 330, 331, 333, 335, 341, 347, 359, 360], "calculate_fermi_spe": [277, 278, 279, 280, 281, 289, 360], "calculate_fermi_veloc": [277, 278, 279, 280, 281, 289, 360], "calculate_effective_mass": [277, 278, 279, 280, 281, 289, 360], "plot_brillouin_zon": [277, 278, 279, 280, 281], "015": [277, 278, 279, 280, 289, 345, 360], "plot_directional_arrow": [277, 278, 279, 280, 281], "camera_po": [277, 278, 279, 280, 281, 289, 360], "background_color": [277, 278, 279, 280, 281, 289, 360], "white": [277, 278, 279, 280, 281, 289, 360, 364], "save_gif": [277, 281, 337], "genrat": 277, "gif": [277, 281, 289, 337, 360], "chang": [277, 318, 324, 331, 348, 357, 360], "isovlau": 277, "rang": [277, 280, 289, 336, 337, 343, 360, 361, 366], "excat": 277, "ther": [277, 278, 279, 280, 281, 285], "allow": [277, 278, 279, 280, 281, 289, 348, 353, 354, 359, 360, 366], "orlist": [277, 278, 279, 280, 281], "camera": [277, 278, 279, 280, 281, 289, 360], "strortupl": [277, 278, 279, 280, 281], "background": [277, 278, 279, 280, 281, 289, 360], "transparent_mesh": [278, 279, 334], "slice_norm": [278, 279, 289, 334, 335, 360], "slice_origin": [278, 279, 289, 334, 335, 360], "line_width": [278, 279, 334, 335], "perspect": [278, 279, 280, 281, 289, 360], "save_2d": [278, 279, 280, 281], "save_2d_slic": [278, 279, 335], "sruafc": [278, 279], "cross": [278, 279, 289, 348, 360], "slice": [278, 279, 289, 360], "widget": [278, 279, 280, 289, 335, 360], "noraml": [278, 279], "origin": [278, 279, 289, 330, 331, 348, 354, 358, 360, 361], "optionl": [278, 279], "transpar": [278, 279, 360], "linwidth": [278, 279], "screenshot": [278, 279, 280, 281], "show_cross_section_area": [279, 289, 334, 335, 360], "box": [279, 348], "area": [279, 287, 289, 335, 348, 357, 360], "isoslid": [280, 333, 341, 347], "slide": 280, "go": [280, 287, 289, 350, 360], "except": [280, 348], "save_mp4": 281, "save_3d": 281, "boollean": 281, "mp4": [281, 289, 360], "gap": [282, 344], "bands_set": [283, 303, 327], "elimit": [283, 284, 285, 287, 315, 354, 356, 357, 366], "cubic": [283, 284, 285, 287, 354, 366], "interpolation_typ": [283, 284, 285, 354, 366], "projection_mask": [283, 284, 285, 287, 354, 366], "dos_set": [283, 303, 327], "dos_limit": [283, 287], "old": [283, 287, 366], "savefig": [283, 284, 285, 287, 288, 354, 356, 357, 359, 366], "k_limit": 283, "title_fonts": 283, "16": [283, 289, 316, 322, 331, 334, 335, 338, 340, 341, 348, 353, 360], "draw_fermi": 283, "keyword": [283, 303, 318, 324, 327, 330, 331, 335, 348, 358, 360], "window": [283, 284, 285, 287, 348, 354, 360], "structutr": [284, 354], "sting": [284, 354], "custom": [284, 285, 348, 354], "kanem": [284, 354], "decid": [284, 348, 354, 359], "plt": [284, 285, 287, 288, 354, 359, 366], "kdirect": [285, 354, 366], "bandstructur": [285, 294, 348, 355], "kitck": 285, "objext": 285, "outfil": [286, 291, 292, 345, 355, 361, 364], "procar_merg": [286, 355], "gz": [286, 355], "mergeparallel": [286, 355], "fixformat": [286, 355], "nspin": [286, 310, 355, 358], "concaten": [286, 297, 303, 306, 362], "procar_": [286, 355], "compress": [286, 355], "parallel": [286, 306, 355], "detect": [286, 355], "nsppol": [286, 355], "flag": [286, 306, 307, 309, 310, 312, 355, 366], "carri": [287, 348, 354, 357], "out": [287, 289, 306, 307, 309, 310, 348, 360, 366], "srvo3": 287, "perform": [287, 289, 307, 310, 312, 348, 351, 352, 359, 360, 361, 363, 366], "explain": [287, 306, 348, 360], "exmapl": [287, 334, 335, 336, 337, 338, 339, 340, 343, 345], "tutori": [287, 349, 360], "parametric_lin": [287, 362], "stack_orbit": [287, 321, 324, 362], "stack_speci": [287, 362], "multipli": 287, "spline": 287, "ploariz": 287, "These": [287, 307, 313, 320, 326, 327, 329, 333, 342, 347, 348, 353, 354, 360], "chosen": [287, 360], "accept": [287, 348, 358], "rgb": 287, "html": [287, 289, 348, 360], "0000ff": 287, "ff0000": 287, "polar": [287, 313, 314, 315, 319, 320, 321, 325, 327, 330, 333, 334, 336, 337, 338, 341, 344, 345, 347, 353, 354, 355, 362, 366], "two": [287, 289, 348, 354, 360], "even": [287, 348, 354], "disregard": 287, "cation": 287, "fill": [287, 357], "under": [287, 348, 357], "curv": [287, 357], "better": [287, 360], "sens": 287, "refer": [287, 309, 314, 316, 317, 318, 321, 322, 323, 324, 331, 348, 353, 354, 358, 362, 363, 365], "srvo": [287, 289, 353, 354, 357, 360], "magenta": 287, "cyan": 287, "polor": 287, "both": [287, 348, 351, 352, 354, 357, 366], "legend": [287, 288, 359], "packag": [287, 289, 310, 348, 354, 357, 360], "relev": [287, 289, 348, 360], "mind": [287, 289, 360, 361], "start": [287, 289, 348, 353, 354, 359, 360, 361], "oxygen": [287, 289, 357, 360], "sr1": [287, 289, 360], "o3": [287, 289, 360], "900891": [287, 289, 360], "000000": [287, 289, 360, 364], "sr": [287, 289, 353, 354, 357, 360], "500000": [287, 289, 360], "noth": [287, 289, 348, 360], "consid": [287, 289, 321, 324, 348, 349, 351, 352, 353, 354, 360], "indeci": [287, 289, 360], "relav": [287, 289, 360], "while": [287, 289, 348, 357, 360, 361], "ask": [287, 348, 357], "graph": [287, 348], "higher": 287, "web": [287, 289, 360], "page": [287, 289, 348, 349, 352, 360], "http": [287, 289, 334, 348, 350, 360], "org": [287, 289, 334, 348, 360], "user": [287, 289, 303, 314, 316, 317, 318, 321, 322, 323, 324, 330, 331, 345, 348, 353, 354, 357, 359, 360], "plasma": 287, "plote": 287, "flase": 287, "entri": 287, "png": [287, 289, 335, 354, 357, 360, 366], "jpg": 287, "shown": 287, "interact": [287, 348, 360], "ad": [287, 289, 309, 348, 360], "abov": [287, 289, 309, 310, 312, 334, 336, 337, 348, 353, 354, 356, 360], "srvo_": 287, "latex": 287, "well": [287, 330, 331, 348, 354, 355, 360], "cal": 287, "argumnet": [287, 357], "elk": [287, 308, 353, 354, 356, 357, 366], "uparrow": [287, 357, 362], "downarrow": [287, 357, 362], "side": [287, 310, 348], "mean": [287, 289, 314, 316, 317, 318, 321, 322, 323, 324, 348, 360], "treat": [287, 348, 359], "raw": 287, "No": [287, 336, 337, 348, 354], "ack_speci": 287, "base": [287, 289, 345, 348, 354, 358], "For": [287, 303, 312, 314, 316, 317, 318, 321, 322, 323, 324, 331, 343, 348, 353, 354, 357, 359, 360, 361, 362, 366], "clarif": 287, "visit": 287, "specif": [287, 303, 309, 348, 349, 353, 354, 357, 360], "clarifi": 287, "lingo": 287, "equival": [287, 348], "top": [287, 357], "take": [287, 303, 310, 316, 322, 348, 358, 363, 365], "figur": [287, 303, 330, 331, 334, 354, 356, 366], "subplot": 287, "larger": [287, 348], "row": [287, 353, 354, 361], "colomun": 287, "fig": [287, 354, 356], "linspac": 287, "pi": [287, 334], "1000": 287, "sin": 287, "plt_show": 287, "skip": [287, 360], "modifi": [287, 348, 353, 354], "set_ylim": 287, "k_z_plane": [288, 359], "rot_symm": [288, 359], "translat": [288, 362], "add_axes_label": [288, 359], "add_legend": [288, 330, 359], "exportplt": [288, 359, 366], "k_z": [288, 359], "invers": [288, 359], "either": [288, 348, 359], "rbg": [288, 359], "heat": [288, 359], "produc": [288, 348, 359, 366], "invalid": [288, 348, 359], "save_color": [289, 360], "only_spin": [289, 360], "savegif": [289, 360], "savemp4": [289, 360], "save_meshio": [289, 360], "save2d": [289, 360], "show_slic": [289, 360], "iso_slid": [289, 360], "simul": [289, 360], "mgb2": [289, 360], "ni_f": [289, 360], "49": [289, 360, 363], "iter": [289, 360], "ones": [289, 357, 360], "14": [289, 316, 322, 331, 335, 340, 353, 360, 362], "15": [289, 316, 322, 331, 335, 340, 348, 353, 360, 366], "17": [289, 316, 322, 325, 331, 335, 340, 353, 360], "kgrid": [289, 360], "5x5x5": [289, 360], "lead": [289, 360], "20x20x20": [289, 360], "uniform": [289, 360], "direect": [289, 360], "grai": [289, 360], "surfca": [289, 360], "property_project": [289, 360], "fermi_velocity_vector": [289, 360], "fermi_veloc": [289, 360], "harmon": [289, 360, 362], "effective_mass": [289, 360], "collinear": [289, 353, 354, 358, 360, 362], "As": [289, 348, 354, 360, 362], "suggest": [289, 360], "belov": [289, 360], "fast": [289, 360], "rather": [289, 360, 361, 366], "inaccur": [289, 348, 360], "nearest": [289, 360], "neighbor": [289, 360], "accur": [289, 360], "linear": [289, 360], "video": [289, 360], "export": [289, 360, 362], "stl": [289, 360], "binari": [289, 360], "ply": [289, 360], "ascii": [289, 360], "off": [289, 334, 335, 336, 337, 338, 339, 340, 343, 345, 360], "obj": [289, 360], "gltf": [289, 360], "collada": [289, 360], "meshio": [289, 360], "illus": [289, 360], "depth": [289, 349, 360], "graphic": [289, 360], "turn": [289, 360], "featur": [289, 312, 318, 324, 348, 359, 360, 361], "largest": [289, 360], "show_curvatur": [289, 360], "curvatur": [289, 360], "curvature_typ": [289, 360], "avail": [289, 348, 349, 354, 359, 360, 366], "gaussian": [289, 360], "slider": [289, 360], "iso_energi": [289, 360], "view": [289, 348, 360], "whole": [289, 348, 360], "nkx": 290, "nky": 290, "coord": 290, "grid_siz": 291, "40": [291, 307, 345, 354], "with_time_revers": 291, "recip": [291, 345, 360], "hpkot": [291, 345], "threshold": [291, 345], "07": [291, 319, 345], "angle_toler": 291, "supercell_matrix": [291, 345, 366], "recepi": 291, "procarrepair": [292, 364], "exist": 293, "pre": [303, 327, 330, 331, 343, 345, 348, 351, 352], "post": [303, 327, 330, 331, 343, 345, 348, 351, 352, 361], "cat": [303, 306, 355, 362], "depend": [303, 350, 357], "mai": [303, 318, 324, 348, 354, 360], "orbitald": 303, "bandsplot_2d": 303, "bandtructur": 303, "combin": [303, 348, 353, 354, 355, 360], "fermi2d": [303, 329, 332, 347, 359], "fermi3d": [303, 309, 310, 333, 341, 347, 360], "generate2dkmesh": [303, 343], "kmesh": [303, 309, 312, 360], "bandgap": [303, 342, 346, 347], "reapir": 303, "abinitoutput": 306, "prtprocar": 306, "nameofoutputfil": 306, "run": [306, 307, 309, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348, 355, 362], "split": [306, 355, 359], "bandlin": 307, "band_": [307, 353, 354], "_a": 307, "obtain": [307, 351, 352, 354, 355, 362], "task": [307, 351, 352], "22": 307, "addition": [307, 358], "spinpol": 307, "join": 307, "plot1d": 307, "gamma": [307, 312, 343, 354, 355, 363, 365, 366], "were": [307, 348], "guid": [308, 310, 312, 314, 316, 317, 318, 321, 322, 323, 324, 349], "prepar": 308, "perper": 308, "fatband": 309, "lobter": 309, "lobstercod": 309, "v6": [309, 310], "variou": [309, 310, 312, 351, 352, 358, 362, 363, 365], "independ": [309, 310, 312, 348], "pw": [309, 310], "your": [309, 310, 348, 349, 360], "bands_dirnam": [309, 310, 312], "dos_dirnam": [309, 310, 312], "bands_mod": [309, 310, 312], "dos_mod": [309, 310, 312], "right": [309, 348, 357, 360, 362], "addit": [309, 310, 312, 348, 360, 362], "wf_collect": 309, "nosym": 309, "noinv": 309, "k_point": [309, 310], "520": 309, "0000000": 309, "1428571": 309, "2857143": 309, "4285714": 309, "0000000000": [309, 310], "0000": 309, "0200000000": 309, "4800000000": 309, "5000000000": [309, 310], "5110420726": 309, "4889579274": 309, "7539676705": 309, "2460323295": 309, "7650097432": 309, "2349902568": 309, "h2": 309, "h0": 309, "2238002446": 309, "meth": 309, "explicitli": [309, 310, 348], "lobster_input_fil": 309, "explicit": [309, 310], "createfatband": 309, "2p_x": 309, "2p_y": 309, "2p_z": 309, "li": [309, 348], "fe": [309, 314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 335, 336, 337, 338, 339, 340, 344, 345], "lobster_q": 309, "projwfc": 310, "make": [310, 312, 348, 359, 361], "sure": [310, 312, 348], "kresolveddo": 310, "copi": [310, 348, 357], "main": [310, 358, 360, 363, 365], "nscf": 310, "crystal_b": 310, "6250000000": 310, "2500000000": 310, "u": [310, 348, 349, 359], "3750000000": 310, "7500000000": 310, "w": [310, 348, 360], "occur": [310, 348, 354], "269": 310, "0083333333": 310, "0166666667": 310, "0250000000": 310, "0333333333": 310, "0416666667": 310, "4916666667": 310, "5062500000": 310, "0125000000": 310, "6125000000": 310, "2250000000": 310, "6187500000": 310, "2375000000": 310, "3691406250": 310, "7382812500": 310, "3632812500": 310, "7265625000": 310, "3574218750": 310, "7148437500": 310, "0058593750": 310, "0117187500": 310, "starting_magnet": 310, "branch": 310, "print": [310, 366], "instal": [310, 348], "git": [310, 350], "clone": 310, "gitlab": 310, "com": [310, 348, 350], "pietrodeluga": 310, "q": [310, 360], "cd": [310, 350], "checkout": 310, "new_proj": 310, "bin": 310, "noncolin": 310, "lspinorb": 310, "savesigma": 310, "still": [311, 348], "develop": [311, 327, 330, 331, 343, 345], "wavefunct": [312, 362], "written": [312, 343, 345, 348, 366], "lorbit": [312, 366], "11": [312, 316, 322, 340, 341, 348, 353, 362], "incar": [312, 360], "unfold": [312, 351, 352, 362], "12": [312, 316, 322, 335, 340, 353, 360, 362, 366], "wave": [312, 362], "ispin": [312, 366], "lnoncollinear": 312, "icharg": 312, "math": [312, 353, 354], "chgcar": 312, "line_mod": 312, "h": [312, 348, 363, 366], "25": [312, 334, 337], "demonstr": [313, 320, 326, 329, 333, 342, 347], "capabl": [313, 320, 326, 329, 333, 342, 347, 351, 352, 354, 360], "compar": [313, 319, 334, 347, 351, 352, 362, 366], "click": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 360], "download": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347], "below": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 345, 348, 353, 354, 356], "replac": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 345], "data_dir": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345], "download_exampl": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "save_dir": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "spin_calc_typ": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "calc_typ": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "local": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 348], "project_dir": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "getcwd": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "sep": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 344, 345], "ebs_plot": [314, 315, 316, 317, 318], "0x000001fb2edda2e0": 314, "pleas": [314, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 343, 345, 348, 349, 350, 360, 362], "ref": [314, 316, 317, 318, 321, 322, 323, 324], "atomic_project": [314, 316, 317, 318, 321, 322, 323, 324], "0x000001fb2e480130": 314, "0x000001fb2d932850": 314, "0x000001fb2e122c10": 314, "0x000001fb2dd773a0": 314, "overlay_orbit": 314, "0x000001fb31d91bb0": 314, "0x000001fb2f6ef5e0": 314, "0x000001fb2d99d700": 314, "minut": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345], "136": [314, 319], "plotting_colinear": [314, 319], "jupyt": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347], "notebook": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347], "ipynb": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345], "galleri": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347], "sphinx": [314, 315, 316, 317, 318, 321, 322, 323, 324, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 347], "vasp_data_dir": 315, "qe_data_dir": 315, "equal": [315, 336, 337, 360], "0x000001fb2d9e2d00": 315, "597": [315, 319], "plotting_compare_band": [315, 319], "sphinx_gallery_thumbnail_numb": [316, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345], "0x000001fb31d988e0": 316, "express": [316, 322, 348], "therefor": [316, 322, 348, 353, 366], "0x000001fb05708490": 316, "240": [316, 319], "plotting_noncolinear_q": [316, 319], "0x000001fb2e0357c0": 317, "0x000001fb2db03f70": 317, "940": [317, 319], "plotting_noncolinear_vasp": [317, 319], "There": [318, 324, 348, 349, 360], "few": [318, 324], "0x000001fb2dc9b400": 318, "doc": [318, 324], "util": [318, 324, 343, 345, 348, 355, 359, 360, 361, 364], "default_set": [318, 324], "ini": [318, 324], "0x000001fb2dc501c0": 318, "0x000001fb2dabadf0": 318, "0x000001fb2e0e2190": 318, "293": [318, 319], "plotting_spin_polar": [318, 319], "00": [319, 325, 328, 332, 341, 346], "206": 319, "execut": [319, 325, 328, 332, 341, 346, 348, 354], "examples_00": 319, "band_structur": 319, "mb": [319, 325, 328, 332, 341, 346], "01": [319, 325, 328, 341], "dos_plot": [321, 322, 323, 324], "0x000001fb2d8ae070": 321, "0x000001fb31dabe80": 321, "0x000001fb3c783250": 321, "0x000001fb3d32baf0": 321, "0x000001fb3ce2c8b0": 321, "0x000001fb3cc5b7f0": 321, "20": [321, 325, 343, 345, 348], "838": [321, 325], "plotting_colinear_do": [321, 325], "0x000001fb2db5e070": 322, "706": [322, 325], "plotting_noncolinear_dos_q": [322, 325], "0x000001fb2e4a9700": 323, "568": [323, 325], "plotting_noncolinear_dos_vasp": [323, 325], "0x000001fb2e67c460": 324, "0x000001fb2d98fc10": 324, "0x000001fb2f404a30": 324, "0x000001fb52267e50": 324, "0x000001fb2f6c24c0": 324, "0x000001fb2db77340": 324, "0x000001fb526887c0": 324, "43": [324, 325], "564": [324, 325], "plotting_spin_polarized_do": [324, 325], "26": [325, 330, 332], "677": 325, "examples_01": 325, "04": [325, 341], "bands_dir": 327, "dos_dir": 327, "____": [327, 330, 331, 343, 345], "_": [327, 330, 331, 343, 345, 362], "__": [327, 330, 331, 343, 345], "___": [327, 330, 331, 343, 345], "librari": [327, 330, 331, 343, 345, 348, 350, 351, 352], "jun": [327, 330, 331, 343, 345], "10th": [327, 330, 331, 343, 345], "2021": [327, 330, 331, 343, 345], "cite": [327, 330, 331, 343, 345, 360], "uthpala": [327, 330, 331, 343, 345, 348], "herath": [327, 330, 331, 343, 345, 348], "pedram": [327, 330, 331, 343, 345, 348], "tavadz": [327, 330, 331, 343, 345, 348], "xu": [327, 330, 331, 343, 345, 348], "he": [327, 330, 331, 343, 345, 348], "eric": [327, 330, 331, 343, 345, 348], "bousquet": [327, 330, 331, 343, 345, 348], "sobhit": [327, 330, 331, 343, 345, 348], "singh": [327, 330, 331, 343, 345, 348], "francisco": [327, 330, 331, 343, 345, 348], "mu\u00f1oz": [327, 330, 331, 343, 345, 348], "aldo": [327, 330, 331, 343, 345, 348], "romero": [327, 330, 331, 343, 345, 348], "comput": [327, 330, 331, 343, 345, 348], "physic": [327, 330, 331, 343, 345, 348], "commun": [327, 330, 331, 343, 345, 348], "251": [327, 330, 331, 343, 345, 348], "2020": [327, 330, 331, 343, 345, 348], "107080": [327, 330, 331, 343, 345, 348], "rees": [327, 330, 331, 343, 345, 348], "boucher": [327, 330, 331, 343, 345, 348], "logan": [327, 330, 331, 343, 345, 348], "lang": [327, 330, 331, 343, 345, 348], "freddi": [327, 330, 331, 343, 345, 348], "farah": [327, 330, 331, 343, 345, 348], "116": [327, 328], "plotting_bandsdosplot": [327, 328], "examples_02": 328, "bands_do": 328, "noncolinear": [329, 332, 347, 353, 360], "c": [330, 331, 334, 348, 349, 350, 360, 365], "lllang": [330, 331], "desktop": [330, 331], "research": [330, 331, 348, 349], "comp": [330, 331], "rot": [330, 331], "trasl": [330, 331], "_____________________________________________________": [330, 331], "contact": [330, 348], "specfic": [330, 331], "navi": 330, "581": [330, 332], "plotting_fermi2d": [330, 332], "By": [331, 348, 360, 366], "s_z": [331, 353, 354, 359], "plain_band": 331, "19": [331, 332], "938": [331, 332], "plotting_fermi2d_spin_textur": [331, 332], "46": 332, "519": 332, "examples_03": 332, "isovalue_gif": [333, 341, 347], "van": [333, 341, 347], "alphen": [333, 341, 347], "fequenc": [333, 341, 347], "cross_sect": [333, 341, 347], "de": [334, 348], "frequenc": 334, "term": [334, 348], "theoret": 334, "freuqenc": 334, "taken": [334, 348], "experiment": 334, "paper": [334, 348], "copper": 334, "silver": 334, "gold": 334, "haa": 334, "doi": [334, 345, 348, 360], "1098": 334, "rsta": 334, "1962": 334, "0011": 334, "frac": [334, 362], "hbar": 334, "cg": 334, "768e": 334, "statcoulomb": 334, "0e": 334, "cm": 334, "0546e": 334, "27": 334, "erg": 334, "au": 334, "ensur": [334, 335, 336, 337, 338, 339, 340, 343, 345, 348], "screen": [334, 335, 336, 337, 338, 339, 340, 343, 345, 366], "off_screen": [334, 335, 336, 337, 338, 339, 340, 343, 345], "load": [334, 335, 336, 337, 338, 339, 340], "memori": [334, 335, 336, 337, 338, 339, 340, 361], "plot_fermi_cross_section_box_widget": 334, "5642": 334, "1586": 334, "ang": 334, "1586e": 334, "365e": 334, "f_": 334, "exp": 334, "50e": 334, "1596": 334, "1596e": 334, "68e": 334, "3956": 334, "3956e": 334, "61e": 334, "85e": 334, "527": [334, 341], "plotting_de_hass_van_alphen": [334, 341], "outermost": 335, "center": [335, 343, 348, 359, 360, 362], "adjust": 335, "manual": [335, 345, 354, 355], "plot_fermi_cross_sect": 335, "18": [335, 336, 337, 338, 339, 340, 341], "054241046313987": [335, 340], "2d_slice": 335, "864": [335, 341], "plotting_fermi3d_cross_sect": [335, 341], "would": [336, 337, 348, 353, 354, 359, 360], "throughout": [336, 337, 348], "plot_fermi_isoslid": 336, "239837592692684": [336, 337, 338], "23": [336, 341], "869": [336, 341], "plotting_fermi3d_isoslid": [336, 341], "exact": [337, 348], "create_isovalue_gif": 337, "24": [337, 341], "055": [337, 341], "plotting_fermi3d_isovalue_gif": [337, 341], "plot_fermi_surfac": [338, 339, 340], "272": [338, 341], "plotting_fermi3d_plain": [338, 341], "042041123610034": 339, "575": [339, 341], "plotting_fermi3d_spin": [339, 341], "624": [340, 341], "plotting_fermi3d_spin_textur": [340, 341], "52": [341, 362], "786": 341, "examples_04": 341, "kmesh_gener": [342, 346, 347, 359], "kpath_gener": [342, 346, 347], "particularli": [343, 355, 359, 364], "command": [343, 348, 350, 355, 356], "k_": 343, "num_grids_x": 343, "num_grids_i": 343, "add_mesh": 343, "show_ax": [343, 345], "show_grid": [343, 345], "320": [343, 346], "plotting_2dkmesh_gener": [343, 346], "note": [344, 350, 354, 355, 357, 360, 366], "band_gap": 344, "128": [344, 345, 346], "plotting_bandgap": [344, 346], "desir": [345, 354, 357, 360], "momentum": [345, 360], "enabl": [345, 348, 359, 360, 366], "suitabl": [345, 348], "suffici": 345, "typic": [345, 348, 364], "retriev": [345, 354], "slight": 345, "modif": [345, 348], "regard": [345, 348, 359, 361], "seek": 345, "seekpath": [345, 350], "hinuma": 345, "et": [345, 360], "al": [345, 360], "pizzi": 345, "kumagai": 345, "oba": 345, "tanaka": 345, "diagram": 345, "crystallographi": 345, "scienc": [345, 348], "2017": 345, "140": 345, "184": 345, "1016": [345, 348], "commatsci": 345, "2016": 345, "k_path": 345, "k_label": 345, "ey": 345, "unique_label": 345, "unique_kpath": 345, "enumer": 345, "append": 345, "ik": 345, "add_lin": 345, "els": 345, "add_point_label": 345, "point_color": 345, "text_color": 345, "font_siz": 345, "36": [345, 366], "always_vis": 345, "view_yz": 345, "353": [345, 346], "plotting_kpath_gener": [345, 346], "801": 346, "examples_05": 346, "sever": [347, 360], "what": [347, 348], "examples_python": 347, "zip": 347, "examples_jupyt": 347, "open": [348, 351, 352, 360], "head": [348, 349], "scientif": [348, 349], "our": [348, 349, 359], "visibl": [348, 349], "bibtex": 348, "articl": [348, 360], "herath2020107080": 348, "journal": [348, 360], "volum": [348, 360, 365], "year": [348, 360], "issn": 348, "0010": 348, "4655": 348, "cpc": 348, "2019": [348, 360], "url": [348, 360], "www": 348, "sciencedirect": 348, "pii": 348, "s0010465519303935": 348, "condens": 348, "matter": 348, "who": 348, "made": 348, "substanti": 348, "concept": 348, "design": 348, "softwar": [348, 360], "creation": 348, "draft": 348, "substant": 348, "revis": 348, "global": 348, "effort": 348, "team": 348, "thank": 348, "jan": 348, "janssen": 348, "litong": 348, "jiang": 348, "nichola": 348, "pike": 348, "don": [348, 349], "munoz": 348, "b": [348, 365], "departamento": 348, "isica": 348, "facultad": 348, "ciencia": 348, "universidad": 348, "chile": 348, "santiago": 348, "nanosci": 348, "nanotechnologi": 348, "cedenna": 348, "depart": 348, "astronomi": 348, "west": 348, "virginia": 348, "univers": 348, "morgantown": 348, "wv": 348, "26505": 348, "6315": 348, "usa": 348, "rutger": 348, "piscatawai": 348, "nj": 348, "08854": 348, "physiqu": 348, "th": 348, "eoriqu": 348, "mat": 348, "eriaux": 348, "cesam": 348, "universit": 348, "eg": 348, "4000": 348, "sart": 348, "tilman": 348, "belgium": 348, "gnu": 348, "public": [348, 349, 360], "29": 348, "june": 348, "2007": 348, "copyright": 348, "free": 348, "foundat": 348, "inc": 348, "fsf": 348, "everyon": 348, "permit": 348, "distribut": [348, 349], "verbatim": 348, "document": [348, 357], "preambl": 348, "copyleft": 348, "kind": 348, "practic": 348, "awai": 348, "freedom": 348, "share": 348, "contrast": 348, "guarante": 348, "program": 348, "remain": [348, 362], "its": 348, "releas": 348, "wai": [348, 349, 361], "too": [348, 364], "speak": 348, "price": 348, "charg": 348, "wish": [348, 354], "receiv": 348, "piec": 348, "know": 348, "thing": 348, "protect": 348, "prevent": [348, 364], "deni": 348, "surrend": 348, "certain": [348, 353, 354, 359], "respons": 348, "respect": [348, 353, 354, 359, 360, 361, 366], "grati": 348, "fee": 348, "pass": 348, "recipi": 348, "And": 348, "gpl": 348, "assert": 348, "offer": 348, "give": [348, 359, 362], "legal": 348, "permiss": [348, 364], "clearli": 348, "warranti": 348, "sake": 348, "mark": 348, "erron": [348, 364], "previou": [348, 360], "devic": 348, "access": [348, 353, 360, 362], "although": 348, "manufactur": 348, "fundament": 348, "incompat": 348, "aim": 348, "systemat": 348, "pattern": 348, "abus": 348, "product": 348, "individu": [348, 354], "unaccept": 348, "prohibit": 348, "those": 348, "aris": [348, 364], "domain": 348, "stand": 348, "readi": 348, "provis": 348, "futur": [348, 354], "threaten": 348, "constantli": 348, "patent": 348, "restrict": [348, 360], "purpos": [348, 366], "avoid": 348, "danger": 348, "could": [348, 354, 359, 361], "proprietari": 348, "assur": 348, "cannot": 348, "condit": 348, "AND": 348, "definit": [348, 360], "law": 348, "semiconductor": 348, "license": 348, "address": 348, "organ": 348, "adapt": 348, "fashion": 348, "earlier": 348, "unmodifi": 348, "propag": 348, "anyth": 348, "without": [348, 357, 360], "directli": 348, "secondarili": 348, "liabl": 348, "infring": 348, "applic": 348, "privat": 348, "countri": 348, "activ": [348, 360], "convei": 348, "parti": 348, "mere": 348, "network": 348, "transfer": 348, "displai": [348, 356], "appropri": 348, "notic": 348, "extent": 348, "conveni": 348, "promin": 348, "tell": 348, "menu": 348, "meet": 348, "criterion": 348, "prefer": [348, 349], "standard": [348, 360], "offici": 348, "recogn": 348, "bodi": 348, "languag": 348, "wide": 348, "among": 348, "serv": 348, "context": 348, "essenti": [348, 358], "kernel": 348, "compil": 348, "interpret": 348, "howev": [348, 354, 360], "tool": 348, "associ": 348, "dynam": 348, "link": [348, 357], "subprogram": 348, "intim": 348, "flow": 348, "regener": 348, "basic": [348, 351, 352, 354, 357], "grant": 348, "irrevoc": 348, "met": 348, "affirm": 348, "unlimit": 348, "content": 348, "constitut": 348, "acknowledg": [348, 349], "fair": 348, "long": [348, 354, 360], "otherwis": 348, "forc": 348, "sole": 348, "exclus": 348, "facil": 348, "compli": 348, "thu": [348, 353], "behalf": 348, "outsid": 348, "relationship": 348, "circumst": 348, "sublicens": 348, "unnecessari": 348, "anti": 348, "circumvent": 348, "shall": 348, "deem": 348, "technolog": 348, "measur": 348, "fulfil": 348, "oblig": 348, "wipo": 348, "treati": 348, "adopt": 348, "decemb": 348, "1996": 348, "waiv": 348, "power": 348, "forbid": 348, "exercis": 348, "disclaim": 348, "intent": 348, "enforc": 348, "against": 348, "medium": 348, "conspicu": 348, "publish": [348, 360], "intact": 348, "absenc": 348, "date": [348, 350, 360], "entir": 348, "anyon": 348, "possess": 348, "regardless": 348, "natur": 348, "storag": 348, "aggreg": 348, "beyond": [348, 354, 357], "inclus": 348, "caus": 348, "machin": 348, "readabl": 348, "embodi": 348, "accompani": 348, "durabl": 348, "customarili": 348, "interchang": 348, "valid": 348, "least": 348, "three": [348, 353, 354, 355, 360, 361], "spare": 348, "model": 348, "reason": [348, 354], "cost": 348, "server": 348, "altern": 348, "occasion": 348, "noncommerci": 348, "subsect": 348, "6b": 348, "maintain": 348, "clear": [348, 356], "next": [348, 360], "sai": 348, "host": 348, "satisfi": 348, "peer": 348, "transmiss": 348, "6d": 348, "portion": 348, "whose": 348, "exclud": 348, "consum": 348, "tangibl": 348, "person": 348, "famili": 348, "household": 348, "sold": 348, "incorpor": [348, 354], "dwell": 348, "doubt": 348, "resolv": [348, 353, 354, 357], "favor": 348, "coverag": 348, "common": 348, "statu": 348, "actual": 348, "commerci": 348, "industri": 348, "unless": 348, "signific": 348, "procedur": 348, "suffic": 348, "continu": [348, 360], "interf": 348, "been": [348, 360], "transact": 348, "perpetu": 348, "character": 348, "neither": 348, "nor": 348, "abil": 348, "rom": 348, "servic": 348, "itself": [348, 349], "advers": 348, "affect": 348, "violat": 348, "rule": 348, "protocol": 348, "across": [348, 362], "publicli": 348, "password": 348, "unpack": 348, "supplement": 348, "though": 348, "govern": 348, "remov": 348, "own": 348, "notwithstand": 348, "holder": 348, "liabil": 348, "preserv": 348, "misrepresent": 348, "licensor": 348, "declin": 348, "trademark": 348, "trade": 348, "indemnif": 348, "contractu": 348, "assumpt": 348, "impos": 348, "relicens": 348, "surviv": 348, "statement": 348, "termin": [348, 350], "expressli": 348, "attempt": 348, "void": 348, "paragraph": 348, "ceas": 348, "reinstat": 348, "provision": 348, "until": 348, "perman": 348, "fail": 348, "notifi": 348, "60": [348, 359, 361], "dai": 348, "cessat": 348, "moreov": 348, "cure": 348, "receipt": 348, "qualifi": 348, "Not": 348, "ancillari": 348, "consequ": 348, "likewis": 348, "action": [348, 360], "downstream": 348, "subject": 348, "complianc": 348, "entiti": 348, "asset": 348, "subdivid": 348, "whatev": 348, "predecessor": 348, "interest": [348, 360], "had": [348, 354], "plu": 348, "royalti": 348, "litig": 348, "claim": 348, "counterclaim": 348, "lawsuit": 348, "alleg": 348, "sell": 348, "sale": 348, "acquir": 348, "hereaft": 348, "manner": [348, 354], "worldwid": 348, "agreement": 348, "commit": 348, "denomin": 348, "coven": 348, "sue": 348, "knowingli": 348, "reli": 348, "readili": 348, "arrang": [348, 353, 354], "depriv": 348, "yourself": 348, "benefit": 348, "knowledg": 348, "identifi": [348, 353, 354, 359], "believ": 348, "pursuant": 348, "singl": [348, 355], "procur": 348, "convey": 348, "discriminatori": 348, "scope": 348, "busi": 348, "payment": 348, "primarili": 348, "enter": 348, "28": 348, "march": 348, "constru": 348, "impli": 348, "defens": 348, "court": 348, "contradict": 348, "excus": 348, "simultan": 348, "pertin": 348, "agre": 348, "collect": [348, 360], "whom": 348, "refrain": 348, "affero": 348, "concern": [348, 360], "Such": 348, "spirit": 348, "distinguish": 348, "later": 348, "ever": 348, "proxi": 348, "THERE": 348, "NO": 348, "FOR": 348, "THE": 348, "TO": 348, "BY": 348, "IN": 348, "OR": 348, "AS": 348, "OF": 348, "BUT": 348, "NOT": 348, "merchant": 348, "fit": 348, "risk": 348, "qualiti": 348, "WITH": 348, "prove": 348, "defect": 348, "necessari": [348, 354, 362], "event": 348, "WILL": 348, "BE": 348, "damag": 348, "incident": 348, "consequenti": 348, "inabl": 348, "loss": 348, "BEING": 348, "sustain": 348, "failur": 348, "IF": 348, "SUCH": 348, "advis": 348, "review": 348, "close": [348, 360], "approxim": 348, "absolut": 348, "waiver": 348, "civil": 348, "greatest": 348, "best": 348, "achiev": [348, 364], "redistribut": 348, "safest": 348, "pointer": 348, "brief": 348, "idea": 348, "hope": 348, "mail": 348, "short": 348, "welcom": 348, "hypothet": 348, "Of": 348, "cours": 348, "gui": 348, "employ": 348, "programm": 348, "school": 348, "sign": [348, 364], "subroutin": 348, "lesser": 348, "philosophi": 348, "why": 348, "lgpl": 348, "herein": 348, "subclass": 348, "minim": 348, "isol": 348, "reproduc": 348, "bound": 348, "suppli": [348, 354], "good": [348, 360], "faith": 348, "meaning": [348, 356], "header": 348, "choic": [348, 357, 359], "numer": 348, "layout": 348, "accessor": 348, "small": [348, 360], "macro": 348, "inlin": 348, "templat": 348, "ten": 348, "fewer": 348, "engin": 348, "debug": 348, "dure": [348, 364], "recombin": 348, "relink": 348, "mechan": 348, "properli": 348, "compat": 348, "4d0": 348, "4d1": 348, "uncombin": 348, "prerequisit": 349, "yet": 349, "simplest": 349, "recommend": [349, 353, 354, 364], "anaconda": 349, "conda": 349, "forg": [349, 350], "pip": 349, "via": 349, "pypi": 349, "instruct": [349, 360], "author": [349, 360], "citat": [349, 360], "elsevi": 349, "ase": 350, "romerogroup": 350, "onc": 350, "robust": [351, 352], "manag": [351, 352, 358, 363, 365], "kohn": [351, 352, 362], "sham": [351, 352, 362], "That": [351, 352], "multitud": [351, 352], "partial": [351, 352], "convent": [353, 354, 357], "s_x": [353, 354, 359, 361], "s_y": [353, 354, 359], "st": [353, 354, 359, 360], "perpendicular": [353, 354, 359], "k_x": [353, 354, 359], "k_y": [353, 354, 359], "rashba": [353, 354, 359], "seismic": [353, 354], "onto": [353, 354, 362], "ion": [353, 354, 361, 362], "five": [353, 354], "_3": [353, 354, 357], "correl": [353, 354], "strongli": [353, 354], "jm": 353, "y_": [353, 354, 362], "site": [353, 354, 362], "logic": [353, 354], "probe": [353, 354], "queri": [353, 354], "portrai": 354, "fine": [354, 359, 360], "let": 354, "usag": [354, 355, 356, 357, 359, 361, 364, 366], "39": 354, "79": 354, "119": 354, "159": 354, "filter": [354, 362], "comparison": [354, 356], "syntax": 354, "bands_up": 354, "block": [354, 362], "meant": 354, "suit": 354, "four": 354, "set_titl": 354, "convers": 354, "variabl": 354, "199": [354, 363, 366], "239": 354, "279": 354, "319": 354, "scriptbandsplot": 354, "larg": [355, 361], "hexagon": [355, 366], "procar_g": 355, "procar_k": 355, "procar_m": 355, "seper": 355, "scriptcat": 355, "acheiv": 356, "procar1": 356, "kpointsfil": 356, "kpoints1": 356, "outcar1": 356, "srvo_3": 356, "veri": [357, 361], "invlov": 357, "exmpla": 357, "api": 357, "match": [357, 360], "aregumnet": 357, "button": 357, "did": 357, "defalut": 357, "switch": [357, 360], "back": 357, "dos_plain_v": 357, "illustr": [357, 362], "familiar": 357, "lawngreen": 357, "orang": 357, "royalblu": 357, "stach": 357, "anoth": [357, 360], "variat": 357, "central": 358, "known": [358, 360, 363, 365], "dir": [358, 363, 365], "path_to_calcul": [358, 363, 365], "relat": [358, 363, 365], "k1": 358, "k2": 358, "k3": 358, "nprincip": 358, "prinicip": 358, "is_non_collinear": 358, "calcuul": 358, "kpoints_cartesian": 358, "kpoints_reduc": 358, "sometim": 358, "infom": 358, "meshgrid": 358, "index_mesh": 358, "kpoints_mesh": 358, "cartesian_mesh": 358, "bands_mesh": 358, "projected_mesh": 358, "project_phase_mesh": 358, "weights_mesh": 358, "bands_gradient_mesh": 358, "bands_hessian_mesh": 358, "ebs_sum": 358, "ibz2fbz": 358, "recov": 358, "broullin": 358, "dresselhau": 359, "analyz": 359, "topologi": 359, "examin": 359, "lifshitz": 359, "transit": 359, "e_": 359, "noarrow": 359, "usual": 359, "fault": 359, "solut": 359, "90": 359, "degre": 359, "mostli": 359, "220": 359, "Be": 359, "care": 359, "scriptfermi2d": 359, "phonon": 360, "divid": 360, "sub": 360, "monkhorst": 360, "pack": 360, "isym": 360, "focus": 360, "polygon": 360, "smooth": 360, "cube": 360, "999999": 360, "000001": 360, "triangl": 360, "assign": 360, "aspect": 360, "handel": 360, "isosurfcac": 360, "fermisurfcae3d": 360, "eigen": 360, "bottom": 360, "amaz": 360, "pyvista_doc": 360, "trimesh_doc": 360, "trimesh_cit": 360, "dawson": 360, "haggerti": 360, "trimsh": 360, "sullivan2019pyvista": 360, "21105": 360, "joss": 360, "01450": 360, "month": 360, "37": 360, "1450": 360, "bane": 360, "sullivan": 360, "alexand": 360, "kaszynski": 360, "analysi": [360, 361], "streamlin": 360, "toolkit": 360, "vtk": 360, "mgb": 360, "srfeo": 360, "won": 360, "nonpol": 360, "scale": 360, "try": 360, "nprocess": 360, "scheme": [360, 366], "p_x": [360, 361], "p_y": 360, "p_z": 360, "spinor": [360, 362], "ON": 360, "opac": 360, "sampl": 360, "enough": 360, "evalu": 360, "kx1": 360, "ky1": 360, "kz1": 360, "color1": 360, "kx2": 360, "ky2": 360, "kz2": 360, "color2": 360, "kx3": 360, "ky3": 360, "kz3": 360, "color3": 360, "request": 360, "linux": 360, "mac": 360, "focu": 360, "zoom": 360, "isometr": 360, "wirefram": 360, "reset": 360, "middl": 360, "pan": 360, "scene": 360, "left": [360, 362], "cmd": 360, "ctrl": 360, "mous": 360, "wheel": 360, "ctl": 360, "screenhsot": 360, "backgroundplott": 360, "pick": 360, "decreas": 360, "scriptfermi3d": 360, "simpler": 361, "subset": 361, "heterostructur": 361, "enorm": 361, "consider": 361, "faster": 361, "rel": 361, "smaller": 361, "70": 361, "ignor": 361, "far": 361, "band50": 361, "low": 361, "column": [361, 362], "real": 361, "filtered_sp": 361, "especi": 361, "hybrid": 361, "filtered_kpoint": 361, "filtered_spin": 361, "filter_atom": 361, "atom_typ": 361, "scriptfilt": 361, "orbital_nam": 361, "human_atom": 361, "re": 361, "overview": 362, "guidanc": 362, "conduct": 362, "prep": 362, "commonli": 362, "decompos": 362, "224": 362, "12500000": 362, "65660295": 362, "occ": 362, "052": 362, "000": 362, "comment": 362, "nion": 362, "report": 362, "repeat": 362, "spheric": 362, "sphere": 362, "radiu": 362, "alpha": [362, 365], "phi_": 362, "nk": 362, "sum_": 362, "mu": 362, "nu": 362, "sigma_": 362, "psi_": 362, "sigma": 362, "pauli": 362, "bmatrix": 362, "keyboard": 362, "shortcut": 362, "kapth": 363, "nsegment": 363, "belong": 363, "99": 363, "149": 363, "249": 363, "299": 363, "distanc": [363, 366], "8660254": 363, "70710678": 363, "4330127": 363, "8291562": 363, "ill": 364, "lack": 364, "neg": 364, "5000000": 364, "scriptrepair": 364, "beta": 365, "nspeci": 365, "atomic_numb": 365, "lattice_corn": 365, "cell_convex_hul": 365, "get_space_group_numb": 365, "get_space_group_intern": 365, "get_wyckoff_posit": 365, "get_spglib_symmetry_dataset": 365, "often": 366, "primit": 366, "becom": 366, "quit": 366, "sophist": 366, "fold": 366, "difficult": 366, "fat": 366, "proport": 366, "shrink": 366, "2x2x2": 366, "doubl": 366, "fname": 366, "diag": 366, "shift_efermi": 366, "54": 366, "86": 366, "110": 366, "147": 366, "165": 366, "print_kpt": 366, "show_band": 366, "savetab": 366, "csv": 366, "unfolded_band": 366, "scriptunfold": 366, "elkin": 366, "unfold_mod": 366, "unfold_mask": 366, "unfold_result": 366, "unfol": 366}, "objects": {"pyprocar.core": [[0, 0, 1, "", "BrillouinZone"], [3, 0, 1, "", "DensityOfStates"], [12, 0, 1, "", "ElectronicBandStructure"], [54, 0, 1, "", "FermiSurface"], [61, 0, 1, "", "FermiSurface3D"], [74, 0, 1, "", "Isosurface"], [81, 0, 1, "", "KPath"], [90, 0, 1, "", "Structure"], [116, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[4, 1, 1, "", "__init__"], [5, 1, 1, "", "coupled_to_uncoupled_basis"], [6, 1, 1, "", "dos_sum"], [7, 1, 1, "", "get_current_basis"], [8, 2, 1, "", "is_non_collinear"], [9, 2, 1, "", "n_dos"], [10, 2, 1, "", "n_energies"], [11, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[13, 1, 1, "", "__init__"], [14, 2, 1, "", "bands_gradient_mesh"], [15, 2, 1, "", "bands_hessian_mesh"], [16, 2, 1, "", "bands_mesh"], [17, 1, 1, "", "calculate_scalar_gradient"], [18, 1, 1, "", "calculate_scalar_integral"], [19, 1, 1, "", "create_nd_mesh"], [20, 1, 1, "", "create_scaler_mesh"], [21, 1, 1, "", "create_vector_mesh"], [22, 1, 1, "", "ebs_sum"], [23, 1, 1, "", "ibz2fbz"], [24, 2, 1, "", "index_mesh"], [25, 2, 1, "", "is_non_collinear"], [26, 2, 1, "", "kpoints_cartesian"], [27, 2, 1, "", "kpoints_cartesian_mesh"], [28, 2, 1, "", "kpoints_mesh"], [29, 2, 1, "", "kpoints_reduced"], [30, 2, 1, "", "n_kx"], [31, 2, 1, "", "n_ky"], [32, 2, 1, "", "n_kz"], [33, 2, 1, "", "natoms"], [34, 2, 1, "", "nbands"], [35, 2, 1, "", "nkpoints"], [36, 2, 1, "", "norbitals"], [37, 2, 1, "", "nprincipals"], [38, 2, 1, "", "nspins"], [39, 1, 1, "", "plot_kpoints"], [40, 2, 1, "", "projected_mesh"], [41, 2, 1, "", "projected_phase_mesh"], [42, 1, 1, "", "unfold"], [43, 1, 1, "", "update_bands_gradient_mesh"], [44, 1, 1, "", "update_bands_hessian_mesh"], [45, 1, 1, "", "update_bands_mesh"], [46, 1, 1, "", "update_index_mesh"], [47, 1, 1, "", "update_kpoints_cartesian_mesh"], [48, 1, 1, "", "update_kpoints_mesh"], [49, 1, 1, "", "update_projected_mesh"], [50, 1, 1, "", "update_projected_phase_mesh"], [51, 1, 1, "", "update_weights"], [52, 1, 1, "", "update_weights_mesh"], [53, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "add_axes_labels"], [57, 1, 1, "", "add_legend"], [58, 1, 1, "", "find_energy"], [59, 1, 1, "", "plot"], [60, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[62, 1, 1, "", "__init__"], [63, 1, 1, "", "calculate_effective_mass"], [64, 1, 1, "", "calculate_fermi_speed"], [65, 1, 1, "", "calculate_fermi_velocity"], [66, 1, 1, "", "calculate_first_and_second_derivative_energy"], [67, 1, 1, "", "calculate_first_and_second_derivative_energy_band"], [68, 1, 1, "", "create_spin_texture"], [69, 1, 1, "", "create_vector_texture"], [70, 1, 1, "", "extend_surface"], [71, 1, 1, "", "project_atomic_projections"], [72, 1, 1, "", "project_color"], [73, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[75, 1, 1, "", "__init__"], [76, 2, 1, "", "dxyz"], [77, 2, 1, "", "nX"], [78, 2, 1, "", "nY"], [79, 2, 1, "", "nZ"], [80, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "get_kpoints_transformed"], [84, 1, 1, "", "get_optimized_kpoints_transformed"], [85, 2, 1, "", "kdistances"], [86, 2, 1, "", "nsegments"], [87, 2, 1, "", "tick_names"], [88, 2, 1, "", "tick_positions"], [89, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[91, 1, 1, "", "__init__"], [92, 2, 1, "", "a"], [93, 2, 1, "", "alpha"], [94, 2, 1, "", "atomic_numbers"], [95, 2, 1, "", "b"], [96, 2, 1, "", "beta"], [97, 2, 1, "", "c"], [98, 2, 1, "", "cell_convex_hull"], [99, 2, 1, "", "density"], [100, 2, 1, "", "gamma"], [101, 1, 1, "", "get_space_group_international"], [102, 1, 1, "", "get_space_group_number"], [103, 1, 1, "", "get_spglib_symmetry_dataset"], [104, 1, 1, "", "get_wyckoff_positions"], [105, 1, 1, "", "is_point_inside"], [106, 2, 1, "", "lattice_corners"], [107, 2, 1, "", "masses"], [108, 2, 1, "", "natoms"], [109, 2, 1, "", "nspecies"], [110, 1, 1, "", "plot_cell_convex_hull"], [111, 2, 1, "", "reciprocal_lattice"], [112, 2, 1, "", "species"], [113, 1, 1, "", "supercell"], [114, 1, 1, "", "transform"], [115, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[117, 1, 1, "", "__init__"], [118, 2, 1, "", "centers"], [119, 1, 1, "", "export"], [120, 2, 1, "", "faces_array"], [121, 1, 1, "", "set_color_with_cmap"], [122, 1, 1, "", "set_scalars"], [123, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[135, 0, 1, "", "AbinitKpoints"], [137, 0, 1, "", "AbinitProcar"], [139, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[136, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[138, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[140, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[141, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[144, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[145, 1, 1, "", "__init__"], [146, 2, 1, "", "dos"], [147, 1, 1, "", "dos_parametric"], [148, 2, 1, "", "dos_projected"], [149, 2, 1, "", "dos_to_dict"], [150, 2, 1, "", "dos_total"], [151, 2, 1, "", "final_structure"], [152, 2, 1, "", "initial_structure"], [153, 1, 1, "", "parse_structure"], [154, 2, 1, "", "species"], [155, 2, 1, "", "structure"], [156, 2, 1, "", "structures"]], "pyprocar.io.qe": [[157, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[158, 1, 1, "", "__init__"], [159, 2, 1, "", "final_structure"], [160, 1, 1, "", "getKpointLabels"], [161, 2, 1, "", "initial_structure"], [162, 1, 1, "", "kpoints_cart"], [163, 2, 1, "", "species"], [164, 2, 1, "", "structure"], [165, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[166, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[167, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[168, 0, 1, "", "Kpoints"], [170, 0, 1, "", "Outcar"], [175, 0, 1, "", "Poscar"], [177, 0, 1, "", "Procar"], [183, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[169, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[171, 1, 1, "", "__init__"], [172, 2, 1, "", "efermi"], [173, 2, 1, "", "reciprocal_lattice"], [174, 2, 1, "", "rotations"]], "pyprocar.io.vasp.Poscar": [[176, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[178, 1, 1, "", "__init__"], [179, 2, 1, "", "kpoints_cartesian"], [180, 2, 1, "", "kpoints_reduced"], [181, 1, 1, "", "repair"], [182, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[184, 1, 1, "", "__init__"], [185, 2, 1, "", "bands"], [186, 2, 1, "", "bands_projected"], [187, 1, 1, "", "conv"], [188, 2, 1, "", "convergence"], [189, 2, 1, "", "convergence_electronic"], [190, 2, 1, "", "convergence_ionic"], [191, 2, 1, "", "dos"], [192, 2, 1, "", "dos_projected"], [193, 2, 1, "", "dos_to_dict"], [194, 2, 1, "", "dos_total"], [195, 2, 1, "", "energies"], [196, 2, 1, "", "energy"], [197, 2, 1, "", "fermi"], [198, 2, 1, "", "final_structure"], [199, 2, 1, "", "forces"], [200, 1, 1, "", "get_general"], [201, 1, 1, "", "get_params"], [202, 1, 1, "", "get_scstep"], [203, 1, 1, "", "get_set"], [204, 1, 1, "", "get_structure"], [205, 1, 1, "", "get_varray"], [206, 2, 1, "", "incar"], [207, 2, 1, "", "initial_structure"], [208, 2, 1, "", "is_finished"], [209, 2, 1, "", "iteration_data"], [210, 2, 1, "", "kpoints"], [211, 2, 1, "", "kpoints_list"], [212, 2, 1, "", "last_energy"], [213, 1, 1, "", "parse_vasprun"], [214, 2, 1, "", "potcar_info"], [215, 1, 1, "", "read"], [216, 2, 1, "", "species"], [217, 2, 1, "", "structure"], [218, 2, 1, "", "structures"], [219, 1, 1, "", "text_to_bool"], [220, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[228, 0, 1, "", "DOSPlot"], [247, 0, 1, "", "EBSPlot"], [265, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "draw_fermi"], [231, 1, 1, "", "grid"], [232, 1, 1, "", "legend"], [233, 1, 1, "", "plot_dos"], [234, 1, 1, "", "plot_parametric"], [235, 1, 1, "", "plot_parametric_line"], [236, 1, 1, "", "plot_stack"], [237, 1, 1, "", "plot_stack_orbitals"], [238, 1, 1, "", "plot_stack_species"], [239, 1, 1, "", "save"], [240, 1, 1, "", "set_xlabel"], [241, 1, 1, "", "set_xlim"], [242, 1, 1, "", "set_xticks"], [243, 1, 1, "", "set_ylabel"], [244, 1, 1, "", "set_ylim"], [245, 1, 1, "", "set_yticks"], [246, 1, 1, "", "show"]], "pyprocar.plotter.EBSPlot": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "draw_fermi"], [250, 1, 1, "", "grid"], [251, 1, 1, "", "legend"], [252, 1, 1, "", "plot_bands"], [253, 1, 1, "", "plot_parameteric"], [254, 1, 1, "", "plot_parameteric_overlay"], [255, 1, 1, "", "plot_scatter"], [256, 1, 1, "", "save"], [257, 1, 1, "", "set_title"], [258, 1, 1, "", "set_xlabel"], [259, 1, 1, "", "set_xlim"], [260, 1, 1, "", "set_xticks"], [261, 1, 1, "", "set_ylabel"], [262, 1, 1, "", "set_ylim"], [263, 1, 1, "", "set_yticks"], [264, 1, 1, "", "show"]], "pyprocar.plotter.ProcarPlot": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "atomicPlot"], [268, 1, 1, "", "parametricPlot"], [269, 1, 1, "", "plotBands"], [270, 1, 1, "", "scatterPlot"]], "pyprocar": [[357, 3, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[275, 0, 1, "", "FermiHandler"], [282, 4, 1, "", "bandgap"], [283, 4, 1, "", "bandsdosplot"], [284, 4, 1, "", "bandsplot"], [285, 4, 1, "", "bandsplot_2d"], [286, 4, 1, "", "cat"], [287, 4, 1, "", "dosplot"], [288, 4, 1, "", "fermi2D"], [289, 4, 1, "", "fermi3D"], [290, 4, 1, "", "generate2dkmesh"], [291, 4, 1, "", "kpath"], [292, 4, 1, "", "repair"], [354, 3, 0, "-", "scriptBandsplot"], [355, 3, 0, "-", "scriptCat"], [359, 3, 0, "-", "scriptFermi2D"], [360, 3, 0, "-", "scriptFermi3D"], [361, 3, 0, "-", "scriptFilter"], [364, 3, 0, "-", "scriptRepair"], [366, 3, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "create_isovalue_gif"], [278, 1, 1, "", "plot_fermi_cross_section"], [279, 1, 1, "", "plot_fermi_cross_section_box_widget"], [280, 1, 1, "", "plot_fermi_isoslider"], [281, 1, 1, "", "plot_fermi_surface"]], "pyprocar.scripts.scriptBandsplot": [[354, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[355, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[359, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[360, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[361, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[364, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[366, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pyprocar": [0, 3, 12, 54, 61, 74, 81, 90, 116, 135, 137, 139, 141, 144, 157, 166, 168, 170, 175, 177, 183, 228, 247, 265, 275, 348, 349, 351, 352], "core": [0, 3, 12, 54, 61, 74, 81, 90, 116, 129], "brillouinzon": [0, 124], "__init__": [1, 4, 13, 55, 62, 75, 82, 91, 117, 136, 138, 140, 142, 145, 158, 167, 169, 171, 176, 178, 184, 229, 248, 266, 276], "wigner_seitz": 2, "densityofst": [3, 125], "coupled_to_uncoupled_basi": 5, "dos_sum": 6, "get_current_basi": 7, "is_non_collinear": [8, 25], "n_do": 9, "n_energi": 10, "n_spin": 11, "electronicbandstructur": [12, 126, 358], "bands_gradient_mesh": 14, "bands_hessian_mesh": 15, "bands_mesh": 16, "calculate_scalar_gradi": 17, "calculate_scalar_integr": 18, "create_nd_mesh": 19, "create_scaler_mesh": 20, "create_vector_mesh": 21, "ebs_sum": 22, "ibz2fbz": 23, "index_mesh": 24, "kpoints_cartesian": [26, 179], "kpoints_cartesian_mesh": 27, "kpoints_mesh": 28, "kpoints_reduc": [29, 180], "n_kx": 30, "n_ky": 31, "n_kz": 32, "natom": [33, 108], "nband": 34, "nkpoint": 35, "norbit": 36, "nprincip": 37, "nspin": 38, "plot_kpoint": 39, "projected_mesh": 40, "projected_phase_mesh": 41, "unfold": [42, 366], "update_bands_gradient_mesh": 43, "update_bands_hessian_mesh": 44, "update_bands_mesh": 45, "update_index_mesh": 46, "update_kpoints_cartesian_mesh": 47, "update_kpoints_mesh": 48, "update_projected_mesh": 49, "update_projected_phase_mesh": 50, "update_weight": 51, "update_weights_mesh": 52, "weights_mesh": 53, "fermisurfac": [54, 127], "add_axes_label": 56, "add_legend": 57, "find_energi": 58, "plot": [59, 314, 316, 317, 318, 321, 322, 323, 324, 326, 327, 330, 331, 335, 336, 337, 338, 339, 340, 343, 345, 347, 354, 359, 366], "spin_textur": [60, 340], "fermisurface3d": [61, 128], "calculate_effective_mass": 63, "calculate_fermi_spe": 64, "calculate_fermi_veloc": 65, "calculate_first_and_second_derivative_energi": 66, "calculate_first_and_second_derivative_energy_band": 67, "create_spin_textur": 68, "create_vector_textur": 69, "extend_surfac": 70, "project_atomic_project": 71, "project_color": 72, "project_spin_texture_atomic_project": 73, "isosurfac": [74, 130], "dxyz": 76, "nx": 77, "ny": 78, "nz": 79, "surface_boundari": 80, "kpath": [81, 131, 291, 304, 363], "get_kpoints_transform": 83, "get_optimized_kpoints_transform": 84, "kdistanc": 85, "nsegment": 86, "tick_nam": 87, "tick_posit": 88, "write_to_fil": 89, "structur": [90, 132, 155, 156, 164, 165, 217, 218, 310, 312, 313, 314, 315, 316, 317, 318, 347, 354, 358, 365], "alpha": 93, "atomic_numb": 94, "b": 95, "beta": 96, "c": 97, "cell_convex_hul": 98, "densiti": [99, 310, 312, 320, 321, 324, 347, 357], "gamma": 100, "get_space_group_intern": 101, "get_space_group_numb": 102, "get_spglib_symmetry_dataset": 103, "get_wyckoff_posit": 104, "is_point_insid": 105, "lattice_corn": 106, "mass": 107, "nspeci": 109, "plot_cell_convex_hul": 110, "reciprocal_lattic": [111, 173], "speci": [112, 154, 163, 216], "supercel": 113, "transform": 114, "volum": 115, "surfac": [116, 133, 334, 360], "center": 118, "export": [119, 354, 359, 366], "faces_arrai": 120, "set_color_with_cmap": 121, "set_scalar": 122, "set_vector": 123, "api": [129, 134, 223, 273, 303], "refer": 134, "io": [135, 137, 139, 141, 144, 157, 166, 168, 170, 175, 177, 183, 223], "abinit": [135, 137, 139, 306], "abinitkpoint": 135, "abinitprocar": 137, "output": 139, "bxsf": 141, "bxsfparser": [141, 222], "parse_bxsf": 143, "lobster": [144, 309], "lobsterpars": [144, 224], "do": [146, 191, 322, 323, 326, 347], "dos_parametr": 147, "dos_project": [148, 192], "dos_to_dict": [149, 193], "dos_tot": [150, 194], "final_structur": [151, 159, 198], "initial_structur": [152, 161, 207], "parse_structur": 153, "qe": 157, "qepars": [157, 225], "getkpointlabel": 160, "kpoints_cart": 162, "siesta": [166, 311], "siestapars": [166, 226], "vasp": [168, 170, 175, 177, 183, 312, 317, 323], "kpoint": [168, 210, 359], "outcar": 170, "efermi": 172, "rotat": [174, 359], "poscar": 175, "procar": [177, 360], "repair": [181, 292, 364], "symmetr": 182, "vaspxml": 183, "band": [185, 310, 312, 313, 314, 315, 316, 317, 318, 326, 330, 331, 347, 354, 356, 358, 366], "bands_project": 186, "conv": 187, "converg": 188, "convergence_electron": 189, "convergence_ion": 190, "energi": [195, 196], "fermi": [197, 310, 312, 329, 333, 334, 347, 360], "forc": 199, "get_gener": 200, "get_param": 201, "get_scstep": 202, "get_set": 203, "get_structur": 204, "get_varrai": 205, "incar": 206, "is_finish": 208, "iteration_data": 209, "kpoints_list": 211, "last_energi": 212, "parse_vasprun": 213, "potcar_info": 214, "read": 215, "text_to_bool": 219, "vasp_paramet": 220, "abinitpars": 221, "vasppars": 227, "plotter": [228, 247, 265, 273], "dosplot": [228, 272, 287, 298], "draw_fermi": [230, 249], "grid": [231, 250], "legend": [232, 251], "plot_do": 233, "plot_parametr": 234, "plot_parametric_lin": 235, "plot_stack": 236, "plot_stack_orbit": 237, "plot_stack_speci": 238, "save": [239, 256, 335], "set_xlabel": [240, 258], "set_xlim": [241, 259], "set_xtick": [242, 260], "set_ylabel": [243, 261], "set_ylim": [244, 262], "set_ytick": [245, 263], "show": [246, 264, 334], "ebsplot": [247, 271], "plot_band": 252, "plot_parameter": 253, "plot_parameteric_overlai": 254, "plot_scatt": 255, "set_titl": 257, "procarplot": [265, 274], "atomicplot": 267, "parametricplot": 268, "plotband": 269, "scatterplot": 270, "script": [275, 303], "fermihandl": [275, 301], "create_isovalue_gif": 277, "plot_fermi_cross_sect": 278, "plot_fermi_cross_section_box_widget": 279, "plot_fermi_isoslid": 280, "plot_fermi_surfac": 281, "bandgap": [282, 293, 344], "bandsdosplot": [283, 294, 327], "bandsplot": [284, 295], "bandsplot_2d": [285, 296], "cat": [286, 297], "fermi2d": [288, 299, 330, 331], "fermi3d": [289, 300, 335, 336, 337, 338, 339, 340], "generate2dkmesh": [290, 302], "reapir": 305, "perper": [306, 307, 309, 311], "elk": 307, "dft": 308, "prep": 308, "quantum": [310, 316, 322], "espresso": [310, 316, 322], "prepar": [310, 312], "calcul": [310, 312, 355], "state": [310, 312, 320, 321, 324, 347, 357], "k": [310, 312, 345, 354, 361, 363], "point": [310, 312, 354, 361], "format": [310, 312], "magnet": [310, 312], "plain": [314, 316, 317, 318, 321, 324, 327, 330, 336, 337, 338, 339, 354, 357, 360], "mode": [314, 316, 317, 318, 321, 322, 323, 324, 327, 330, 336, 337, 338, 339, 340, 357], "parametr": [314, 316, 317, 318, 321, 322, 323, 324, 330, 338, 339, 357], "parametric_linemod": 314, "scatter": [314, 318], "overlay_speci": 314, "overlay_orbti": 314, "overlai": [314, 321], "orbit": [314, 353, 354, 361], "name": 314, "compar": [315, 356], "non": [316, 317, 322, 323], "colinear": [316, 317, 322, 323], "spin": [318, 324, 331, 339, 340, 353, 354, 359, 361], "polar": [318, 324, 339], "comput": [319, 325, 328, 332, 341, 346], "time": [319, 325, 328, 332, 341, 346], "parametric_lin": [321, 324, 357], "stack_speci": [321, 324, 357], "stack_orbti": [321, 324], "stack": [324, 357], "2d": [329, 347, 359], "plain_band": 330, "select": [330, 331, 361], "indic": [330, 331, 352], "noncolinear": 331, "textur": [331, 340, 359], "project": [331, 353, 354], "singl": 331, "color": [331, 360], "3d": [333, 347, 360], "how": 334, "get": [334, 349], "van": 334, "alphen": 334, "fequenc": 334, "from": [334, 354, 360], "maxim": 334, "cross": [334, 335], "section": [334, 335], "area": 334, "along": 334, "0": 334, "1": [334, 353, 354, 357, 360], "minim": 334, "extrem": 334, "cross_sect": 335, "slice": 335, "isoslid": 336, "isovalue_gif": 337, "other": [342, 347], "exampl": [343, 344, 345, 347, 360], "kmesh_gener": 343, "kmesh": 343, "find": 344, "kpath_gener": 345, "path": [345, 354, 363], "author": 348, "citat": 348, "cite": [348, 349], "contributor": 348, "develop": 348, "licens": 348, "start": 349, "instal": [349, 350], "paper": 349, "support": 349, "pip": 350, "conda": 350, "clone": 350, "through": 350, "github": 350, "after": 350, "why": 351, "tabl": 352, "atom": [353, 354, 361], "2": [353, 354, 357, 360], "3": [353, 354, 357, 360], "4": [354, 357], "matplotlib": [354, 359, 366], "pyplot": [354, 359, 366], "object": [354, 359, 366], "convert": 354, "reduc": 354, "cartesian": 354, "coordin": 354, "discontinu": 354, "concaten": 355, "multipl": 355, "5": 357, "6": 357, "stack_orbit": 357, "access": [358, 363, 365], "electron": 358, "translat": 359, "mesh": 359, "base": 360, "properti": 360, "obtain": 360, "an": 360, "extern": 360, "file": 360, "keyboard": 360, "shortcut": 360, "filter": 361, "data": 361, "To": 361, "user": 362, "guid": 362, "further": 362, "detail": 362, "inform": [363, 365]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pyprocar.core.BrillouinZone": [[0, "pyprocar-core-brillouinzone"]], "__init__": [[1, "init"], [4, "init"], [13, "init"], [55, "init"], [62, "init"], [75, "init"], [82, "init"], [91, "init"], [117, "init"], [136, "init"], [138, "init"], [140, "init"], [142, "init"], [145, "init"], [158, "init"], [167, "init"], [169, "init"], [171, "init"], [176, "init"], [178, "init"], [184, "init"], [229, "init"], [248, "init"], [266, "init"], [276, "init"]], "wigner_seitz": [[2, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[3, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[5, "coupled-to-uncoupled-basis"]], "dos_sum": [[6, "dos-sum"]], "get_current_basis": [[7, "get-current-basis"]], "is_non_collinear": [[8, "is-non-collinear"], [25, "is-non-collinear"]], "n_dos": [[9, "n-dos"]], "n_energies": [[10, "n-energies"]], "n_spins": [[11, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[12, "pyprocar-core-electronicbandstructure"]], "bands_gradient_mesh": [[14, "bands-gradient-mesh"]], "bands_hessian_mesh": [[15, "bands-hessian-mesh"]], "bands_mesh": [[16, "bands-mesh"]], "calculate_scalar_gradient": [[17, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[18, "calculate-scalar-integral"]], "create_nd_mesh": [[19, "create-nd-mesh"]], "create_scaler_mesh": [[20, "create-scaler-mesh"]], "create_vector_mesh": [[21, "create-vector-mesh"]], "ebs_sum": [[22, "ebs-sum"]], "ibz2fbz": [[23, "ibz2fbz"]], "index_mesh": [[24, "index-mesh"]], "kpoints_cartesian": [[26, "kpoints-cartesian"], [179, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[27, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[28, "kpoints-mesh"]], "kpoints_reduced": [[29, "kpoints-reduced"], [180, "kpoints-reduced"]], "n_kx": [[30, "n-kx"]], "n_ky": [[31, "n-ky"]], "n_kz": [[32, "n-kz"]], "natoms": [[33, "natoms"], [108, "natoms"]], "nbands": [[34, "nbands"]], "nkpoints": [[35, "nkpoints"]], "norbitals": [[36, "norbitals"]], "nprincipals": [[37, "nprincipals"]], "nspins": [[38, "nspins"]], "plot_kpoints": [[39, "plot-kpoints"]], "projected_mesh": [[40, "projected-mesh"]], "projected_phase_mesh": [[41, "projected-phase-mesh"]], "unfold": [[42, "unfold"]], "update_bands_gradient_mesh": [[43, "update-bands-gradient-mesh"]], "update_bands_hessian_mesh": [[44, "update-bands-hessian-mesh"]], "update_bands_mesh": [[45, "update-bands-mesh"]], "update_index_mesh": [[46, "update-index-mesh"]], "update_kpoints_cartesian_mesh": [[47, "update-kpoints-cartesian-mesh"]], "update_kpoints_mesh": [[48, "update-kpoints-mesh"]], "update_projected_mesh": [[49, "update-projected-mesh"]], "update_projected_phase_mesh": [[50, "update-projected-phase-mesh"]], "update_weights": [[51, "update-weights"]], "update_weights_mesh": [[52, "update-weights-mesh"]], "weights_mesh": [[53, "weights-mesh"]], "pyprocar.core.FermiSurface": [[54, "pyprocar-core-fermisurface"]], "add_axes_labels": [[56, "add-axes-labels"]], "add_legend": [[57, "add-legend"]], "find_energy": [[58, "find-energy"]], "plot": [[59, "plot"]], "spin_texture": [[60, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[61, "pyprocar-core-fermisurface3d"]], "calculate_effective_mass": [[63, "calculate-effective-mass"]], "calculate_fermi_speed": [[64, "calculate-fermi-speed"]], "calculate_fermi_velocity": [[65, "calculate-fermi-velocity"]], "calculate_first_and_second_derivative_energy": [[66, "calculate-first-and-second-derivative-energy"]], "calculate_first_and_second_derivative_energy_band": [[67, "calculate-first-and-second-derivative-energy-band"]], "create_spin_texture": [[68, "create-spin-texture"]], "create_vector_texture": [[69, "create-vector-texture"]], "extend_surface": [[70, "extend-surface"]], "project_atomic_projections": [[71, "project-atomic-projections"]], "project_color": [[72, "project-color"]], "project_spin_texture_atomic_projections": [[73, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[74, "pyprocar-core-isosurface"]], "dxyz": [[76, "dxyz"]], "nX": [[77, "nx"]], "nY": [[78, "ny"]], "nZ": [[79, "nz"]], "surface_boundaries": [[80, "surface-boundaries"]], "pyprocar.core.KPath": [[81, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[83, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[84, "get-optimized-kpoints-transformed"]], "kdistances": [[85, "kdistances"]], "nsegments": [[86, "nsegments"]], "tick_names": [[87, "tick-names"]], "tick_positions": [[88, "tick-positions"]], "write_to_file": [[89, "write-to-file"]], "pyprocar.core.Structure": [[90, "pyprocar-core-structure"]], "a": [[92, "a"]], "alpha": [[93, "alpha"]], "atomic_numbers": [[94, "atomic-numbers"]], "b": [[95, "b"]], "beta": [[96, "beta"]], "c": [[97, "c"]], "cell_convex_hull": [[98, "cell-convex-hull"]], "density": [[99, "density"]], "gamma": [[100, "gamma"]], "get_space_group_international": [[101, "get-space-group-international"]], "get_space_group_number": [[102, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[103, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[104, "get-wyckoff-positions"]], "is_point_inside": [[105, "is-point-inside"]], "lattice_corners": [[106, "lattice-corners"]], "masses": [[107, "masses"]], "nspecies": [[109, "nspecies"]], "plot_cell_convex_hull": [[110, "plot-cell-convex-hull"]], "reciprocal_lattice": [[111, "reciprocal-lattice"], [173, "reciprocal-lattice"]], "species": [[112, "species"], [154, "species"], [163, "species"], [216, "species"]], "supercell": [[113, "supercell"]], "transform": [[114, "transform"]], "volume": [[115, "volume"]], "pyprocar.core.Surface": [[116, "pyprocar-core-surface"]], "centers": [[118, "centers"]], "export": [[119, "export"]], "faces_array": [[120, "faces-array"]], "set_color_with_cmap": [[121, "set-color-with-cmap"]], "set_scalars": [[122, "set-scalars"]], "set_vectors": [[123, "set-vectors"]], "BrillouinZone": [[124, "brillouinzone"]], "DensityOfStates": [[125, "densityofstates"]], "ElectronicBandStructure": [[126, "electronicbandstructure"], [358, "electronicbandstructure"]], "FermiSurface": [[127, "fermisurface"]], "FermiSurface3D": [[128, "fermisurface3d"]], "Core API": [[129, "core-api"]], "Isosurface": [[130, "isosurface"]], "KPath": [[131, "kpath"]], "Structure": [[132, "structure"], [365, "structure"]], "Surface": [[133, "surface"]], "API Reference": [[134, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[135, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[137, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[139, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[141, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[143, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[144, "pyprocar-io-lobster-lobsterparser"]], "dos": [[146, "dos"], [191, "dos"]], "dos_parametric": [[147, "dos-parametric"]], "dos_projected": [[148, "dos-projected"], [192, "dos-projected"]], "dos_to_dict": [[149, "dos-to-dict"], [193, "dos-to-dict"]], "dos_total": [[150, "dos-total"], [194, "dos-total"]], "final_structure": [[151, "final-structure"], [159, "final-structure"], [198, "final-structure"]], "initial_structure": [[152, "initial-structure"], [161, "initial-structure"], [207, "initial-structure"]], "parse_structure": [[153, "parse-structure"]], "structure": [[155, "structure"], [164, "structure"], [217, "structure"]], "structures": [[156, "structures"], [165, "structures"], [218, "structures"]], "pyprocar.io.qe.QEParser": [[157, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[160, "getkpointlabels"]], "kpoints_cart": [[162, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[166, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[168, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[170, "pyprocar-io-vasp-outcar"]], "efermi": [[172, "efermi"]], "rotations": [[174, "rotations"]], "pyprocar.io.vasp.Poscar": [[175, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[177, "pyprocar-io-vasp-procar"]], "repair": [[181, "repair"], [292, "repair"]], "symmetrize": [[182, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[183, "pyprocar-io-vasp-vaspxml"]], "bands": [[185, "bands"]], "bands_projected": [[186, "bands-projected"]], "conv": [[187, "conv"]], "convergence": [[188, "convergence"]], "convergence_electronic": [[189, "convergence-electronic"]], "convergence_ionic": [[190, "convergence-ionic"]], "energies": [[195, "energies"]], "energy": [[196, "energy"]], "fermi": [[197, "fermi"]], "forces": [[199, "forces"]], "get_general": [[200, "get-general"]], "get_params": [[201, "get-params"]], "get_scstep": [[202, "get-scstep"]], "get_set": [[203, "get-set"]], "get_structure": [[204, "get-structure"]], "get_varray": [[205, "get-varray"]], "incar": [[206, "incar"]], "is_finished": [[208, "is-finished"]], "iteration_data": [[209, "iteration-data"]], "kpoints": [[210, "kpoints"]], "kpoints_list": [[211, "kpoints-list"]], "last_energy": [[212, "last-energy"]], "parse_vasprun": [[213, "parse-vasprun"]], "potcar_info": [[214, "potcar-info"]], "read": [[215, "read"]], "text_to_bool": [[219, "text-to-bool"]], "vasp_parameters": [[220, "vasp-parameters"]], "AbinitParser": [[221, "abinitparser"]], "BxsfParser": [[222, "bxsfparser"]], "IO API": [[223, "io-api"]], "LobsterParser": [[224, "lobsterparser"]], "QEParser": [[225, "qeparser"]], "SiestaParser": [[226, "siestaparser"]], "VaspParser": [[227, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[228, "pyprocar-plotter-dosplot"]], "draw_fermi": [[230, "draw-fermi"], [249, "draw-fermi"]], "grid": [[231, "grid"], [250, "grid"]], "legend": [[232, "legend"], [251, "legend"]], "plot_dos": [[233, "plot-dos"]], "plot_parametric": [[234, "plot-parametric"]], "plot_parametric_line": [[235, "plot-parametric-line"]], "plot_stack": [[236, "plot-stack"]], "plot_stack_orbitals": [[237, "plot-stack-orbitals"]], "plot_stack_species": [[238, "plot-stack-species"]], "save": [[239, "save"], [256, "save"]], "set_xlabel": [[240, "set-xlabel"], [258, "set-xlabel"]], "set_xlim": [[241, "set-xlim"], [259, "set-xlim"]], "set_xticks": [[242, "set-xticks"], [260, "set-xticks"]], "set_ylabel": [[243, "set-ylabel"], [261, "set-ylabel"]], "set_ylim": [[244, "set-ylim"], [262, "set-ylim"]], "set_yticks": [[245, "set-yticks"], [263, "set-yticks"]], "show": [[246, "show"], [264, "show"]], "pyprocar.plotter.EBSPlot": [[247, "pyprocar-plotter-ebsplot"]], "plot_bands": [[252, "plot-bands"]], "plot_parameteric": [[253, "plot-parameteric"]], "plot_parameteric_overlay": [[254, "plot-parameteric-overlay"]], "plot_scatter": [[255, "plot-scatter"]], "set_title": [[257, "set-title"]], "pyprocar.plotter.ProcarPlot": [[265, "pyprocar-plotter-procarplot"]], "atomicPlot": [[267, "atomicplot"]], "parametricPlot": [[268, "parametricplot"]], "plotBands": [[269, "plotbands"]], "scatterPlot": [[270, "scatterplot"]], "EBSPlot": [[271, "ebsplot"]], "DosPlot": [[272, "dosplot"]], "Plotter API": [[273, "plotter-api"]], "ProcarPlot": [[274, "procarplot"]], "pyprocar.scripts.FermiHandler": [[275, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[277, "create-isovalue-gif"]], "plot_fermi_cross_section": [[278, "plot-fermi-cross-section"]], "plot_fermi_cross_section_box_widget": [[279, "plot-fermi-cross-section-box-widget"]], "plot_fermi_isoslider": [[280, "plot-fermi-isoslider"]], "plot_fermi_surface": [[281, "plot-fermi-surface"]], "bandgap": [[282, "bandgap"], [293, "bandgap"]], "bandsdosplot": [[283, "bandsdosplot"], [294, "bandsdosplot"]], "bandsplot": [[284, "bandsplot"], [295, "bandsplot"]], "bandsplot_2d": [[285, "bandsplot-2d"], [296, "bandsplot-2d"]], "cat": [[286, "cat"], [297, "cat"]], "dosplot": [[287, "dosplot"], [298, "dosplot"]], "fermi2D": [[288, "fermi2d"], [299, "fermi2d"]], "fermi3D": [[289, "fermi3d"], [300, "fermi3d"]], "generate2dkmesh": [[290, "generate2dkmesh"], [302, "generate2dkmesh"]], "kpath": [[291, "kpath"], [304, "kpath"]], "FermiHandler": [[301, "fermihandler"]], "Scripts API": [[303, "scripts-api"]], "reapir": [[305, "reapir"]], "Abinit Perperation": [[306, "abinit-perperation"]], "Elk Perperation": [[307, "elk-perperation"]], "DFT Prep": [[308, "dft-prep"]], "Lobster Perperation": [[309, "lobster-perperation"]], "Quantum Espresso Preparation": [[310, "quantum-espresso-preparation"]], "Preparing Calculations": [[310, "preparing-calculations"], [312, "preparing-calculations"]], "Band Structure": [[310, "band-structure"], [312, "band-structure"], [313, "band-structure"], [347, "band-structure"]], "Density of States": [[310, "density-of-states"], [312, "density-of-states"], [320, "density-of-states"], [347, "density-of-states"], [357, "density-of-states"]], "Band Structure and Density of States": [[310, "band-structure-and-density-of-states"], [312, "band-structure-and-density-of-states"]], "Fermi": [[310, "fermi"], [312, "fermi"]], "K-Points Format": [[310, "k-points-format"], [312, "k-points-format"]], "Magnetic Calculations": [[310, "magnetic-calculations"], [312, "magnetic-calculations"]], "Siesta Perperation": [[311, "siesta-perperation"]], "VASP Preparation": [[312, "vasp-preparation"]], "Plotting band structure": [[314, "plotting-band-structure"]], "Plain mode": [[314, "plain-mode"], [316, "plain-mode"], [317, "plain-mode"], [318, "plain-mode"], [321, "plain-mode"], [324, "plain-mode"], [327, "plain-mode"], [330, "plain-mode"], [336, "plain-mode"], [337, "plain-mode"], [338, "plain-mode"], [339, "plain-mode"]], "Parametric mode": [[314, "parametric-mode"], [316, "parametric-mode"], [317, "parametric-mode"], [318, "parametric-mode"], [321, "parametric-mode"], [322, "parametric-mode"], [323, "parametric-mode"], [324, "parametric-mode"], [338, "parametric-mode"], [339, "parametric-mode"]], "parametric_linemode": [[314, "parametric-linemode"]], "Scatter mode": [[314, "scatter-mode"], [318, "scatter-mode"]], "overlay_species mode": [[314, "overlay-species-mode"]], "overlay_orbtials mode": [[314, "overlay-orbtials-mode"]], "overlay mode": [[314, "overlay-mode"], [321, "overlay-mode"]], "overlay mode by orbital names": [[314, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[315, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[316, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[317, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[318, "plotting-spin-polarized-band-structures"]], "Computation times": [[319, "computation-times"], [325, "computation-times"], [328, "computation-times"], [332, "computation-times"], [341, "computation-times"], [346, "computation-times"]], "Plotting density of states": [[321, "plotting-density-of-states"]], "parametric_line mode": [[321, "parametric-line-mode"], [324, "parametric-line-mode"]], "stack_species mode": [[321, "stack-species-mode"], [324, "stack-species-mode"]], "stack_orbtials mode": [[321, "stack-orbtials-mode"], [324, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[322, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[323, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[324, "plotting-spin-polarized-density-of-states"]], "stack mode": [[324, "stack-mode"]], "Bands and Dos plot": [[326, "bands-and-dos-plot"], [347, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[327, "plotting-bandsdosplot"]], "Fermi 2D": [[329, "fermi-2d"], [347, "fermi-2d"]], "Plotting fermi2d": [[330, "plotting-fermi2d"]], "plain_bands mode": [[330, "plain-bands-mode"]], "parametric mode": [[330, "parametric-mode"]], "Selecting band indices": [[330, "selecting-band-indices"], [331, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[331, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[331, "spin-texture-projection"]], "Spin Texture single color": [[331, "spin-texture-single-color"]], "Fermi 3D": [[333, "fermi-3d"], [347, "fermi-3d"]], "Showing how to get van alphen fequencies from the fermi surface": [[334, "showing-how-to-get-van-alphen-fequencies-from-the-fermi-surface"]], "Maximal cross sectional area along the (0,0,1)": [[334, "maximal-cross-sectional-area-along-the-0-0-1"]], "Minimal cross sectional area along the (0,0,1)": [[334, "minimal-cross-sectional-area-along-the-0-0-1"]], "Extremal cross sectional area along the (0,1,1)": [[334, "extremal-cross-sectional-area-along-the-0-1-1"]], "Plotting fermi3d cross_section": [[335, "plotting-fermi3d-cross-section"]], "Cross section": [[335, "cross-section"]], "Cross section. Save slice": [[335, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[336, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[337, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[338, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[339, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[340, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[340, "spin-texture-mode"]], "Other": [[342, "other"], [347, "other"]], "Example of kmesh_generator": [[343, "example-of-kmesh-generator"]], "Plotting Kmesh": [[343, "plotting-kmesh"]], "Example of finding the bandgap": [[344, "example-of-finding-the-bandgap"]], "Example of kpath_generator": [[345, "example-of-kpath-generator"]], "Plotting K Path": [[345, "plotting-k-path"]], "Examples": [[347, "examples"], [360, "id1"]], "Authors & Citation": [[348, "authors-citation"]], "Citing PyProcar": [[348, "citing-pyprocar"], [349, "citing-pyprocar"]], "Authors": [[348, "authors"]], "Contributors": [[348, "contributors"]], "Developers": [[348, "developers"]], "License": [[348, "license"]], "Getting started": [[349, "getting-started"]], "Installation": [[349, "installation"], [350, "installation"]], "Paper": [[349, "paper"]], "Support": [[349, "support"]], "Installing with pip": [[350, "installing-with-pip"]], "Installing with conda": [[350, "installing-with-conda"]], "Cloning through GitHub": [[350, "cloning-through-github"]], "After Installation": [[350, "after-installation"]], "Why PyProcar?": [[351, "why-pyprocar"]], "PyProcar": [[352, "pyprocar"]], "Indices and tables": [[352, "indices-and-tables"]], "Atomic Projections": [[353, "atomic-projections"]], "1. Spin projection": [[353, "spin-projection"]], "2. Atom projection": [[353, "atom-projection"]], "3. Orbital projection": [[353, "orbital-projection"]], "Band structure": [[354, "band-structure"]], "1. Plain band structure": [[354, "plain-band-structure"]], "2. Spin projection": [[354, "spin-projection"]], "3. Atom projection": [[354, "atom-projection"]], "4. Orbital projection": [[354, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[354, "export-plot-as-a-matplotlib-pyplot-object"], [359, "export-plot-as-a-matplotlib-pyplot-object"], [366, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[354, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[354, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[355, "concatenating-multiple-calculations"]], "Compare bands": [[356, "compare-bands"]], "1. mode='plain'": [[357, "mode-plain"]], "2. mode='parametric'": [[357, "mode-parametric"]], "3. mode='parametric_line'": [[357, "mode-parametric-line"]], "4. mode='stack'": [[357, "mode-stack"]], "5. mode='stack_species'": [[357, "mode-stack-species"]], "6. mode='stack_orbitals'": [[357, "mode-stack-orbitals"]], "Accessing Electronic Band Structure": [[358, "accessing-electronic-band-structure"]], "2D spin-texture": [[359, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[359, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[360, "d-fermi-surface"]], "3D surfaces": [[360, "d-surfaces"]], "1. Plain Fermi surface": [[360, "plain-fermi-surface"]], "2. Surface coloring based on properties from PROCAR": [[360, "surface-coloring-based-on-properties-from-procar"]], "3. Surface coloring based on properties obtained from an external file": [[360, "surface-coloring-based-on-properties-obtained-from-an-external-file"]], "Keyboard shortcuts": [[360, "keyboard-shortcuts"]], "Filtering data": [[361, "filtering-data"]], "To filter selected orbitals": [[361, "to-filter-selected-orbitals"]], "To filter selected k-points": [[361, "to-filter-selected-k-points"]], "To filter selected spins": [[361, "to-filter-selected-spins"]], "To filter selected atoms": [[361, "to-filter-selected-atoms"]], "User Guide": [[362, "user-guide"]], "Further Details": [[362, "further-details"]], "K Path": [[363, "k-path"]], "Accessing Kpath Information": [[363, "accessing-kpath-information"]], "Repair": [[364, "repair"]], "Accessing Structure Information": [[365, "accessing-structure-information"]], "Band unfolding": [[366, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[0, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[1, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[2, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[3, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[4, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[5, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[6, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[7, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[8, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[9, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[10, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[11, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[12, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[13, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[14, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[15, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[16, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[17, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[18, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[20, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[21, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[22, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[23, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[25, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[26, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[27, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[28, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[29, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[30, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[31, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[32, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[37, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[41, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[42, "pyprocar.core.ElectronicBandStructure.unfold"]], "update_bands_gradient_mesh() (pyprocar.core.electronicbandstructure method)": [[43, "pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh"]], "update_bands_hessian_mesh() (pyprocar.core.electronicbandstructure method)": [[44, "pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh"]], "update_bands_mesh() (pyprocar.core.electronicbandstructure method)": [[45, "pyprocar.core.ElectronicBandStructure.update_bands_mesh"]], "update_index_mesh() (pyprocar.core.electronicbandstructure method)": [[46, "pyprocar.core.ElectronicBandStructure.update_index_mesh"]], "update_kpoints_cartesian_mesh() (pyprocar.core.electronicbandstructure method)": [[47, "pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh"]], "update_kpoints_mesh() (pyprocar.core.electronicbandstructure method)": [[48, "pyprocar.core.ElectronicBandStructure.update_kpoints_mesh"]], "update_projected_mesh() (pyprocar.core.electronicbandstructure method)": [[49, "pyprocar.core.ElectronicBandStructure.update_projected_mesh"]], "update_projected_phase_mesh() (pyprocar.core.electronicbandstructure method)": [[50, "pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh"]], "update_weights() (pyprocar.core.electronicbandstructure method)": [[51, "pyprocar.core.ElectronicBandStructure.update_weights"]], "update_weights_mesh() (pyprocar.core.electronicbandstructure method)": [[52, "pyprocar.core.ElectronicBandStructure.update_weights_mesh"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[54, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[55, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[56, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[57, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[58, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[59, "pyprocar.core.FermiSurface.plot"]], "spin_texture() (pyprocar.core.fermisurface method)": [[60, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[61, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[62, "pyprocar.core.FermiSurface3D.__init__"]], "calculate_effective_mass() (pyprocar.core.fermisurface3d method)": [[63, "pyprocar.core.FermiSurface3D.calculate_effective_mass"]], "calculate_fermi_speed() (pyprocar.core.fermisurface3d method)": [[64, "pyprocar.core.FermiSurface3D.calculate_fermi_speed"]], "calculate_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[65, "pyprocar.core.FermiSurface3D.calculate_fermi_velocity"]], "calculate_first_and_second_derivative_energy() (pyprocar.core.fermisurface3d method)": [[66, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy"]], "calculate_first_and_second_derivative_energy_band() (pyprocar.core.fermisurface3d method)": [[67, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band"]], "create_spin_texture() (pyprocar.core.fermisurface3d method)": [[68, "pyprocar.core.FermiSurface3D.create_spin_texture"]], "create_vector_texture() (pyprocar.core.fermisurface3d method)": [[69, "pyprocar.core.FermiSurface3D.create_vector_texture"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[70, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[71, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_color() (pyprocar.core.fermisurface3d method)": [[72, "pyprocar.core.FermiSurface3D.project_color"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[74, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[75, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[76, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[77, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[78, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[79, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[80, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[81, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[82, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[83, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[84, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[85, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[86, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[87, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[88, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[89, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[90, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[91, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[92, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[93, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[94, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[95, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[96, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[97, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[101, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[102, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[103, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[104, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[105, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[106, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[107, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[108, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[109, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[110, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[111, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[113, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[114, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[116, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[117, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[118, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[119, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[120, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[121, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[122, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[123, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[135, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[136, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[137, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[138, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[139, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[140, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[141, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[142, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[143, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[144, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[145, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[146, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[147, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[148, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[149, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[150, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[151, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[153, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[156, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[157, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[158, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[159, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[160, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[161, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[162, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[163, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[164, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[165, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[166, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[167, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[168, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[169, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[170, "pyprocar.io.vasp.Outcar"]], "__init__() (pyprocar.io.vasp.outcar method)": [[171, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[172, "pyprocar.io.vasp.Outcar.efermi"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[173, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[174, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[175, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[176, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[177, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[178, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[179, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[180, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[181, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[182, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[183, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[184, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[185, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[186, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[187, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[188, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[189, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[191, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[200, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[201, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[202, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[203, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[204, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[205, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[206, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[207, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[208, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[209, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[210, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[211, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[212, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[213, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[214, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[215, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[219, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[220, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[228, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[229, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[230, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[231, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[232, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[233, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[234, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[235, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.show"]], "ebsplot (class in pyprocar.plotter)": [[247, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[248, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[249, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[250, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[251, "pyprocar.plotter.EBSPlot.legend"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[252, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[253, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[254, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[255, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.show"]], "procarplot (class in pyprocar.plotter)": [[265, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[266, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[267, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[268, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[269, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[270, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "fermihandler (class in pyprocar.scripts)": [[275, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[276, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[277, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[278, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_cross_section_box_widget() (pyprocar.scripts.fermihandler method)": [[279, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section_box_widget"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[280, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[281, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "bandgap() (in module pyprocar.scripts)": [[282, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[283, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[284, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[285, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[286, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[287, "pyprocar.scripts.dosplot"]], "fermi2d() (in module pyprocar.scripts)": [[288, "pyprocar.scripts.fermi2D"]], "fermi3d() (in module pyprocar.scripts)": [[289, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[290, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[291, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[292, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[354, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[354, "module-pyprocar.scripts.scriptBandsplot"], [355, "module-pyprocar.scripts.scriptCat"], [357, "module-pyprocar.scriptDosplot"], [359, "module-pyprocar.scripts.scriptFermi2D"], [360, "module-pyprocar.scripts.scriptFermi3D"], [361, "module-pyprocar.scripts.scriptFilter"], [364, "module-pyprocar.scripts.scriptRepair"], [366, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[354, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[355, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[355, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[357, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[359, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[359, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[360, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[360, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[361, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[361, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[364, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[364, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[366, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[366, "pyprocar.scripts.scriptUnfold.unfold"]]}})