Search.setIndex({"docnames": ["api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_vector_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_color", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.Kpoints", "api/io/_autosummary/pyprocar.io.abinit.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.abinit.Procar", "api/io/_autosummary/pyprocar.io.abinit.Procar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.abinit.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.abinit.Procar.repair", "api/io/_autosummary/pyprocar.io.abinit.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plotting_colinear", "examples/00-band_structure/plotting_compare_bands", "examples/00-band_structure/plotting_noncolinear_qe", "examples/00-band_structure/plotting_noncolinear_vasp", "examples/00-band_structure/plotting_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plotting_colinear_dos", "examples/01-dos/plotting_noncolinear_dos_qe", "examples/01-dos/plotting_noncolinear_dos_vasp", "examples/01-dos/plotting_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plotting_bandsdosplot", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plotting_fermi2d", "examples/03-fermi2d/plotting_fermi2d_spin_texture", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plotting_fermi3d_cross_section", "examples/04-fermi3d/plotting_fermi3d_isoslider", "examples/04-fermi3d/plotting_fermi3d_isovalue_gif", "examples/04-fermi3d/plotting_fermi3d_plain", "examples/04-fermi3d/plotting_fermi3d_spin-polarized", "examples/04-fermi3d/plotting_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plotting_2dkmesh_generation", "examples/05-other/plotting_bandgap", "examples/05-other/plotting_kpath_generation", "examples/05-other/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3D", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_vector_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_color.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plotting_colinear.rst", "examples\\00-band_structure\\plotting_compare_bands.rst", "examples\\00-band_structure\\plotting_noncolinear_qe.rst", "examples\\00-band_structure\\plotting_noncolinear_vasp.rst", "examples\\00-band_structure\\plotting_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plotting_colinear_dos.rst", "examples\\01-dos\\plotting_noncolinear_dos_qe.rst", "examples\\01-dos\\plotting_noncolinear_dos_vasp.rst", "examples\\01-dos\\plotting_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plotting_bandsdosplot.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plotting_fermi2d.rst", "examples\\03-fermi2d\\plotting_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plotting_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plotting_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plotting_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plotting_fermi3d_plain.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plotting_2dkmesh_generation.rst", "examples\\05-other\\plotting_bandgap.rst", "examples\\05-other\\plotting_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3D.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "ebs_sum", "ibz2fbz", "is_non_collinear", "kpoints_cartesian", "kpoints_reduced", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "unfold", "update_weights", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "calculate_effective_mass", "calculate_fermi_speed", "calculate_fermi_velocity", "calculate_first_and_second_derivative_energy", "calculate_first_and_second_derivative_energy_band", "create_spin_texture", "create_vector_texture", "extend_surface", "project_atomic_projections", "project_color", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.Kpoints", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.abinit.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_isoslider", "plot_fermi_surface", "plot_fermi_surface_area_vs_isovalue", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "FermiHandler", "fermi3D", "bandsplot_2d", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting fermi2d noncolinear", "Computation times", "Fermi 3D", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"class": [0, 3, 12, 28, 34, 35, 48, 55, 64, 90, 99, 100, 102, 103, 104, 106, 107, 109, 111, 113, 119, 122, 135, 144, 145, 146, 148, 153, 155, 161, 206, 225, 243, 252, 253, 254, 311, 312, 313, 314, 315, 316, 324, 336], "reciprocal_lattic": [0, 1, 12, 13, 35, 36, 113, 114, 131, 155, 156], "ndarrai": [0, 1, 3, 4, 12, 13, 15, 17, 18, 25, 26, 28, 34, 35, 36, 43, 46, 48, 49, 57, 58, 59, 78, 79, 80, 85, 87, 88, 90, 91, 96, 97, 113, 114, 115, 116, 131, 140, 152, 155, 156, 157, 158, 163, 164, 170, 188, 231, 232, 233, 262, 263, 330], "transformation_matrix": [0, 1, 25, 26, 57, 58, 88, 342], "option": [0, 1, 3, 4, 6, 12, 13, 14, 25, 26, 28, 29, 33, 34, 35, 36, 43, 44, 46, 48, 49, 56, 63, 75, 76, 77, 78, 79, 88, 90, 91, 93, 95, 97, 109, 111, 112, 113, 114, 118, 119, 122, 125, 131, 135, 146, 148, 153, 155, 156, 160, 161, 162, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 283, 289, 324, 330, 331, 335, 336, 337, 342], "list": [0, 1, 6, 12, 13, 14, 27, 28, 29, 33, 34, 35, 36, 43, 44, 48, 49, 50, 54, 56, 61, 62, 64, 68, 81, 86, 90, 92, 94, 96, 103, 106, 113, 114, 119, 121, 125, 126, 129, 130, 132, 133, 134, 137, 139, 141, 142, 143, 173, 187, 196, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 225, 226, 229, 231, 232, 233, 237, 238, 240, 241, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 286, 287, 307, 308, 324, 330, 331, 333, 335, 336, 337], "int": [0, 1, 3, 4, 6, 9, 10, 11, 14, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 41, 44, 48, 49, 51, 52, 53, 60, 76, 82, 83, 125, 131, 132, 141, 155, 211, 212, 213, 214, 215, 216, 219, 220, 222, 223, 225, 226, 231, 232, 233, 238, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 330, 331, 335, 336, 337], "none": [0, 1, 3, 4, 5, 6, 12, 13, 14, 25, 26, 27, 28, 29, 32, 34, 35, 36, 44, 46, 48, 49, 55, 56, 64, 65, 79, 90, 91, 93, 95, 111, 112, 113, 114, 118, 122, 123, 125, 131, 155, 156, 160, 161, 162, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 307, 308, 324, 330, 331, 335, 336, 337, 342], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 58, 63, 64, 65, 75, 76, 77, 78, 79, 84, 87, 88, 90, 91, 93, 95, 96, 97, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 131, 135, 136, 138, 140, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 159, 160, 161, 162, 165, 178, 179, 180, 181, 182, 183, 191, 193, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 335, 336, 337, 340, 342], "A": [0, 3, 12, 27, 28, 32, 35, 57, 58, 64, 79, 84, 87, 92, 94, 113, 118, 121, 126, 131, 146, 148, 153, 155, 160, 161, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 284, 304, 307, 308, 319, 321, 324, 329, 330, 331, 335, 336, 337, 342], "surfac": [0, 28, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 54, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 208, 254, 255, 256, 257, 258, 259, 266, 276, 280, 312, 313, 319, 324, 327, 328, 329, 330, 335], "object": [0, 12, 28, 35, 56, 90, 95, 113, 124, 125, 126, 135, 155, 169, 170, 184, 188, 189, 206, 225, 258, 265, 266, 291, 292, 293, 294, 295, 298, 299, 300, 301, 311, 312, 313, 314, 315, 316, 324, 336, 338], "vert": [0, 2, 48, 90, 91], "face": [0, 2, 90, 91, 92, 94, 96, 103, 107, 336], "line": [0, 208, 213, 227, 265, 295, 301, 311, 321, 324, 326, 336, 338, 342], "represent": [0, 48, 336], "repres": [0, 35, 64, 90, 96, 119, 166, 167, 168, 196, 214, 265, 266, 324, 333, 336, 342], "thi": [0, 3, 5, 8, 12, 16, 25, 26, 28, 33, 34, 35, 42, 43, 48, 54, 90, 93, 102, 103, 104, 107, 108, 109, 111, 113, 119, 121, 125, 135, 138, 165, 178, 179, 180, 181, 186, 192, 197, 198, 201, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 280, 283, 285, 287, 289, 292, 308, 311, 312, 313, 314, 315, 316, 319, 321, 324, 325, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342], "calcul": [0, 2, 3, 14, 16, 35, 37, 38, 39, 40, 41, 42, 45, 47, 48, 118, 122, 132, 135, 141, 145, 155, 160, 166, 167, 168, 169, 174, 184, 187, 188, 189, 190, 192, 193, 198, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 280, 283, 284, 285, 286, 295, 301, 315, 320, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 340, 342], "correspond": [0, 27, 28, 43, 48, 85, 324, 329, 330, 335, 337, 342], "reciproc": [0, 12, 25, 35, 44, 85, 98, 100, 103, 111, 113, 131, 151, 155, 289, 330, 342], "lattic": [0, 12, 15, 25, 35, 44, 64, 65, 66, 67, 69, 70, 71, 74, 79, 80, 85, 88, 98, 100, 103, 106, 111, 113, 131, 151, 155, 284, 289, 330, 342], "paramet": [0, 3, 6, 12, 14, 15, 25, 26, 27, 28, 32, 33, 34, 35, 41, 43, 44, 46, 48, 56, 57, 58, 63, 64, 75, 76, 77, 78, 79, 87, 88, 90, 93, 95, 96, 97, 109, 111, 113, 118, 119, 121, 122, 125, 131, 135, 145, 146, 148, 153, 155, 160, 161, 184, 198, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 287, 289, 321, 324, 330, 331, 332, 333, 335, 336, 337, 340, 342], "np": [0, 3, 12, 15, 17, 18, 25, 26, 28, 34, 43, 46, 48, 57, 58, 59, 78, 79, 80, 85, 87, 88, 97, 113, 115, 116, 131, 140, 151, 152, 155, 157, 158, 163, 164, 170, 188, 231, 232, 233, 262, 263, 265, 320, 321, 330, 342], "us": [0, 26, 28, 35, 48, 54, 90, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 118, 119, 126, 135, 145, 160, 170, 184, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 212, 213, 245, 249, 250, 251, 254, 255, 256, 257, 258, 261, 262, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 289, 294, 295, 301, 307, 308, 311, 313, 319, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342], "gener": [0, 48, 98, 102, 103, 104, 107, 113, 255, 259, 264, 265, 266, 267, 279, 280, 281, 283, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 327, 328, 331, 333, 335, 336, 337, 338], "brillouin": [0, 25, 48, 98, 103, 255, 256, 257, 258, 266, 331, 335, 336, 342], "zone": [0, 25, 48, 98, 103, 255, 256, 257, 258, 266, 331, 335, 336, 342], "usgin": 0, "wigner": [0, 2, 338], "seitz": [0, 2, 338], "3": [0, 3, 5, 6, 12, 26, 35, 48, 64, 90, 92, 125, 255, 259, 265, 266, 286, 300, 311, 316, 321, 324, 326, 335, 337, 338, 342], "float": [0, 6, 12, 13, 14, 25, 27, 32, 35, 36, 48, 49, 50, 64, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 89, 90, 92, 95, 113, 114, 118, 131, 155, 156, 160, 161, 162, 208, 212, 213, 214, 215, 216, 227, 231, 232, 233, 237, 240, 241, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 330, 335, 336], "ani": [0, 3, 4, 35, 178, 181, 265, 266, 324, 330, 332, 335, 336, 340], "transform": [0, 26, 48, 57, 58, 87, 324, 330], "appli": [0, 15, 48, 254, 324, 329, 330, 340], "unit": [0, 89], "cell": [0, 2, 48, 72, 73, 83, 86, 89, 327, 328, 336, 342], "rotat": [0, 15, 307, 308, 336, 338], "supercel": [0, 35, 36, 255, 256, 257, 258, 259, 266, 336, 337, 342], "default": [0, 3, 6, 12, 14, 25, 26, 28, 33, 34, 35, 43, 44, 46, 48, 56, 63, 75, 76, 77, 78, 79, 88, 90, 93, 95, 97, 109, 111, 113, 118, 119, 122, 125, 131, 135, 146, 148, 153, 155, 160, 161, 206, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 289, 295, 301, 308, 330, 331, 333, 335, 336, 337], "method": [0, 3, 12, 25, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 55, 57, 58, 64, 79, 84, 87, 90, 109, 111, 113, 118, 119, 121, 122, 131, 135, 138, 144, 146, 148, 153, 155, 160, 161, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 253, 254, 255, 256, 257, 258, 259, 311, 312, 313, 314, 315, 316, 324, 330, 338], "attribut": [0, 3, 12, 35, 48, 55, 64, 90, 113, 122, 135, 148, 155, 161, 292, 324], "brillouinzon": [1, 2, 103], "initi": [1, 36, 49, 91, 124, 185, 254, 256, 311, 324], "polydata": [1, 25, 36, 49, 90, 91, 103, 107], "form": [2, 152, 188, 189, 324], "tupl": [2, 35, 44, 54, 90, 255, 256, 257, 258, 259, 265, 266, 336], "contain": [2, 3, 28, 35, 48, 56, 94, 111, 237, 240, 261, 265, 266, 280, 289, 307, 308, 324, 330, 335, 336, 337], "return": [2, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 46, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 150, 151, 152, 157, 158, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 198, 206, 208, 209, 210, 211, 217, 218, 221, 224, 225, 230, 257, 258, 260, 265, 266, 267, 292, 324, 335, 336], "type": [2, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 35, 46, 48, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94, 103, 108, 113, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 150, 151, 152, 157, 158, 163, 164, 165, 169, 170, 171, 172, 184, 188, 189, 193, 206, 208, 209, 210, 211, 217, 218, 221, 224, 225, 230, 251, 257, 258, 260, 262, 263, 265, 266, 267, 280, 324, 329, 330, 335, 336], "n_vert": 2, "n_face": 2, "energi": [3, 4, 10, 12, 28, 32, 33, 34, 35, 99, 100, 101, 103, 111, 113, 128, 131, 150, 155, 175, 190, 245, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 289, 307, 308, 311, 312, 313, 314, 315, 316, 320, 327, 328, 330, 335, 336, 338, 342], "dtype": [3, 4], "float64": [3, 4], "total": [3, 4, 99, 103, 127, 128, 171, 172, 212, 214, 215, 216, 265, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 330, 331, 333, 337, 338], "project": [3, 4, 5, 12, 13, 14, 15, 28, 34, 35, 45, 46, 47, 99, 100, 101, 103, 118, 125, 126, 127, 135, 160, 164, 170, 171, 212, 213, 231, 232, 233, 255, 256, 257, 258, 262, 263, 265, 266, 287, 289, 291, 293, 294, 295, 298, 299, 300, 301, 307, 315, 324, 327, 328, 331, 332, 333, 336, 337, 338], "interpolation_factor": [3, 4, 35, 36, 48, 49, 113, 114, 131, 155, 156, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 330, 336, 342], "1": [3, 4, 5, 6, 12, 14, 35, 36, 48, 49, 54, 88, 90, 113, 114, 125, 131, 155, 156, 208, 212, 213, 215, 216, 227, 246, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 286, 287, 291, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 331, 335, 337, 338, 342], "densiti": [3, 6, 99, 103, 108, 122, 127, 128, 135, 171, 201, 206, 211, 212, 251, 261, 265, 271, 275, 280, 285, 286, 302, 327, 328, 329, 330, 335, 337, 338], "state": [3, 6, 48, 99, 103, 108, 122, 127, 128, 171, 206, 211, 212, 251, 261, 265, 271, 275, 280, 286, 302, 324, 327, 328, 329, 330, 335, 338], "function": [3, 35, 48, 54, 93, 113, 125, 165, 178, 179, 180, 181, 197, 201, 260, 261, 262, 263, 265, 266, 274, 280, 283, 285, 289, 324, 327, 328, 330, 332, 333, 335, 336, 338, 342], "theori": [3, 265, 285, 328], "point": [3, 15, 21, 23, 25, 48, 50, 51, 52, 53, 56, 79, 101, 103, 104, 109, 117, 152, 159, 231, 232, 233, 245, 261, 265, 266, 267, 319, 321, 327, 328, 332, 335, 336, 338, 342], "spectrum": 3, "shape": [3, 12], "n_do": 3, "each": [3, 35, 48, 50, 81, 90, 99, 103, 173, 183, 187, 229, 231, 232, 233, 265, 266, 324, 329, 330, 331, 332, 333, 336, 337, 338], "element": [3, 129, 130, 133, 137, 139, 142, 178, 181, 229, 265, 337], "orbit": [3, 5, 6, 7, 12, 14, 22, 34, 35, 125, 212, 213, 214, 215, 216, 255, 256, 257, 258, 261, 262, 263, 265, 266, 292, 293, 294, 295, 298, 299, 300, 301, 307, 308, 314, 315, 327, 328, 332, 333, 335, 336, 338, 342], "spin": [3, 6, 11, 14, 24, 28, 34, 35, 42, 47, 101, 119, 125, 128, 211, 212, 213, 214, 215, 216, 225, 226, 231, 232, 233, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 280, 284, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 304, 307, 310, 312, 313, 314, 317, 319, 320, 321, 323, 324, 327, 328, 331, 333, 336, 338, 342], "etc": [3, 329, 330, 336], "n_atom": [3, 12, 28], "n_princip": 3, "n_orbit": [3, 28], "n_spin": [3, 12, 28, 99, 103], "i_princip": 3, "work": [3, 35, 266, 304, 307, 320, 324, 325, 330, 335, 336], "like": [3, 34, 324, 329, 330], "princip": [3, 14, 23, 212, 213, 215, 216], "quantum": [3, 6, 14, 23, 135, 200, 201, 202, 203, 204, 212, 213, 215, 216, 285, 286, 290, 296, 297, 302, 323, 328, 329, 330, 338], "number": [3, 6, 9, 10, 11, 14, 19, 20, 21, 22, 23, 24, 35, 46, 51, 52, 53, 60, 68, 75, 76, 82, 83, 96, 132, 141, 212, 213, 215, 216, 255, 257, 259, 265, 266, 267, 324, 330, 332, 336, 338, 340], "n": [3, 6, 35, 48, 64, 92, 289, 338], "The": [3, 6, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 26, 28, 32, 33, 34, 35, 41, 43, 46, 48, 51, 52, 53, 56, 57, 58, 60, 61, 62, 66, 67, 69, 70, 71, 74, 75, 76, 78, 79, 85, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 111, 113, 115, 116, 118, 119, 122, 128, 131, 135, 145, 146, 148, 152, 153, 155, 157, 158, 160, 161, 163, 164, 169, 171, 199, 200, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 217, 218, 219, 221, 222, 225, 227, 231, 232, 233, 241, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 289, 295, 298, 301, 304, 320, 321, 324, 325, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342], "last": [3, 129, 133, 137, 142, 150, 151, 167, 174, 190, 195, 330], "index": [3, 6, 28, 41, 125, 258, 328, 329, 330, 335, 337, 338], "should": [3, 14, 58, 96, 117, 159, 179, 264, 265, 320, 324, 329, 330, 331, 335, 336, 337, 342], "0": [3, 5, 6, 25, 34, 35, 36, 48, 54, 88, 90, 117, 125, 159, 212, 247, 255, 256, 257, 258, 259, 265, 266, 268, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 329, 330, 333, 335, 336, 337, 338, 340, 342], "2": [3, 5, 6, 35, 48, 54, 125, 265, 266, 286, 287, 289, 291, 293, 294, 299, 300, 308, 312, 313, 314, 315, 324, 335, 337, 338, 342], "": [3, 5, 6, 108, 125, 265, 266, 283, 321, 324, 329, 333, 335, 336, 337, 338], "p": [3, 5, 265, 266, 289, 291, 329, 333, 336, 337], "d": [3, 5, 265, 266, 291, 324, 329, 330, 332, 333, 336], "i_orbit": 3, "similar": [3, 265, 266, 283, 324, 333, 336], "angular": [3, 338], "l": [3, 5, 287, 329, 330, 338, 342], "same": [3, 6, 58, 64, 96, 261, 266, 271, 280, 284, 286, 287, 289, 295, 301, 324, 329, 330, 332, 333, 335, 336, 337, 338], "follow": [3, 48, 103, 117, 159, 201, 251, 265, 266, 280, 284, 286, 287, 289, 308, 319, 321, 324, 326, 329, 330, 331, 333, 336, 337, 338, 342], "order": [3, 5, 6, 64, 265, 266, 321, 324, 329, 330, 332, 336], "4": [3, 5, 6, 25, 35, 125, 265, 266, 291, 292, 294, 295, 298, 300, 301, 307, 314, 315, 324, 329, 332, 336, 338, 342], "5": [3, 5, 6, 48, 75, 76, 77, 78, 90, 118, 125, 160, 256, 265, 266, 284, 287, 289, 291, 292, 294, 295, 298, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 319, 320, 321, 324, 329, 330, 332, 336, 338, 342], "6": [3, 6, 34, 125, 265, 266, 284, 291, 292, 294, 295, 298, 300, 301, 304, 307, 308, 312, 313, 314, 315, 319, 321, 324, 329, 330, 332, 335, 336, 338], "7": [3, 6, 125, 265, 266, 291, 292, 294, 295, 298, 300, 301, 307, 312, 313, 314, 315, 316, 319, 324, 329, 330, 332, 333, 336, 338], "8": [3, 6, 125, 265, 266, 287, 291, 292, 293, 294, 295, 298, 299, 300, 301, 307, 312, 313, 314, 315, 329, 330, 332, 333, 336, 338], "py": [3, 6, 111, 125, 265, 266, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 326, 336, 337, 338], "pz": [3, 6, 125, 265, 266, 336, 337, 338], "px": [3, 6, 125, 265, 266, 336, 337, 338], "dxy": [3, 6, 125, 265, 266, 336, 338], "dyz": [3, 6, 125, 265, 266, 336, 338], "dz2": [3, 6, 125, 265, 266, 336, 338], "dxz": [3, 6, 125, 265, 266, 336, 338], "dx2": [3, 338], "y2": [3, 6, 48, 125, 265, 266, 267, 319, 336], "i_spin": 3, "magnet": [3, 329, 330, 338], "m": [3, 5, 89, 284, 329, 330, 331, 338, 342], "up": [3, 117, 119, 128, 159, 265, 295, 301, 326, 330, 333, 336, 337, 342], "down": [3, 128, 265, 295, 301, 330, 333, 336, 337, 342], "increas": [3, 35, 48, 266, 336, 342], "factor": [3, 35, 48, 113, 122, 131, 155, 161, 255, 256, 257, 258, 259, 263, 265, 266, 336, 342], "interpol": [3, 33, 34, 48, 54, 102, 103, 113, 122, 131, 155, 161, 255, 256, 257, 258, 259, 262, 263, 265, 266, 330, 336], "densityofst": [4, 5, 6, 7, 8, 9, 10, 11, 103, 124, 125, 126, 169, 206, 207, 251], "convert": [5, 165, 338], "coupl": [5, 293, 299, 336], "uncoupl": 5, "assum": [5, 324], "ar": [5, 25, 26, 32, 34, 48, 56, 90, 103, 128, 135, 197, 214, 251, 262, 263, 265, 266, 280, 284, 295, 301, 324, 325, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338], "coupled_orbit": 5, "j": [5, 321, 324, 329], "uncoupled_orbit": 5, "ret": [5, 6, 14, 178, 181], "atom": [6, 14, 19, 34, 35, 45, 47, 64, 65, 68, 81, 82, 103, 106, 125, 126, 132, 135, 141, 212, 213, 214, 215, 255, 256, 257, 258, 261, 262, 263, 265, 266, 280, 291, 293, 294, 295, 298, 299, 300, 301, 307, 308, 314, 315, 320, 327, 328, 333, 335, 336, 338, 342], "principal_q_numb": [6, 14, 212, 213, 215, 216], "sum_noncolinear": [6, 14], "bool": [6, 8, 12, 13, 14, 16, 25, 34, 56, 58, 79, 109, 118, 146, 160, 212, 213, 214, 215, 216, 232, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 330, 331, 335, 336, 337], "true": [6, 14, 25, 55, 56, 109, 110, 118, 146, 147, 160, 186, 212, 213, 214, 215, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 284, 286, 287, 289, 292, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 330, 331, 333, 335, 336, 340, 342], "tabl": [6, 265, 266, 336, 342], "lm": [6, 329, 330, 338], "tot": [6, 330, 338], "x2": [6, 48, 125, 265, 266, 267, 319, 336], "need": [6, 25, 113, 125, 186, 245, 265, 283, 294, 311, 312, 313, 314, 315, 316, 319, 321, 324, 330, 332, 333, 336, 337, 342], "sume": [6, 125], "over": [6, 14, 125, 266, 324, 325, 327, 328, 333, 336, 338], "count": [6, 265, 266, 329, 330, 335, 336, 337], "from": [6, 34, 35, 90, 93, 98, 103, 104, 107, 111, 113, 122, 125, 135, 261, 264, 265, 266, 319, 321, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338, 340, 342], "zero": [6, 265, 266, 329, 330, 336, 338], "input": [6, 145, 201, 264, 265, 266, 269, 280, 283, 286, 287, 330, 331, 336, 340], "i": [6, 8, 12, 16, 26, 28, 34, 35, 46, 48, 79, 88, 90, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 117, 119, 121, 135, 145, 159, 179, 186, 199, 200, 201, 202, 203, 204, 205, 206, 211, 225, 249, 250, 251, 252, 254, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 292, 294, 295, 301, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342], "sum": [6, 14, 125, 330, 333, 336], "string": [7, 95, 132, 141, 211, 212, 213, 214, 215, 216, 229, 234, 235, 236, 239, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 311, 330, 331, 335], "current": [7, 26, 286, 328, 329, 330], "basi": [7, 17, 18, 25, 26, 293, 299, 329], "str": [7, 25, 28, 33, 34, 35, 36, 43, 46, 48, 49, 63, 64, 75, 86, 93, 95, 96, 97, 109, 111, 112, 113, 114, 118, 122, 125, 131, 135, 136, 144, 145, 146, 148, 153, 155, 156, 160, 161, 197, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 227, 229, 234, 235, 236, 238, 239, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 330, 331, 335, 336, 337, 340], "properti": [8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 50, 51, 52, 53, 54, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 80, 81, 82, 83, 85, 86, 89, 92, 94, 115, 116, 124, 126, 127, 128, 129, 130, 132, 133, 134, 137, 139, 141, 142, 143, 150, 151, 152, 157, 158, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 266, 324], "boolean": [8, 12, 16, 25, 58, 79, 109, 118, 146, 160, 208, 212, 213, 214, 215, 216, 232, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 330, 331, 335, 336], "non": [8, 14, 16, 42, 265, 266, 287, 289, 290, 291, 292, 296, 297, 298, 302, 304, 308, 311, 312, 313, 314, 316, 320, 321, 323, 324, 329, 330, 336, 337, 338, 342], "colinear": [8, 14, 16, 42, 264, 284, 287, 289, 290, 291, 292, 296, 297, 298, 302, 304, 308, 311, 312, 313, 314, 316, 323, 329, 330, 331, 336, 337], "calc": [8, 186], "do": [9, 35, 108, 125, 126, 135, 170, 172, 206, 207, 212, 214, 215, 216, 217, 261, 265, 266, 286, 287, 289, 295, 297, 298, 301, 302, 304, 311, 312, 313, 314, 315, 316, 319, 321, 324, 329, 330, 332, 333, 336], "valu": [9, 10, 35, 48, 95, 97, 100, 102, 103, 104, 118, 160, 212, 213, 214, 231, 232, 233, 255, 256, 257, 258, 262, 263, 265, 266, 267, 308, 313, 330, 331, 333, 335, 336], "channel": [11, 24, 265, 329, 330, 338], "kpoint": [12, 13, 15, 17, 18, 25, 26, 27, 28, 29, 35, 36, 43, 46, 56, 57, 58, 63, 100, 102, 103, 110, 113, 114, 115, 116, 118, 131, 140, 147, 155, 156, 157, 158, 160, 189, 201, 243, 244, 254, 266, 268, 286, 287, 289, 319, 321, 330, 336, 337, 338, 342], "band": [12, 13, 15, 20, 26, 28, 29, 32, 35, 36, 40, 41, 46, 48, 56, 60, 100, 101, 103, 105, 108, 118, 119, 135, 136, 138, 160, 164, 206, 211, 225, 230, 234, 235, 243, 244, 249, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 266, 268, 272, 273, 277, 278, 280, 284, 286, 296, 301, 304, 311, 312, 313, 314, 315, 316, 320, 321, 327, 328, 329, 333, 335, 336, 337, 338], "efermi": [12, 13, 113, 114, 155, 156, 284, 342], "projected_phas": [12, 13], "kpath": [12, 13, 25, 56, 57, 58, 59, 60, 61, 62, 63, 100, 103, 113, 114, 138, 155, 156, 225, 226, 261, 280, 286, 321], "weight": [12, 13, 26, 27, 100, 103, 189, 231, 232, 233, 286, 337, 338, 342], "label": [12, 13, 30, 31, 56, 210, 212, 213, 214, 215, 216, 218, 221, 229, 236, 239, 261, 265, 286, 287, 289, 321, 330, 333, 335, 338, 342], "shifted_to_efermi": [12, 13], "fals": [12, 13, 25, 34, 58, 216, 232, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 287, 292, 307, 308, 311, 320, 330, 331, 332, 335, 336, 337, 342], "store": [12, 35, 99, 100, 102, 103, 105, 106, 197, 254, 266, 336, 337], "electron": [12, 100, 103, 108, 131, 163, 166, 167, 173, 187, 206, 225, 249, 251, 304, 307, 308, 319, 321, 324, 327, 328, 329, 330, 336, 338], "structur": [12, 26, 35, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 100, 103, 105, 108, 113, 114, 118, 129, 130, 135, 137, 139, 155, 156, 160, 176, 178, 182, 185, 206, 207, 225, 230, 235, 243, 251, 252, 261, 268, 272, 273, 277, 278, 280, 284, 286, 296, 304, 307, 308, 319, 320, 321, 324, 327, 328, 329, 332, 333, 337, 338, 342], "informomr": 12, "arrai": [12, 28, 34, 35, 43, 46, 59, 88, 99, 101, 103, 104, 106, 113, 126, 170, 183, 265, 266, 268, 321, 329, 330, 336, 342], "Will": 12, "have": [12, 109, 186, 265, 266, 280, 286, 324, 325, 332, 333, 335, 336, 337, 338], "n_kpoint": [12, 28, 34], "n_band": [12, 28, 34], "fermi": [12, 28, 33, 34, 35, 36, 38, 39, 42, 43, 46, 100, 101, 102, 103, 108, 111, 113, 131, 150, 155, 208, 227, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 276, 280, 286, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 324, 327, 328, 329, 330, 335, 337, 342], "norbit": 12, "full": [12, 265, 266, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 331, 336], "incud": 12, "complex": 12, "part": [12, 168, 324, 336], "clacul": 12, "name": [12, 43, 46, 61, 96, 97, 109, 122, 131, 135, 218, 220, 221, 223, 234, 236, 238, 239, 254, 255, 256, 257, 260, 261, 262, 263, 266, 324, 329, 330, 336, 337, 342], "vector": [12, 43, 64, 66, 67, 69, 70, 71, 74, 90, 91, 97, 111, 113, 151, 236, 266, 289, 329, 330, 336], "matrix": [12, 25, 26, 48, 57, 58, 64, 79, 85, 87, 88, 98, 103, 106, 131, 152, 155, 335, 336, 342], "determin": [12, 14, 16, 25, 34, 56, 58, 79, 109, 146, 324, 335, 336], "shift": [12, 35, 54, 255, 256, 257, 258, 259, 336], "electronicbandstructur": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 103, 225, 226, 251, 338], "_summary_": [14, 267], "symmetri": [15, 56, 75, 76, 77, 78, 109, 118, 146, 152, 160, 254, 307, 308, 330, 331, 336], "oper": [15, 152, 324, 335], "cartesian": [17, 25, 35, 115, 140, 157, 336, 338], "fraction": [18, 64, 103, 106], "k": [21, 25, 101, 103, 105, 109, 117, 159, 236, 245, 279, 280, 284, 286, 292, 319, 327, 328, 331, 332, 335, 336, 338, 342], "numbersk": 23, "reduc": [25, 116, 158, 254, 337, 338], "show_brillouin_zon": 25, "color": [25, 28, 34, 35, 36, 90, 95, 96, 208, 211, 212, 213, 214, 215, 216, 227, 231, 232, 233, 238, 247, 255, 256, 257, 258, 261, 265, 266, 292, 295, 301, 307, 319, 321, 329, 330, 332, 333, 335, 342], "r": [25, 239, 265, 284, 330, 333, 336], "point_siz": [25, 319, 321], "render_points_as_spher": [25, 319, 321], "move": [25, 289, 336], "core": [25, 26, 57, 58, 87, 88, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 113, 118, 124, 125, 126, 129, 130, 133, 134, 137, 139, 142, 143, 155, 160, 169, 170, 188, 189, 196, 206, 225, 313, 336], "updat": [25, 26, 27, 96, 97, 324], "new": [25, 26, 117, 159, 266, 324, 336, 337], "implement": [25, 245, 324, 330], "pyvista": [25, 48, 90, 103, 107, 266, 311, 312, 313, 314, 315, 316, 319, 321, 326, 336], "plot": [25, 28, 30, 31, 34, 84, 101, 103, 105, 108, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 242, 243, 245, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 280, 284, 290, 296, 297, 302, 305, 306, 309, 310, 317, 327, 328, 329, 331, 332, 333, 336, 337, 338, 340], "wether": 25, "show": [25, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 286, 287, 289, 292, 311, 312, 314, 315, 316, 319, 321, 324, 330, 332, 333, 335, 336, 342], "size": [25, 26, 28, 34, 35, 46, 58, 96, 247, 248, 255, 256, 257, 258, 261, 266, 311, 321, 335, 336, 337, 342], "how": [25, 56, 108, 266, 287, 324, 336], "render": [25, 311, 312, 313, 314, 315, 316, 319, 321, 324, 336], "help": [26, 28, 101, 103, 122, 285, 287, 289, 324, 325, 336, 337, 342], "done": [26, 256, 265, 289, 304, 320, 326, 331, 335], "find": [26, 32, 33, 34, 35, 48, 54, 150, 151, 152, 260, 318, 322, 323, 324, 330, 342], "expect": [26, 28, 100, 101, 103, 106, 251, 280, 320, 324], "pyprocar": [26, 57, 58, 87, 88, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 118, 124, 125, 126, 129, 130, 133, 134, 137, 139, 142, 143, 160, 169, 170, 199, 200, 201, 202, 203, 204, 205, 249, 250, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 326, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342], "materi": [26, 75, 76, 266, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321, 324, 329, 330, 332, 336], "spd": [28, 29, 35, 36, 243, 244], "band_indic": [28, 29, 307, 308, 335], "band_color": [28, 29, 307, 308, 335], "cmap": [28, 29, 35, 36, 95, 212, 213, 245, 246, 248, 255, 256, 257, 258, 259, 261, 265, 266, 315, 329, 330, 335, 336], "jet": [28, 29, 212, 213, 246, 255, 256, 257, 258, 259, 261, 265, 266, 315, 330, 332, 335, 336], "loglevel": [28, 29], "30": [28, 29, 265, 287, 324], "2d": [28, 33, 34, 101, 103, 256, 263, 266, 273, 278, 279, 280, 308, 319, 327, 328, 336, 338], "numpi": [28, 34, 35, 48, 99, 101, 103, 104, 106, 265, 266, 320, 321, 326, 336, 342], "nx3": 28, "alreadi": [28, 34, 324], "substract": 28, "n_kppint": 28, "indic": [28, 265, 266, 291, 293, 294, 295, 298, 299, 300, 301, 324, 330, 335, 336, 342], "given": [28, 32, 101, 103, 125, 307, 315, 319, 321, 324, 327, 328, 330, 333, 335, 342], "_type_": [28, 122, 257, 261, 262, 263, 267, 269, 330, 337, 340], "verbos": [28, 261, 265], "level": [28, 33, 34, 245, 261, 266, 312, 313, 329, 330, 336, 337], "log": 28, "warn": [28, 313, 320], "fermisurfac": [29, 30, 31, 32, 33, 34, 103, 258], "add": [30, 31, 35, 245, 265, 287, 324, 335], "matplotlib": [30, 31, 33, 206, 225, 262, 263, 265, 266, 292, 326, 329, 336, 338], "which": [32, 40, 48, 94, 125, 265, 266, 280, 287, 289, 295, 301, 315, 324, 329, 330, 335, 336, 342], "search": [32, 35, 255, 256, 257, 258, 259, 266, 312, 313, 328, 336], "around": [32, 266, 312, 313, 336, 338], "rais": [32, 33, 34, 88, 161, 257, 335, 337], "runtimeerror": [32, 33, 34, 335, 337], "If": [32, 35, 206, 225, 264, 265, 266, 289, 311, 324, 325, 330, 331, 333, 336, 337], "found": [32, 117, 150, 159, 161, 287, 320, 321, 324, 333, 338], "an": [32, 48, 59, 102, 103, 104, 107, 183, 206, 225, 257, 258, 283, 289, 292, 311, 312, 313, 314, 315, 316, 319, 321, 324, 329, 330, 333, 338], "error": [32, 33, 34, 88, 117, 159, 186, 331, 335], "mode": [33, 255, 256, 257, 258, 261, 262, 263, 265, 266, 280, 286, 287, 289, 292, 308, 311, 324, 329, 330, 332, 335, 336, 338, 342], "500": 33, "along": [33, 34, 59, 324, 331], "z": [33, 34, 48, 50, 53, 97, 267, 308, 313, 319, 335, 336, 337, 338], "axi": [33, 265, 335], "onli": [33, 34, 63, 90, 117, 159, 254, 265, 266, 286, 298, 301, 307, 308, 320, 324, 325, 329, 330, 336, 337], "layer": [33, 34, 336], "geometri": [33, 34, 342], "set": [33, 48, 95, 96, 97, 151, 181, 218, 219, 220, 221, 222, 223, 235, 236, 237, 238, 239, 240, 241, 264, 265, 266, 283, 284, 286, 287, 289, 295, 301, 304, 308, 321, 327, 328, 329, 330, 331, 332, 333, 335, 336, 340, 342], "pyplot": [33, 338], "instanc": [33, 280, 329, 330, 340, 342], "wa": [33, 34, 265, 324, 330, 338], "call": [33, 34, 254, 269, 280, 286, 287, 289, 311, 312, 313, 314, 315, 316, 324, 332, 336, 340], "befor": [33, 34, 335, 340, 342], "sx": 34, "sy": 34, "sz": 34, "arrow_project": [34, 308, 335], "no_arrow": [34, 307, 308, 335], "300": 34, "arrow_color": [34, 255, 256, 257, 258, 266, 308, 335, 336], "arrow_s": [34, 255, 256, 257, 258, 266, 308, 311, 316, 335, 336], "05": [34, 75, 76, 77, 78, 118, 160, 268, 321], "arrow_dens": [34, 308, 335], "color_bar": [34, 308, 335], "textur": [34, 42, 47, 101, 255, 256, 257, 258, 266, 319, 324, 329, 330, 336, 338], "It": [34, 117, 119, 159, 245, 265, 324, 329, 330, 335], "enhanc": 34, "version": [34, 283, 304, 307, 308, 319, 321, 324, 325, 326, 333, 336, 337], "nkpoint": 34, "x": [34, 48, 50, 51, 97, 111, 218, 219, 236, 237, 238, 265, 267, 283, 284, 286, 287, 308, 319, 326, 330, 335, 336, 337, 338], "nband": [34, 338], "thei": [34, 117, 159, 324, 332], "also": [34, 266, 283, 287, 295, 301, 307, 308, 324, 329, 330, 335, 336, 342], "other": [34, 48, 178, 265, 266, 321, 322, 324, 330, 335, 336, 337, 338, 340], "compon": [34, 324, 335, 337, 338], "y": [34, 48, 50, 52, 97, 221, 222, 239, 240, 241, 265, 267, 308, 319, 321, 335, 336, 337, 338], "marker": [34, 247, 248], "arrow": [34, 255, 256, 257, 258, 266, 308, 335, 336], "whether": [34, 265, 324, 342], "bands_to_keep": [35, 36], "spd_spin": [35, 36], "fermi_shift": [35, 36, 255, 256, 257, 258, 259, 266, 336], "fermi_toler": [35, 36, 255, 256, 257, 258, 259, 266, 336], "surface_color": [35, 36], "projection_accuraci": [35, 36, 255, 256, 257, 258, 266, 336], "normal": [35, 36, 90, 95, 212, 213, 231, 232, 233, 255, 256, 257, 258, 262, 263, 266, 324, 330, 335, 336], "viridi": [35, 36, 95], "vmin": [35, 36, 95, 212, 213, 231, 232, 233, 245, 246, 248, 255, 256, 257, 258, 261, 262, 263, 265, 266, 291, 293, 294, 295, 298, 299, 300, 301, 312, 313, 314, 330, 335, 336, 342], "vmax": [35, 36, 95, 212, 213, 231, 232, 233, 245, 246, 248, 255, 256, 257, 258, 261, 262, 263, 265, 266, 291, 293, 294, 295, 298, 299, 300, 301, 312, 313, 314, 330, 335, 336, 342], "manapul": 35, "3d": [35, 42, 43, 46, 102, 103, 258, 266, 276, 280, 327, 328], "dft": [35, 108, 265, 266, 286, 321, 324, 327, 328, 329, 330, 331, 333, 336, 338, 342], "ha": [35, 48, 103, 113, 145, 146, 198, 201, 251, 265, 266, 280, 283, 286, 287, 289, 292, 324, 336, 342], "being": [35, 265, 324], "differ": [35, 86, 265, 266, 286, 287, 289, 293, 299, 324, 330, 331, 332, 333, 336], "coordin": [35, 48, 103, 104, 106, 140, 157, 158, 267, 319, 338], "ith": 35, "coorespond": 35, "one": [35, 48, 54, 90, 150, 151, 245, 254, 265, 266, 286, 287, 289, 308, 320, 321, 324, 329, 330, 331, 333, 335, 336, 337], "want": [35, 48, 90, 265, 266, 311, 324, 325, 335, 336, 337], "isosurfac": [35, 49, 50, 51, 52, 53, 54, 102, 103, 255, 256, 257, 258, 259, 312, 313, 336], "inform": [35, 90, 99, 100, 103, 105, 106, 109, 119, 122, 131, 138, 145, 180, 187, 189, 192, 193, 280, 289, 292, 308, 319, 321, 324, 329, 330, 333, 336, 337, 338], "about": [35, 90, 108, 192, 193, 292, 308, 324, 325, 333, 336], "improv": [35, 266, 336], "effienc": [35, 266, 336], "prior": [35, 113, 266, 324, 326, 336], "select": [35, 265, 266, 295, 301, 333, 336, 338], "within": [35, 266, 321, 324, 326, 330, 336, 337, 338, 342], "toler": [35, 75, 76, 77, 78, 255, 256, 257, 258, 259, 266, 321, 336], "everi": [35, 265, 324, 327, 328, 338], "direct": [35, 44, 48, 50, 51, 52, 53, 255, 256, 257, 258, 259, 265, 266, 267, 319, 324, 329, 330, 331, 335, 336, 337], "you": [35, 108, 266, 285, 286, 287, 289, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 324, 325, 326, 333, 336, 337, 342], "rgba": [35, 266, 336], "argument": [35, 261, 265, 266, 280, 304, 311, 324, 333, 336], "doe": [35, 265, 266, 307, 324, 333, 335, 336, 337], "whena": [35, 266, 336], "file": [35, 63, 109, 111, 113, 119, 121, 122, 131, 135, 138, 145, 146, 150, 152, 153, 155, 161, 199, 200, 202, 203, 204, 205, 234, 254, 258, 260, 261, 264, 265, 266, 268, 269, 274, 280, 282, 283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 327, 328, 329, 330, 331, 333, 335, 337, 338, 340, 342], "save": [35, 135, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 287, 307, 308, 330, 332, 335, 336, 342], "when": [35, 254, 255, 256, 257, 258, 259, 266, 283, 289, 292, 295, 301, 311, 312, 313, 314, 315, 316, 319, 321, 324, 329, 331, 332, 335, 336, 337], "save3d": [35, 266, 336], "we": [35, 186, 265, 266, 286, 287, 289, 324, 325, 329, 333, 335, 336, 338, 342], "recomend": [35, 266, 336], "qualit": [35, 266, 336], "colormap": [35, 95, 213, 255, 256, 257, 258, 259, 265, 266, 332, 335, 336], "automat": [35, 265, 266, 289, 319, 321, 324, 330, 336], "choos": [35, 265, 266, 324, 336], "e": [35, 48, 150, 239, 265, 266, 287, 324, 330, 333, 335, 336, 337], "g": [35, 48, 265, 266, 286, 287, 321, 330, 331, 335, 336, 337], "red": [35, 265, 266, 308, 315, 321, 330, 336], "blue": [35, 208, 211, 227, 247, 265, 266, 307, 308, 315, 319, 321, 330, 336, 342], "green": [35, 265, 266, 336], "control": [35, 266, 286, 324, 336], "accuraci": [35, 266, 336], "high": [35, 266, 330, 331, 336], "map": [35, 43, 56, 90, 95, 96, 212, 265, 266, 329, 330, 335, 336], "minimum": [35, 90, 95, 212, 213, 231, 232, 233, 255, 256, 257, 258, 262, 263, 265, 266, 330, 335, 336, 337], "maximum": [35, 95, 212, 231, 232, 233, 255, 256, 257, 258, 262, 263, 265, 266, 330, 335, 336, 337], "pad": [35, 48, 49], "assist": [35, 103, 251], "fermisurface3d": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 103, 336], "effect": [37, 255, 256, 257, 258, 266, 324, 335, 336], "mass": [37, 255, 256, 257, 258, 266, 336], "speed": [38, 255, 256, 257, 258], "veloc": [39, 255, 256, 257, 258, 266, 327, 328, 336], "helper": [40, 41, 121], "first": [40, 41, 48, 66, 70, 74, 130, 139, 284, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 321, 324, 332, 335, 336, 337, 342], "secoond": 40, "deriv": [40, 41], "all": [40, 48, 125, 150, 177, 196, 198, 264, 265, 266, 323, 324, 330, 331, 333, 335, 336, 337, 338, 342], "iband": 41, "second": [41, 67, 69, 74, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 336], "creat": [42, 48, 90, 111, 265, 266, 268, 286, 287, 289, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 330, 336, 337], "case": [42, 135, 265, 266, 280, 320, 324, 330, 331, 336, 337, 342], "vectors_arrai": 43, "vectors_nam": [43, 97], "mesh": [43, 279, 289, 319, 327, 328, 336, 338], "extended_zone_direct": [44, 255, 256, 257, 258, 259, 266, 336], "extend": [44, 324], "vecctor": 44, "expand": [44, 255, 256, 257, 258, 259], "scalars_arrai": 46, "scalar_nam": [46, 96], "scalar": [46, 90, 91, 96, 102, 103, 104, 336], "len": [46, 321], "self": [46, 48, 166, 167, 180, 289, 320], "length": [46, 50, 324], "iso": [46, 259, 266, 335, 336], "xyz": [48, 49], "v": [48, 49, 259, 265, 266, 329, 330, 333, 336], "isovalu": [48, 49, 103, 104, 259, 266, 336], "v_matrix": [48, 49], "algorithm": [48, 49], "lewin": [48, 49], "transform_matrix": [48, 49], "boundari": [48, 49], "equat": [48, 336, 338], "f": [48, 197, 286, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321, 324, 329, 330, 335, 336], "must": [48, 266, 280, 286, 287, 311, 321, 324, 330, 336, 342], "between": [48, 50, 56, 67, 70, 74, 90, 324, 330, 336, 340], "x1": [48, 267, 319], "y1": [48, 267, 319], "z1": 48, "z2": 48, "descript": [48, 54, 184, 333], "v1": [48, 265, 266, 336], "v2": 48, "constant": [48, 335], "nx": 48, "ny": 48, "nz": 48, "One": [48, 265, 266, 329, 330, 335, 336], "can": [48, 90, 108, 119, 265, 266, 280, 283, 284, 287, 289, 295, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 329, 330, 331, 332, 333, 335, 336, 337, 342], "present": [48, 83, 86, 151, 264, 265, 266, 324, 330, 331, 336], "instead": [48, 313, 324, 330, 335], "togeth": [48, 283, 324, 329, 330], "provid": [48, 95, 206, 225, 254, 264, 265, 266, 280, 283, 289, 324, 327, 328, 329, 330, 331, 333, 336, 338], "scikit": [48, 326], "imag": [48, 266, 311, 312, 313, 314, 315, 316, 319, 321, 326, 330, 336], "possibl": [48, 324, 329, 330, 336], "classic": 48, "modul": [48, 201, 264, 268, 269, 328, 331, 332, 335, 337, 340, 342], "fourier": [48, 266, 336], "grid": [48, 50, 51, 52, 53, 58, 261, 265, 266, 289, 319, 321, 330, 335, 336], "dafault": [48, 333], "period": 48, "dataset": [48, 77, 313, 336, 337], "solid": 48, "1st": [48, 266, 336], "bz": [48, 331, 336, 342], "cover": [48, 324], "fulli": 48, "so": [48, 265, 324, 330, 332, 336, 337, 338], "might": [48, 324, 326, 333, 336], "wrap": 48, "look": [48, 266, 315, 336], "afterward": 48, "clip": 48, "easili": [48, 333], "doabl": 48, "trimesh": [48, 93, 95, 266, 326, 336], "goe": [48, 330, 333, 337], "eigen_matrix": 48, "In": [48, 108, 265, 266, 289, 321, 324, 325, 329, 330, 333, 336, 337, 338, 342], "word": [48, 265, 266, 336], "super": [48, 327, 328], "withpad": 48, "vertic": [48, 103, 107, 208, 212, 213, 214, 215, 216, 265, 284, 333, 336], "verts_prim": 48, "t": [48, 197, 245, 286, 324, 325, 336], "exampl": [48, 90, 125, 265, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 322, 324, 325, 329, 330, 333, 335, 337, 338], "space": [50, 75, 76, 312, 313, 321, 335, 336, 340, 342], "tri": [54, 117, 159], "correct": [54, 324], "posit": [54, 62, 78, 220, 223, 238, 255, 256, 257, 258, 266, 311, 336], "abl": [54, 311, 329, 330, 336, 338], "min": 54, "max": 54, "kname": [55, 56, 261, 262, 263, 330, 342], "ktick": [55, 56, 261, 262, 263, 330, 342], "special_kpoint": [55, 56], "ngrid": [55, 56], "has_time_revers": [55, 56, 109, 110, 146, 147], "handl": [56, 201, 254, 336, 340], "tick": [56, 61, 62, 220, 223, 238, 241, 246, 247, 248], "special": [56, 320, 324, 329, 335], "mani": [56, 266, 324, 329, 330, 336, 337], "time": [56, 109, 146, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 336, 342], "revers": [56, 109, 146, 321, 324], "get": [57, 58, 138, 270, 286, 321, 324, 336], "same_grid_s": 58, "optim": 58, "after": [58, 324, 333, 338], "transformm": 58, "retain": [58, 324], "segment": [60, 335], "filenam": [63, 109, 110, 113, 114, 118, 119, 121, 122, 131, 135, 146, 147, 148, 149, 153, 154, 155, 156, 160, 161, 162, 217, 234, 260, 261, 265, 269, 311, 333, 335, 340, 342], "fmt": 63, "vasp": [63, 111, 113, 122, 184, 198, 201, 205, 260, 261, 262, 263, 265, 266, 283, 285, 286, 290, 292, 296, 297, 302, 320, 321, 323, 328, 329, 330, 332, 333, 335, 336, 338, 340, 342], "write": [63, 324, 337], "support": [63, 266, 286, 287, 324, 326, 328, 329, 330, 336], "moment": [63, 338], "_description_": [63, 257, 261, 263, 267, 335, 337], "cartesian_coordin": [64, 65], "fractional_coordin": [64, 65], "defin": [64, 265, 266, 321, 324, 330, 333, 335, 336, 337, 338], "perid": 64, "crystal": [64, 66, 67, 69, 70, 71, 74, 79, 80, 85, 195, 286, 287, 321, 327, 328], "symbol": [64, 103, 106], "natom": 64, "coordinatesd": 64, "magnitud": [66, 69, 71, 266, 329, 330, 336], "angl": [67, 70, 74, 321, 335], "third": [67, 70, 71, 324], "convex": [72, 84], "hull": [72, 84], "scipi": [72, 326], "spatial": 72, "convexhul": 72, "symprec": [75, 76, 77, 78, 118, 160, 268, 321], "1e": [75, 76, 77, 78, 118, 160, 268, 321], "intern": 75, "group": [75, 76, 294, 307, 308], "spglib": [77, 118, 160], "dict": [77, 113, 127, 128, 171, 172, 189, 193, 214, 261, 262, 263, 265, 330, 333], "wyckoff": 78, "insid": [79, 119, 324], "unitcel": 79, "question": 79, "corner": [80, 333], "speci": [83, 216, 265, 333], "crystla": 88, "valueerror": [88, 161], "proper": 88, "face_norm": [90, 91], "vert_norm": [90, 91], "face_color": [90, 91, 336], "vert_color": [90, 91], "hold": 90, "inherit": 90, "To": [90, 264, 265, 266, 283, 284, 286, 287, 289, 324, 325, 326, 330, 331, 333, 334, 335, 336, 338, 339], "requir": [90, 283, 284, 286, 287, 289, 324, 330, 332, 335, 336, 337], "nvert": 90, "vertici": 90, "integ": [90, 255, 256, 257, 258, 259], "nface": 90, "connect": [90, 321, 324, 336], "vertex": 90, "attach": [90, 324], "glyph": 90, "file_obj": 93, "output": [93, 112, 113, 122, 201, 264, 265, 266, 269, 283, 324, 330, 331, 333, 336, 340], "glb": [93, 266, 336], "file_typ": 93, "new_fac": 94, "vectors_x": 97, "vectors_i": 97, "vectors_z": 97, "manipul": [99, 100, 103], "1d": [99, 103, 104], "n_energi": [99, 103], "see": [99, 100, 101, 102, 105, 106, 324, 329, 330, 335, 336, 342], "further": [99, 100, 101, 102, 105, 106, 113, 324, 330, 335, 337, 342], "detail": [99, 100, 101, 102, 105, 106, 265, 291, 293, 294, 295, 298, 299, 300, 301, 321, 324, 330, 336], "phase": [100, 103, 289, 342], "plane": [101, 103, 266, 311, 319, 329, 330, 335, 336], "informt": [102, 103], "includ": [102, 103, 108, 125, 152, 209, 210, 212, 214, 255, 256, 257, 258, 259, 280, 286, 289, 324, 327, 328, 329, 330, 338, 342], "extens": [102, 103, 104, 107, 324], "chapter": [103, 251], "intend": [103, 108, 251, 324], "describ": [103, 251, 255, 256, 257, 258, 259], "data": [103, 108, 251, 254, 280, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321, 324, 327, 328, 336, 338], "process": [103, 113, 280, 304, 307, 308, 319, 321, 324, 327, 328, 330, 335, 337, 338, 342], "path": [103, 105, 135, 265, 266, 280, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 327, 328, 331, 332, 336, 338], "tick_label": [103, 105], "tick_posit": [103, 105, 220, 223, 238], "n_segement": [103, 105], "kdistanc": [103, 105], "section": [108, 201, 256, 266, 280, 283, 287, 295, 301, 324, 333, 335, 336, 338], "learn": [108, 325], "more": [108, 150, 151, 245, 255, 256, 257, 258, 259, 266, 280, 295, 301, 308, 321, 324, 325, 329, 330, 333, 336, 337], "pars": [108, 109, 111, 113, 119, 121, 122, 131, 135, 138, 145, 146, 148, 153, 155, 161, 163, 164, 178, 193, 199, 200, 201, 202, 203, 204, 205, 333, 335, 336], "code": [108, 119, 122, 123, 184, 201, 253, 254, 260, 261, 262, 263, 265, 266, 283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 327, 328, 329, 330, 332, 333, 335, 336, 338, 342], "highlight": [108, 342], "python": [108, 127, 171, 197, 265, 266, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 324, 325, 326, 327, 328, 336], "interfac": [108, 324, 336], "io": [108, 199, 200, 202, 203, 204, 205], "plotter": [108, 249, 250, 252, 256, 257, 291, 292, 293, 294, 295, 298, 299, 300, 301, 319, 321], "script": [108, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 330, 331, 335, 336, 337, 340, 342], "bandsplot": [108, 261, 280, 286, 287, 289, 291, 292, 293, 294, 295, 301, 304, 330, 332, 333, 336], "dosplot": [108, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 251, 261, 280, 286, 287, 289, 298, 299, 300, 301, 304, 333], "bandsdosplot": [108, 280, 286, 287, 289, 303, 305, 323, 333], "abinit_output": [111, 112, 113, 114, 264, 266, 283, 330, 331, 336, 342], "sinc": 111, "v9": 111, "procar": [111, 114, 115, 116, 117, 118, 122, 123, 131, 156, 157, 158, 159, 160, 201, 254, 260, 261, 264, 265, 266, 269, 274, 280, 282, 283, 289, 294, 320, 326, 327, 328, 329, 330, 331, 335, 337, 338, 340, 342], "filelist": [113, 114], "unlik": 113, "here": [113, 117, 159, 245, 285, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323, 325, 330], "merg": [113, 264, 283, 324, 331], "fix": [113, 117, 159, 186, 264, 283, 324, 331], "format": [113, 117, 159, 197, 201, 264, 265, 266, 283, 286, 319, 320, 321, 324, 327, 328, 330, 331, 336, 338, 340], "issu": [113, 264, 283, 331, 340], "variabl": [113, 330], "import": [113, 135, 265, 266, 286, 287, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 326, 335, 336, 342], "coord": [115, 116, 267], "some": [117, 119, 159, 266, 280, 287, 324, 329, 336], "stupid": [117, 159], "problem": [117, 159, 324], "due": [117, 159, 340, 342], "fortran": [117, 159, 340], "now": [117, 159, 286, 287, 335, 337, 338], "separ": [117, 159, 324, 329, 330, 331], "61": [117, 159], "00000000": [117, 159, 338], "50000000": [117, 159], "But": [117, 159, 308, 324, 335], "outcar": [118, 122, 123, 131, 149, 150, 151, 152, 160, 201, 260, 261, 265, 266, 289, 320, 330, 332, 335, 336, 342], "precis": [118, 160, 324], "infil": [119, 120, 121, 264, 266, 268, 269, 321, 331, 336, 337, 340], "through": [119, 121, 257, 324, 329, 330, 335, 336, 342], "becaus": [119, 324, 330], "multipl": [119, 264, 274, 283, 327, 328, 333, 338], "bsxf": 119, "sown": 119, "bxsfparser": [120, 121, 201], "bxsf": [120, 121, 200, 201, 266, 336], "dirnam": [122, 123, 135, 136, 253, 254, 261, 262, 263, 265, 266, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321, 330, 335, 336], "qe": [122, 123, 201, 202, 203, 265, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316], "lobsterin": [122, 123, 286], "lobsterout": [122, 123, 286], "scfin_filenam": [122, 123], "scf": [122, 123, 135, 136, 286, 287, 289], "poscar": [122, 123, 131, 154, 194, 201, 261, 265, 266, 321, 336, 337, 342], "dos_interpolation_factor": [122, 123, 161, 162], "directori": [122, 135, 254, 262, 263, 264, 265, 280, 284, 286, 287, 289, 330, 331, 335], "put": [122, 265, 266, 331, 336], "lobsterpars": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 201], "retrun": 124, "titl": [125, 235, 261, 262, 263, 265, 324, 330, 333, 335, 336, 342], "dos_paramater": 125, "separatli": 125, "pychemia": [125, 176, 184, 185, 188, 189, 196, 326], "visual": [125, 335, 336], "multi": [126, 170], "diment": [126, 170, 336], "per": 126, "complet": [127, 171, 284], "dictionari": [127, 171, 179, 182, 214, 261, 262, 263, 265, 280, 330], "denis": 127, "kei": [128, 214, 262, 263, 265, 324, 330, 336], "sturcutu": 131, "scf_in_filenam": [135, 136], "bands_in_filenam": [135, 136], "pdos_in_filenam": [135, 136], "pdo": [135, 136, 287], "kpdos_in_filenam": [135, 136], "kpdo": [135, 136, 287], "atomic_proj_xml": [135, 136], "atomic_proj": [135, 136, 287], "xml": [135, 136, 161, 162, 165, 186, 193, 261, 265, 287, 333], "expresso": 135, "most": [135, 265, 324, 330, 333], "come": [135, 324, 327, 328], "parser": [135, 186, 201, 330], "eb": [135, 225, 226, 295, 301], "where": [135, 214, 254, 262, 263, 266, 280, 287, 311, 324, 330, 331, 335, 336, 337, 338], "took": 135, "place": [135, 280, 287, 324, 336], "ofstat": 135, "locat": [135, 206, 225, 241, 337], "outdir": 135, "prefix": 135, "qepars": [136, 137, 138, 139, 140, 141, 142, 143, 201], "fdf_file": [144, 145], "siestapars": [145, 201], "siesta": [145, 201, 204, 285], "fdf": 145, "vlaue": [146, 259], "kpioint": 146, "ourcar": 148, "just": [150, 151, 245, 336, 337], "field": [150, 336], "keep": [150, 265, 266, 324, 329, 336, 337], "than": [150, 151, 178, 245, 265, 266, 324, 329, 330, 336, 337, 342], "ndaarai": 151, "them": [152, 197, 324, 330, 338], "matric": [152, 338], "vasprun": [161, 162, 191, 193, 261, 265, 333], "vaspxml": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 342], "el": 165, "_type": 165, "text": [165, 197], "specifi": [165, 254, 255, 256, 257, 265, 266, 284, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 330, 333, 336], "attrib": 165, "tree": 165, "boolian": [166, 167, 168, 197, 265], "consist": [166, 167, 180, 289, 320, 324, 329, 330, 338], "ionic": [166, 168, 173, 177, 187, 196], "converg": [167, 168], "step": [173, 177, 180, 187, 195, 196, 287, 289, 324], "system": [174, 190, 286, 324, 331, 335, 342], "final": [176, 324, 330, 331], "xml_tree": [178, 179, 180, 181, 182, 183], "calculatio": 178, "scstep": 178, "dest": 179, "recurc": [179, 181], "check": [179, 264, 325, 331], "spell": 179, "extract": [180, 181, 289, 337], "tage": 181, "varrai": 183, "tag": [183, 330, 335, 336], "vaspincar": 184, "alwai": [186, 335], "accord": [186, 324, 335], "read": [186, 266, 287, 321, 324, 333, 336, 342], "finish": [186, 334, 339], "pseudopotenti": 192, "potcar": 192, "covert": 197, "abinit": [199, 201, 264, 265, 266, 285, 286, 329, 330, 331, 336, 342], "espresso": [200, 201, 202, 203, 204, 285, 286, 290, 296, 297, 302, 323, 328, 329, 330], "decrib": 201, "result": [201, 324, 337, 342], "lobster": [201, 202, 261, 262, 263, 265, 285, 330, 335], "abinitpars": 201, "vasppars": 201, "ax": [206, 207, 225, 226, 245, 246, 247, 248, 261, 262, 263, 265, 292, 330, 332, 335, 342], "kwarg": [206, 207, 225, 226, 261, 262, 263, 330, 342], "mpl": [206, 225], "orient": [208, 211, 212, 213, 214, 215, 216, 261, 265, 311, 329, 330, 333], "horizont": [208, 211, 212, 213, 214, 215, 216, 261, 265, 333], "linestyl": [208, 227], "dot": [208, 227], "linewidth": [208, 227, 246, 261, 265], "draw": [208, 227], "THe": 208, "style": [208, 295, 301], "plain": [211, 230, 261, 262, 263, 265, 266, 286, 287, 289, 292, 310, 317, 323, 327, 328, 332, 335, 338, 342], "spin_color": [212, 213, 214, 215, 216, 255, 256, 257, 258, 261, 265, 315], "spin_label": [212, 213, 214, 215, 216, 261, 265], "plot_tot": [212, 214, 215, 216, 261, 265, 333], "plot_bar": [212, 213, 246], "parametr": [212, 213, 232, 265, 266, 280, 292, 329, 330, 332, 336, 338], "colorba": 212, "mmaximum": 213, "colorbar": 213, "item": [214, 261, 262, 263, 265, 291, 298, 301, 324, 330, 333, 342], "contribut": [214, 215, 216, 265, 266, 324, 329, 330, 333, 336], "stack": [214, 215, 216, 265, 298, 338], "eachoth": 216, "pdf": [217, 234, 265], "interv": [219, 222, 237, 240, 241, 332], "xlim": 219, "tick_nam": [220, 223, 238], "xtick": 220, "ylim": 222, "ytick": 223, "ebsplot": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 291, 292, 293, 294, 295], "methdo": 229, "width_mask": [231, 233], "color_mask": [231, 233], "width_weight": [231, 233], "color_weight": [231, 233], "scatter": [231, 233, 330], "width": [231, 233, 265, 321, 336, 342], "mask": [231, 233, 246, 248, 262, 263, 324, 330], "plot_color_bar": [232, 261], "overlai": 232, "bar": [232, 261, 265, 266, 335, 336], "fo": [236, 239, 257], "limit": [237, 240, 265, 324, 330], "begin": [237, 240, 267, 338], "end": [237, 240, 267, 324, 333, 338], "black": [238, 332], "_f": 239, "ev": [239, 312, 313, 320, 335], "major": [241, 324], "minor": 241, "depeci": 243, "ot": 243, "procarplot": [244, 245, 246, 247, 248, 251], "hot_r": [245, 248], "handler": 245, "parametricplot": 245, "fake": 245, "shouldn": 245, "invok": [245, 324, 326], "discontinu": [246, 247, 248, 261, 287, 338], "figsiz": [246, 247], "13": [246, 247, 293, 299, 311, 312, 316, 317, 324, 329, 337, 338], "9": [246, 247, 283, 293, 299, 307, 311, 312, 313, 314, 315, 329, 338], "02": 247, "o": [247, 248, 265, 266, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 329, 330, 333, 336], "50": [248, 289, 337], "structutu": 249, "stuctur": 251, "depreci": 252, "repair": [253, 254, 260, 261, 266, 280, 282, 294, 320, 324, 335, 336, 338], "apply_symmetri": [253, 254, 311, 312, 313, 314, 315, 316], "fermihandl": [254, 255, 256, 257, 258, 259, 280, 289, 311, 312, 313, 314, 315, 316], "Then": [254, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 321, 342], "srufac": [254, 257], "iso_rang": [255, 257, 259, 266, 312, 313, 336], "iso_surfac": [255, 257, 259, 266, 312, 313, 336], "10": [255, 259, 265, 266, 293, 299, 308, 321, 324, 329, 336, 337, 338], "iso_valu": [255, 259, 313], "spin_textur": [255, 256, 257, 258, 266, 307, 308, 310, 311, 317, 323, 335, 336], "calculate_fermi_spe": [255, 256, 257, 258, 266, 336], "calculate_fermi_veloc": [255, 256, 257, 258, 266, 336], "calculate_effective_mass": [255, 256, 257, 258, 266, 336], "plot_brillouin_zon": [255, 256, 257, 258], "015": [255, 256, 257, 266, 321, 336], "plot_directional_arrow": [255, 256, 257, 258], "camera_po": [255, 256, 257, 258, 266, 336], "background_color": [255, 256, 257, 258, 266, 336], "white": [255, 256, 257, 258, 266, 336, 340], "save_gif": [255, 258, 313], "genrat": 255, "gif": [255, 258, 266, 313, 336], "chang": [255, 295, 301, 308, 324, 333, 336], "isovlau": [255, 259], "rang": [255, 257, 259, 266, 312, 313, 319, 336, 337, 342], "excat": 255, "ther": [255, 256, 257, 258, 259, 263], "allow": [255, 256, 257, 258, 259, 266, 324, 329, 330, 335, 336, 342], "orlist": [255, 256, 257, 258], "camera": [255, 256, 257, 258, 266, 336], "strortupl": [255, 256, 257, 258], "background": [255, 256, 257, 258, 266, 336], "show_cross_section_area": [256, 266, 311, 336], "slice_norm": [256, 266, 311, 336], "slice_origin": [256, 266, 311, 336], "line_width": [256, 311], "perspect": [256, 257, 258, 266, 336], "save_2d": [256, 257, 258], "save_2d_slic": [256, 311], "sruafc": [256, 259], "cross": [256, 266, 324, 336], "widget": [256, 257, 266, 311, 336], "area": [256, 259, 265, 266, 311, 324, 333, 336], "slice": [256, 266, 336], "noraml": 256, "origin": [256, 266, 307, 308, 324, 330, 336, 337], "linwidth": 256, "screenshot": [256, 257, 258], "isoslid": [257, 310, 317, 323], "slide": 257, "go": [257, 265, 266, 326, 336], "except": [257, 324], "save_mp4": 258, "save_3d": 258, "boollean": 258, "mp4": [258, 266, 336], "savefig": [259, 261, 262, 263, 265, 330, 332, 333, 335, 342], "exact": [259, 313, 324], "gap": [260, 320], "bands_set": [261, 280, 304], "elimit": [261, 262, 263, 265, 292, 330, 332, 333, 342], "interpolation_typ": [261, 262, 263, 330, 342], "cubic": [261, 262, 263, 265, 330, 342], "projection_mask": [261, 262, 263, 265, 330, 342], "dos_set": [261, 280, 304], "dos_limit": [261, 265], "old": [261, 265, 342], "k_limit": 261, "title_fonts": 261, "16": [261, 266, 293, 299, 308, 311, 313, 316, 317, 324, 329, 336], "draw_fermi": 261, "keyword": [261, 280, 295, 301, 304, 307, 308, 311, 324, 336], "window": [261, 262, 263, 265, 324, 330, 336], "structutr": [262, 330], "sting": [262, 330], "custom": [262, 263, 324, 330], "kanem": [262, 330], "decid": [262, 324, 330, 335], "plt": [262, 263, 265, 330, 335, 342], "kdirect": [263, 330, 342], "bandstructur": [263, 271, 324, 331], "kitck": 263, "objext": 263, "outfil": [264, 268, 269, 321, 331, 337, 340], "procar_merg": [264, 331], "gz": [264, 331], "mergeparallel": [264, 331], "fixformat": [264, 331], "nspin": [264, 287, 331], "concaten": [264, 274, 280, 283, 338], "procar_": [264, 331], "compress": [264, 331], "parallel": [264, 283, 331], "detect": [264, 331], "nsppol": [264, 331], "flag": [264, 283, 284, 286, 287, 289, 331, 342], "carri": [265, 324, 330, 333], "out": [265, 266, 283, 284, 286, 287, 324, 336, 342], "srvo3": 265, "perform": [265, 266, 284, 287, 289, 324, 327, 328, 335, 336, 337, 342], "explain": [265, 283, 324, 336], "exmapl": [265, 311, 312, 313, 314, 315, 316, 319, 321], "tutori": [265, 325, 336], "parametric_lin": [265, 338], "stack_orbit": [265, 298, 301, 338], "stack_speci": [265, 338], "multipli": 265, "spline": 265, "ploariz": 265, "These": [265, 284, 290, 297, 303, 304, 306, 310, 318, 323, 324, 329, 330, 336], "chosen": [265, 336], "accept": [265, 324], "rgb": 265, "html": [265, 266, 324, 336], "0000ff": 265, "ff0000": 265, "polar": [265, 290, 291, 292, 296, 297, 298, 302, 304, 307, 310, 312, 313, 314, 317, 320, 321, 323, 329, 330, 331, 338, 342], "two": [265, 266, 324, 330, 336], "even": [265, 324, 330], "disregard": 265, "cation": 265, "fill": [265, 333], "under": [265, 324, 333], "curv": [265, 333], "better": [265, 294, 336], "sens": 265, "refer": [265, 286, 291, 293, 294, 295, 298, 299, 300, 301, 308, 324, 329, 330, 338], "srvo": [265, 266, 329, 330, 333, 336], "magenta": 265, "cyan": 265, "polor": 265, "both": [265, 324, 327, 328, 330, 333, 342], "legend": [265, 335], "packag": [265, 266, 287, 313, 324, 330, 333, 336], "relev": [265, 266, 324, 336], "mind": [265, 266, 336, 337], "start": [265, 266, 324, 329, 330, 335, 336, 337], "oxygen": [265, 266, 333, 336], "sr1": [265, 266, 336], "o3": [265, 266, 336], "900891": [265, 266, 336], "000000": [265, 266, 336, 340], "sr": [265, 266, 329, 330, 333, 336], "500000": [265, 266, 336], "noth": [265, 266, 324, 336], "consid": [265, 266, 298, 301, 324, 325, 327, 328, 329, 330, 336], "indeci": [265, 266, 336], "relav": [265, 266, 336], "while": [265, 266, 324, 333, 336, 337], "ask": [265, 324, 333], "graph": [265, 324], "higher": 265, "web": [265, 266, 336], "page": [265, 266, 324, 325, 328, 336], "http": [265, 266, 324, 326, 336], "org": [265, 266, 324, 336], "user": [265, 266, 280, 291, 293, 294, 295, 298, 299, 300, 301, 307, 308, 321, 324, 329, 330, 333, 335, 336], "plasma": 265, "plote": 265, "flase": 265, "entri": 265, "png": [265, 266, 311, 330, 333, 336, 342], "jpg": 265, "shown": 265, "interact": [265, 324, 336], "ad": [265, 266, 286, 324, 325, 336], "abov": [265, 266, 286, 287, 289, 312, 313, 324, 329, 330, 332, 336], "srvo_": 265, "latex": 265, "well": [265, 307, 308, 324, 330, 331, 336], "cal": 265, "argumnet": [265, 333], "elk": [265, 285, 329, 330, 332, 333, 342], "uparrow": [265, 333, 338], "downarrow": [265, 333, 338], "side": [265, 287, 324], "mean": [265, 266, 291, 293, 294, 295, 298, 299, 300, 301, 324, 336], "treat": [265, 324, 335], "raw": 265, "No": [265, 312, 313, 324, 330], "ack_speci": 265, "base": [265, 266, 321, 324, 330], "For": [265, 280, 289, 291, 293, 294, 295, 298, 299, 300, 301, 308, 319, 324, 329, 330, 333, 335, 336, 337, 338, 342], "clarif": 265, "visit": 265, "specif": [265, 280, 286, 324, 325, 329, 330, 333, 336], "clarifi": 265, "lingo": 265, "equival": [265, 324], "top": [265, 333], "take": [265, 280, 287, 293, 299, 324], "figur": [265, 280, 307, 308, 330, 332, 342], "subplot": 265, "larger": [265, 324], "row": [265, 329, 330, 337], "colomun": 265, "fig": [265, 330, 332], "linspac": 265, "pi": 265, "1000": 265, "sin": 265, "plt_show": 265, "skip": [265, 336], "modifi": [265, 324, 329, 330], "set_ylim": 265, "save_color": [266, 336], "only_spin": [266, 336], "savegif": [266, 336], "savemp4": [266, 336], "save_meshio": [266, 336], "save2d": [266, 336], "show_slic": [266, 336], "iso_slid": [266, 336], "simul": [266, 336], "mgb2": [266, 336], "ni_f": [266, 336], "49": [266, 336], "iter": [266, 336], "ones": [266, 333, 336], "14": [266, 293, 299, 308, 311, 315, 316, 317, 329, 336, 338], "15": [266, 293, 299, 308, 309, 311, 316, 324, 329, 336, 342], "17": [266, 293, 299, 308, 311, 316, 329, 336], "kgrid": [266, 336], "5x5x5": [266, 336], "lead": [266, 336], "20x20x20": [266, 336], "uniform": [266, 336], "particular": [266, 286, 324, 335, 336, 337], "direect": [266, 336], "grai": [266, 336], "surfca": [266, 336], "property_project": [266, 336], "fermi_velocity_vector": [266, 336], "fermi_veloc": [266, 336], "harmon": [266, 336, 338], "effective_mass": [266, 336], "collinear": [266, 329, 330, 336, 338], "As": [266, 324, 330, 336, 338], "suggest": [266, 336], "belov": [266, 336], "fast": [266, 336], "rather": [266, 336, 337, 342], "inaccur": [266, 324, 336], "nearest": [266, 336], "neighbor": [266, 336], "accur": [266, 336], "linear": [266, 336], "video": [266, 336], "export": [266, 336, 338], "stl": [266, 336], "binari": [266, 336], "ply": [266, 336], "ascii": [266, 336], "off": [266, 311, 312, 313, 314, 315, 316, 319, 321, 336], "obj": [266, 336], "gltf": [266, 336], "collada": [266, 336], "meshio": [266, 336], "illus": [266, 336], "depth": [266, 325, 336], "graphic": [266, 336], "turn": [266, 336], "featur": [266, 289, 295, 301, 324, 335, 336, 337], "largest": [266, 336], "show_curvatur": [266, 336], "curvatur": [266, 336], "curvature_typ": [266, 336], "avail": [266, 324, 325, 330, 335, 336, 342], "gaussian": [266, 336], "slider": [266, 336], "iso_energi": [266, 336], "view": [266, 324, 336], "whole": [266, 324, 336], "nkx": 267, "nky": 267, "grid_siz": 268, "40": [268, 284, 321, 330], "with_time_revers": 268, "recip": [268, 321, 336], "hpkot": [268, 321], "threshold": [268, 321], "07": [268, 317, 321], "angle_toler": 268, "supercell_matrix": [268, 321, 342], "recepi": 268, "procarrepair": [269, 340], "exist": 270, "aclass": 276, "pre": [280, 304, 307, 308, 319, 321, 324, 327, 328], "post": [280, 304, 307, 308, 319, 321, 324, 327, 328, 337], "cat": [280, 283, 331, 338], "depend": [280, 326, 333], "mai": [280, 295, 301, 320, 324, 330, 336], "orbitald": 280, "bandsplot_2d": 280, "bandtructur": 280, "combin": [280, 324, 329, 330, 331, 336], "fermi2d": [280, 306, 309, 323, 335], "fermi3d": [280, 286, 287, 310, 317, 323, 336], "generate2dkmesh": [280, 319], "kmesh": [280, 286, 289, 336], "bandgap": [280, 318, 322, 323], "reapir": 280, "abinitoutput": 283, "prtprocar": 283, "nameofoutputfil": 283, "run": [283, 284, 286, 287, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324, 331, 338], "split": [283, 331, 335], "bandlin": 284, "band_": [284, 329, 330], "_a": 284, "obtain": [284, 327, 328, 330, 331, 338], "task": [284, 327, 328], "22": 284, "addition": 284, "spinpol": 284, "join": 284, "plot1d": 284, "gamma": [284, 289, 319, 330, 331, 342], "were": [284, 324], "guid": [285, 287, 289, 291, 293, 294, 295, 298, 299, 300, 301, 325], "prepar": 285, "perper": 285, "fatband": 286, "lobter": 286, "lobstercod": 286, "v6": [286, 287], "variou": [286, 287, 289, 327, 328, 338], "independ": [286, 287, 289, 324], "pw": [286, 287], "your": [286, 287, 324, 325, 336], "bands_dirnam": [286, 287, 289], "dos_dirnam": [286, 287, 289], "bands_mod": [286, 287, 289], "dos_mod": [286, 287, 289], "right": [286, 324, 333, 336, 338], "addit": [286, 287, 289, 324, 336, 338], "wf_collect": 286, "nosym": 286, "noinv": 286, "k_point": [286, 287], "520": 286, "0000000": 286, "1428571": 286, "2857143": 286, "4285714": 286, "0000000000": [286, 287], "0000": 286, "0200000000": 286, "4800000000": 286, "5000000000": [286, 287], "5110420726": 286, "4889579274": 286, "7539676705": 286, "2460323295": 286, "7650097432": 286, "2349902568": 286, "h2": 286, "h0": 286, "2238002446": 286, "meth": 286, "explicitli": [286, 287, 324], "lobster_input_fil": 286, "explicit": [286, 287], "createfatband": 286, "2p_x": 286, "2p_y": 286, "2p_z": 286, "li": [286, 324], "fe": [286, 291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "lobster_q": 286, "projwfc": 287, "make": [287, 289, 324, 335, 337], "sure": [287, 289, 324], "kresolveddo": 287, "copi": [287, 324, 333], "main": [287, 336], "nscf": 287, "crystal_b": 287, "6250000000": 287, "2500000000": 287, "u": [287, 324, 325, 335], "3750000000": 287, "7500000000": 287, "w": [287, 324, 336], "occur": [287, 324, 330], "269": 287, "0083333333": 287, "0166666667": 287, "0250000000": 287, "0333333333": 287, "0416666667": 287, "4916666667": 287, "5062500000": 287, "0125000000": 287, "6125000000": 287, "2250000000": 287, "6187500000": 287, "2375000000": 287, "3691406250": 287, "7382812500": 287, "3632812500": 287, "7265625000": 287, "3574218750": 287, "7148437500": 287, "0058593750": 287, "0117187500": 287, "starting_magnet": 287, "branch": 287, "print": [287, 342], "instal": [287, 324], "git": [287, 326], "clone": 287, "gitlab": 287, "com": [287, 324, 326], "pietrodeluga": 287, "q": [287, 336], "cd": [287, 326], "checkout": 287, "new_proj": 287, "bin": 287, "noncolin": 287, "lspinorb": 287, "savesigma": 287, "wavefunct": [289, 338], "written": [289, 294, 319, 321, 324, 342], "lorbit": [289, 342], "11": [289, 293, 299, 324, 329, 338], "incar": [289, 336], "unfold": [289, 327, 328, 338], "12": [289, 293, 299, 311, 314, 316, 317, 329, 336, 338, 342], "wave": [289, 338], "ispin": [289, 342], "lnoncollinear": 289, "icharg": 289, "math": [289, 329, 330], "chgcar": 289, "line_mod": 289, "h": [289, 324, 342], "25": [289, 313], "demonstr": [290, 297, 303, 306, 310, 318, 323], "capabl": [290, 297, 303, 306, 310, 318, 323, 327, 328, 330, 336], "compar": [290, 296, 323, 327, 328, 338, 342], "click": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 336], "download": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323], "below": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 321, 324, 329, 330, 332], "replac": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 321], "data_dir": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321], "download_exampl": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "save_dir": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "spin_calc_typ": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "calc_typ": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "local": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 324], "parent_dir": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "getcwd": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "sep": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 320, 321], "ebs_plot": [291, 292, 293, 294, 295], "0x000002a1437c00a0": 291, "pleas": [291, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 319, 321, 324, 325, 326, 336, 338], "ref": [291, 293, 294, 295, 298, 299, 300, 301], "atomic_project": [291, 293, 294, 295, 298, 299, 300, 301], "0x000002a1191681c0": 291, "0x000002a141d1b910": 291, "0x000002a141a69340": 291, "0x000002a1419a9430": 291, "overlay_orbit": 291, "0x000002a141cd7340": 291, "0x000002a143e299d0": 291, "0x000002a141bd5ac0": 291, "minut": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321], "342": 291, "plotting_colinear": [291, 296], "jupyt": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323], "notebook": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323], "ipynb": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321], "galleri": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323], "sphinx": [291, 292, 293, 294, 295, 298, 299, 300, 301, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 320, 321, 323], "vasp_data_dir": 292, "qe_data_dir": 292, "equal": [292, 312, 313, 336], "0x000001410b24b940": 292, "527": [292, 296], "plotting_compare_band": [292, 296], "noncolinear": [293, 294, 299, 300, 306, 309, 311, 316, 323, 329, 336], "sphinx_gallery_thumbnail_numb": [293, 311, 312, 313, 314, 315, 316, 319, 320, 321], "0x000002a141891d90": 293, "express": [293, 299, 324], "therefor": [293, 299, 324, 329, 342], "0x000002a14125e430": 293, "359": 293, "plotting_noncolinear_q": [293, 296], "c": [294, 307, 308, 324, 325, 326, 336], "lllang": [294, 307, 308], "desktop": [294, 307, 308], "romero": [294, 304, 307, 308, 319, 321, 324], "research": [294, 307, 308, 324, 325], "pyprocar2": [294, 307, 308], "next": [294, 320, 324, 336], "effici": 294, "0x000002a14153e040": 294, "0x000002a1412b1730": 294, "885": 294, "plotting_noncolinear_vasp": [294, 296], "spin_colinear": [295, 301, 307, 315], "There": [295, 301, 324, 325, 336], "few": [295, 301], "0x000002a1414b6460": 295, "doc": [295, 301], "util": [295, 301, 319, 321, 324, 331, 335, 336, 337, 340], "default_set": [295, 301], "ini": [295, 301], "0x000002a14125fbe0": 295, "0x000002a1414faf40": 295, "0x000002a14125fd00": 295, "373": 295, "plotting_spin_polar": [295, 296], "00": [296, 302, 305, 309, 317, 322], "execut": [296, 302, 305, 309, 317, 322, 324, 330], "examples_00": 296, "band_structur": 296, "mb": [296, 302, 305, 309, 317, 322], "000": [296, 309, 338], "dos_plot": [298, 299, 300, 301], "0x0000024a0b97c790": 298, "0x0000024a0b986ac0": 298, "0x0000024a1a77be50": 298, "0x0000024a0ca43670": 298, "0x0000024a1b535310": 298, "0x0000024a1b36b4c0": 298, "24": [298, 302, 311, 316], "260": [298, 302], "plotting_colinear_do": [298, 302], "0x0000024a0beaf940": 299, "20": [299, 302, 319, 321, 324], "461": [299, 302], "plotting_noncolinear_dos_q": [299, 302], "0x0000024a0bcc88b0": 300, "056": [300, 302], "plotting_noncolinear_dos_vasp": [300, 302], "0x0000024a0ca6a6d0": 301, "0x0000024a0c30c0d0": 301, "0x0000024a0c36be50": 301, "0x0000024a2f196880": 301, "0x0000024a31451af0": 301, "0x0000024a31853fa0": 301, "0x0000024a3173efa0": 301, "46": [301, 302], "800": [301, 302], "plotting_spin_polarized_do": [301, 302], "01": [302, 305, 317], "34": 302, "578": 302, "examples_01": 302, "03": 302, "bands_dir": 304, "dos_dir": 304, "____": [304, 307, 308, 319, 321], "_": [304, 307, 308, 319, 321, 338], "__": [304, 307, 308, 319, 321], "___": [304, 307, 308, 319, 321], "librari": [304, 307, 308, 319, 321, 324, 326, 327, 328], "jun": [304, 307, 308, 319, 321], "10th": [304, 307, 308, 319, 321], "2021": [304, 307, 308, 319, 321], "cite": [304, 307, 308, 319, 321, 336], "uthpala": [304, 307, 308, 319, 321, 324], "herath": [304, 307, 308, 319, 321, 324], "pedram": [304, 307, 308, 319, 321, 324], "tavadz": [304, 307, 308, 319, 321, 324], "xu": [304, 307, 308, 319, 321, 324], "he": [304, 307, 308, 319, 321, 324], "eric": [304, 307, 308, 319, 321, 324], "bousquet": [304, 307, 308, 319, 321, 324], "sobhit": [304, 307, 308, 319, 321, 324], "singh": [304, 307, 308, 319, 321, 324], "francisco": [304, 307, 308, 319, 321, 324], "mu\u00f1oz": [304, 307, 308, 319, 321, 324], "aldo": [304, 307, 308, 319, 321, 324], "comput": [304, 307, 308, 319, 321, 324], "physic": [304, 307, 308, 319, 321, 324], "commun": [304, 307, 308, 319, 321, 324], "251": [304, 307, 308, 319, 321, 324], "2020": [304, 307, 308, 319, 321, 324], "107080": [304, 307, 308, 319, 321, 324], "develop": [304, 307, 308, 319, 321], "rees": [304, 307, 308, 319, 321, 324], "boucher": [304, 307, 308, 319, 321, 324], "logan": [304, 307, 308, 319, 321, 324], "lang": [304, 307, 308, 319, 321, 324], "freddi": [304, 307, 308, 319, 321, 324], "farah": [304, 307, 308, 319, 321, 324], "097": [304, 305], "plotting_bandsdosplot": [304, 305], "examples_02": 305, "bands_do": 305, "comp": [307, 308], "rot": [307, 308], "trasl": [307, 308], "_____________________________________________________": [307, 308], "add_legend": [307, 335], "contact": [307, 324], "specfic": [307, 308], "navi": 307, "32": 307, "985": 307, "plotting_fermi2d": [307, 309], "By": [308, 324, 336, 342], "s_z": [308, 329, 330, 335], "plain_band": 308, "916": [308, 309], "plotting_fermi2d_spin_textur": [308, 309], "examples_03": 309, "isovalue_gif": [310, 317, 323], "cross_sect": [310, 317, 323], "ensur": [311, 312, 313, 314, 315, 316, 319, 321, 324], "screen": [311, 312, 313, 314, 315, 316, 319, 321, 342], "off_screen": [311, 312, 313, 314, 315, 316, 319, 321], "load": [311, 312, 313, 314, 315, 316], "memori": [311, 312, 313, 314, 315, 316, 337], "outermost": 311, "center": [311, 319, 324, 335, 336, 338], "adjust": 311, "manual": [311, 321, 330, 331], "plot_fermi_cross_sect": 311, "18": [311, 312, 313, 314, 315, 316], "054241046313987": [311, 316], "3504": [311, 316], "2d_slice": 311, "723": [311, 317], "plotting_fermi3d_cross_sect": [311, 317], "would": [312, 313, 324, 329, 330, 335, 336], "throughout": [312, 313, 324], "plot_fermi_isoslid": 312, "239837592692684": [312, 313, 314], "476": [312, 317], "plotting_fermi3d_isoslid": [312, 317], "create_isovalue_gif": 313, "anaconda": [313, 325], "env": 313, "pyprocar_dev": 313, "lib": 313, "site": [313, 329, 330, 338], "2132": 313, "pyvistadeprecationwarn": 313, "overwrit": 313, "deprec": 313, "copy_from": 313, "076": [313, 317], "plotting_fermi3d_isovalue_gif": [313, 317], "plot_fermi_surfac": [314, 315, 316], "302": [314, 317], "plotting_fermi3d_plain": [314, 317], "042041123610034": 315, "211": [315, 317], "plotting_fermi3d_spin": [315, 317], "655": [316, 317], "plotting_fermi3d_spin_textur": [316, 317], "444": 317, "examples_04": 317, "09": 317, "kmesh_gener": [318, 322, 323, 335], "kpath_gener": [318, 322, 323], "particularli": [319, 331, 335, 340], "command": [319, 324, 326, 331, 332], "k_": 319, "num_grids_x": 319, "num_grids_i": 319, "add_mesh": 319, "show_ax": [319, 321], "show_grid": [319, 321], "405": [319, 322], "plotting_2dkmesh_gener": [319, 322], "note": [320, 326, 330, 331, 333, 336, 342], "band_gap": 320, "procarpars": 320, "program": [320, 324], "7365": 320, "164": [320, 322], "plotting_bandgap": [320, 322], "desir": [321, 330, 333, 336], "momentum": [321, 336], "enabl": [321, 324, 335, 336, 342], "suitabl": [321, 324], "suffici": 321, "typic": [321, 324, 340], "retriev": [321, 330], "slight": 321, "modif": [321, 324], "regard": [321, 324, 335, 337], "seek": 321, "seekpath": [321, 326], "hinuma": 321, "et": [321, 336], "al": [321, 336], "pizzi": 321, "kumagai": 321, "oba": 321, "tanaka": 321, "diagram": 321, "crystallographi": 321, "scienc": [321, 324], "128": 321, "2017": 321, "140": 321, "184": 321, "doi": [321, 324, 336], "1016": [321, 324], "commatsci": 321, "2016": 321, "k_path": 321, "k_label": 321, "ey": 321, "uniqu": 321, "unique_label": 321, "unique_kpath": 321, "enumer": 321, "append": 321, "ik": 321, "add_lin": 321, "els": 321, "add_point_label": 321, "point_color": 321, "text_color": 321, "font_siz": 321, "36": [321, 342], "always_vis": 321, "view_yz": 321, "429": [321, 322], "plotting_kpath_gener": [321, 322], "998": 322, "examples_05": 322, "sever": [323, 336], "what": [323, 324], "examples_python": 323, "zip": 323, "examples_jupyt": 323, "open": [324, 327, 328, 336], "head": [324, 325], "paper": 324, "scientif": [324, 325], "our": [324, 325, 335], "visibl": [324, 325], "bibtex": 324, "articl": [324, 336], "herath2020107080": 324, "journal": [324, 336], "volum": [324, 336], "year": [324, 336], "issn": 324, "0010": 324, "4655": 324, "cpc": 324, "2019": [324, 336], "url": [324, 336], "www": 324, "sciencedirect": 324, "pii": 324, "s0010465519303935": 324, "condens": 324, "matter": 324, "who": 324, "made": 324, "substanti": 324, "concept": 324, "design": 324, "softwar": [324, 336], "creation": 324, "draft": 324, "substant": 324, "revis": 324, "global": 324, "effort": 324, "team": 324, "thank": 324, "jan": 324, "janssen": 324, "litong": 324, "jiang": 324, "nichola": 324, "pike": 324, "don": [324, 325], "munoz": 324, "b": 324, "departamento": 324, "de": 324, "isica": 324, "facultad": 324, "ciencia": 324, "universidad": 324, "chile": 324, "santiago": 324, "nanosci": 324, "nanotechnologi": 324, "cedenna": 324, "depart": 324, "astronomi": 324, "west": 324, "virginia": 324, "univers": 324, "morgantown": 324, "wv": 324, "26505": 324, "6315": 324, "usa": 324, "rutger": 324, "piscatawai": 324, "nj": 324, "08854": 324, "physiqu": 324, "th": 324, "eoriqu": 324, "mat": 324, "eriaux": 324, "cesam": 324, "universit": 324, "eg": 324, "4000": 324, "sart": 324, "tilman": 324, "belgium": 324, "gnu": 324, "public": [324, 325, 336], "29": 324, "june": 324, "2007": 324, "copyright": 324, "free": 324, "foundat": 324, "inc": 324, "fsf": 324, "everyon": 324, "permit": 324, "distribut": [324, 325], "verbatim": 324, "document": [324, 333], "preambl": 324, "copyleft": 324, "kind": 324, "practic": 324, "awai": 324, "freedom": 324, "share": 324, "contrast": 324, "guarante": 324, "remain": [324, 338], "its": 324, "releas": 324, "wai": [324, 325, 337], "too": [324, 340], "speak": 324, "price": 324, "charg": 324, "wish": [324, 330], "receiv": 324, "piec": 324, "know": 324, "thing": 324, "protect": 324, "prevent": [324, 340], "deni": 324, "surrend": 324, "certain": [324, 329, 330, 335], "respons": 324, "respect": [324, 329, 330, 335, 336, 337, 342], "grati": 324, "fee": 324, "pass": 324, "recipi": 324, "And": 324, "term": 324, "gpl": 324, "assert": 324, "offer": 324, "give": [324, 335, 338], "legal": 324, "permiss": [324, 340], "clearli": 324, "warranti": 324, "sake": 324, "mark": 324, "erron": [324, 340], "previou": [324, 336], "devic": 324, "access": [324, 329, 336, 338], "although": 324, "manufactur": 324, "fundament": 324, "incompat": 324, "aim": 324, "systemat": 324, "pattern": 324, "abus": 324, "product": 324, "individu": [324, 330], "unaccept": 324, "prohibit": 324, "those": 324, "aris": [324, 340], "domain": 324, "stand": 324, "readi": 324, "provis": 324, "futur": [324, 330], "threaten": 324, "constantli": 324, "patent": 324, "restrict": [324, 336], "purpos": [324, 342], "avoid": 324, "danger": 324, "could": [324, 330, 335, 337], "proprietari": 324, "assur": 324, "cannot": 324, "condit": 324, "AND": 324, "definit": [324, 336], "law": 324, "semiconductor": 324, "license": 324, "address": 324, "organ": 324, "adapt": 324, "fashion": 324, "earlier": 324, "either": [324, 335], "unmodifi": 324, "propag": 324, "anyth": 324, "without": [324, 333, 336], "directli": 324, "secondarili": 324, "liabl": 324, "infring": 324, "applic": 324, "privat": 324, "countri": 324, "activ": [324, 336], "convei": 324, "parti": 324, "mere": 324, "network": 324, "transfer": 324, "displai": [324, 332], "appropri": 324, "notic": 324, "extent": 324, "conveni": 324, "promin": 324, "tell": 324, "menu": 324, "meet": 324, "criterion": 324, "prefer": [324, 325], "standard": [324, 336], "offici": 324, "recogn": 324, "bodi": 324, "languag": 324, "wide": 324, "among": 324, "serv": 324, "context": 324, "essenti": 324, "kernel": 324, "compil": 324, "produc": [324, 335, 342], "interpret": 324, "howev": [324, 330, 336], "tool": 324, "associ": 324, "dynam": 324, "link": [324, 333], "subprogram": 324, "intim": 324, "flow": 324, "regener": 324, "basic": [324, 327, 328, 330, 333], "grant": 324, "irrevoc": 324, "met": 324, "affirm": 324, "unlimit": 324, "content": 324, "constitut": 324, "acknowledg": [324, 325], "fair": 324, "long": [324, 330, 336], "otherwis": 324, "forc": 324, "sole": 324, "exclus": 324, "facil": 324, "compli": 324, "thu": [324, 329], "behalf": 324, "outsid": 324, "relationship": 324, "circumst": 324, "sublicens": 324, "unnecessari": 324, "anti": 324, "circumvent": 324, "shall": 324, "deem": 324, "technolog": 324, "measur": 324, "fulfil": 324, "oblig": 324, "wipo": 324, "treati": 324, "adopt": 324, "decemb": 324, "1996": 324, "waiv": 324, "power": 324, "forbid": 324, "exercis": 324, "disclaim": 324, "intent": 324, "enforc": 324, "against": 324, "medium": 324, "conspicu": 324, "publish": [324, 336], "intact": 324, "absenc": 324, "date": [324, 326, 336], "entir": 324, "anyon": 324, "possess": 324, "regardless": 324, "invalid": [324, 335], "natur": 324, "storag": 324, "aggreg": 324, "beyond": [324, 330, 333], "inclus": 324, "caus": 324, "machin": 324, "readabl": 324, "embodi": 324, "accompani": 324, "durabl": 324, "customarili": 324, "interchang": 324, "valid": 324, "least": 324, "three": [324, 329, 330, 331, 336, 337], "spare": 324, "model": 324, "reason": [324, 330], "cost": 324, "server": 324, "altern": 324, "occasion": 324, "noncommerci": 324, "subsect": 324, "6b": 324, "maintain": 324, "clear": [324, 332], "sai": 324, "host": 324, "satisfi": 324, "peer": 324, "transmiss": 324, "6d": 324, "portion": 324, "whose": 324, "exclud": 324, "consum": 324, "tangibl": 324, "person": 324, "famili": 324, "household": 324, "sold": 324, "incorpor": [324, 330], "dwell": 324, "doubt": 324, "resolv": [324, 329, 330, 333], "favor": 324, "coverag": 324, "common": 324, "statu": 324, "actual": 324, "commerci": 324, "industri": 324, "unless": 324, "signific": 324, "procedur": 324, "suffic": 324, "continu": [324, 336], "interf": 324, "been": [324, 336], "transact": 324, "perpetu": 324, "character": 324, "neither": 324, "nor": 324, "abil": 324, "rom": 324, "servic": 324, "itself": [324, 325], "advers": 324, "affect": 324, "violat": 324, "rule": 324, "protocol": 324, "across": [324, 338], "publicli": 324, "password": 324, "unpack": 324, "supplement": 324, "though": 324, "govern": 324, "remov": 324, "own": 324, "notwithstand": 324, "holder": 324, "liabil": 324, "preserv": 324, "misrepresent": 324, "licensor": 324, "declin": 324, "trademark": 324, "trade": 324, "indemnif": 324, "contractu": 324, "assumpt": 324, "impos": 324, "relicens": 324, "surviv": 324, "statement": 324, "termin": [324, 326], "expressli": 324, "attempt": 324, "void": 324, "paragraph": 324, "ceas": 324, "reinstat": 324, "provision": 324, "until": 324, "perman": 324, "fail": 324, "notifi": 324, "60": [324, 335, 337], "dai": 324, "cessat": 324, "moreov": 324, "cure": 324, "receipt": 324, "qualifi": 324, "Not": 324, "ancillari": 324, "consequ": 324, "likewis": 324, "action": [324, 336], "downstream": 324, "subject": 324, "complianc": 324, "entiti": 324, "asset": 324, "subdivid": 324, "whatev": 324, "predecessor": 324, "interest": [324, 336], "had": [324, 330], "plu": 324, "royalti": 324, "litig": 324, "claim": 324, "counterclaim": 324, "lawsuit": 324, "alleg": 324, "sell": 324, "sale": 324, "acquir": 324, "hereaft": 324, "manner": [324, 330], "worldwid": 324, "agreement": 324, "commit": 324, "denomin": 324, "coven": 324, "sue": 324, "knowingli": 324, "reli": 324, "readili": 324, "arrang": [324, 329, 330], "depriv": 324, "yourself": 324, "benefit": 324, "knowledg": 324, "identifi": [324, 329, 330, 335], "believ": 324, "pursuant": 324, "singl": [324, 331], "procur": 324, "convey": 324, "discriminatori": 324, "scope": 324, "busi": 324, "payment": 324, "primarili": 324, "enter": 324, "28": 324, "march": 324, "constru": 324, "impli": 324, "defens": 324, "court": 324, "contradict": 324, "excus": 324, "simultan": 324, "pertin": 324, "agre": 324, "collect": [324, 336], "whom": 324, "refrain": 324, "affero": 324, "concern": [324, 336], "Such": 324, "spirit": 324, "distinguish": 324, "later": 324, "ever": 324, "proxi": 324, "THERE": 324, "NO": 324, "FOR": 324, "THE": 324, "TO": 324, "BY": 324, "IN": 324, "OR": 324, "AS": 324, "OF": 324, "BUT": 324, "NOT": 324, "merchant": 324, "fit": 324, "risk": 324, "qualiti": 324, "WITH": 324, "prove": 324, "defect": 324, "necessari": [324, 330, 338], "event": 324, "WILL": 324, "BE": 324, "damag": 324, "incident": 324, "consequenti": 324, "inabl": 324, "loss": 324, "BEING": 324, "sustain": 324, "failur": 324, "IF": 324, "SUCH": 324, "advis": 324, "review": 324, "close": [324, 336], "approxim": 324, "absolut": 324, "waiver": 324, "civil": 324, "greatest": 324, "best": 324, "achiev": [324, 340], "redistribut": 324, "safest": 324, "pointer": 324, "brief": 324, "idea": 324, "hope": 324, "mail": 324, "short": 324, "welcom": 324, "hypothet": 324, "Of": 324, "cours": 324, "gui": 324, "box": 324, "employ": 324, "programm": 324, "school": 324, "sign": [324, 340], "subroutin": 324, "lesser": 324, "philosophi": 324, "why": 324, "lgpl": 324, "herein": 324, "subclass": 324, "minim": 324, "isol": 324, "reproduc": 324, "bound": 324, "suppli": [324, 330], "good": [324, 336], "faith": 324, "still": 324, "meaning": [324, 332], "header": 324, "choic": [324, 333, 335], "numer": 324, "layout": 324, "accessor": 324, "small": [324, 336], "macro": 324, "inlin": 324, "templat": 324, "ten": 324, "fewer": 324, "taken": 324, "engin": 324, "debug": 324, "dure": [324, 340], "recombin": 324, "relink": 324, "mechan": 324, "properli": 324, "compat": 324, "4d0": 324, "4d1": 324, "uncombin": 324, "prerequisit": 325, "yet": 325, "simplest": 325, "recommend": [325, 329, 330, 340], "conda": 325, "forg": [325, 326], "pip": 325, "via": 325, "pypi": 325, "instruct": [325, 336], "author": [325, 336], "citat": [325, 336], "elsevi": 325, "ase": 326, "romerogroup": 326, "onc": 326, "robust": [327, 328], "manag": [327, 328], "kohn": [327, 328, 338], "sham": [327, 328, 338], "That": [327, 328], "multitud": [327, 328], "partial": [327, 328], "convent": [329, 330, 333], "s_x": [329, 330, 335, 337], "s_y": [329, 330, 335], "st": [329, 330, 335, 336], "perpendicular": [329, 330, 335], "k_x": [329, 330, 335], "k_y": [329, 330, 335], "rashba": [329, 330, 335], "seismic": [329, 330], "onto": [329, 330, 338], "ion": [329, 330, 337, 338], "five": [329, 330], "_3": [329, 330, 333], "correl": [329, 330], "strongli": [329, 330], "jm": 329, "y_": [329, 330, 338], "logic": [329, 330], "probe": [329, 330], "queri": [329, 330], "portrai": 330, "fine": [330, 335, 336], "let": 330, "usag": [330, 331, 332, 333, 335, 337, 340, 342], "39": 330, "79": 330, "119": 330, "159": 330, "filter": [330, 338], "comparison": [330, 332], "syntax": 330, "bands_up": 330, "block": [330, 338], "meant": 330, "suit": 330, "four": 330, "set_titl": 330, "convers": 330, "199": [330, 342], "239": 330, "279": 330, "319": 330, "scriptbandsplot": 330, "larg": [331, 337], "hexagon": [331, 342], "procar_g": 331, "procar_k": 331, "procar_m": 331, "seper": 331, "scriptcat": 331, "acheiv": 332, "procar1": 332, "kpointsfil": 332, "kpoints1": 332, "outcar1": 332, "srvo_3": 332, "veri": [333, 337], "invlov": 333, "exmpla": 333, "api": 333, "match": [333, 336], "aregumnet": 333, "button": 333, "did": 333, "defalut": 333, "switch": [333, 336], "back": 333, "dos_plain_v": 333, "illustr": [333, 338], "familiar": 333, "lawngreen": 333, "orang": 333, "royalblu": 333, "stach": 333, "anoth": [333, 336], "variat": 333, "dresselhau": 335, "analyz": 335, "topologi": 335, "examin": 335, "lifshitz": 335, "transit": 335, "e_": 335, "noarrow": 335, "heat": 335, "usual": 335, "fault": 335, "solut": 335, "90": 335, "degre": 335, "mostli": 335, "220": 335, "Be": 335, "care": 335, "exportplt": [335, 342], "scriptfermi2d": 335, "k_z_plane": 335, "rot_symm": 335, "add_axes_label": 335, "k_z": 335, "invers": 335, "rbg": 335, "phonon": 336, "divid": 336, "sub": 336, "monkhorst": 336, "pack": 336, "isym": 336, "focus": 336, "polygon": 336, "smooth": 336, "known": 336, "cube": 336, "999999": 336, "000001": 336, "triangl": 336, "assign": 336, "aspect": 336, "handel": 336, "isosurfcac": 336, "fermisurfcae3d": 336, "eigen": 336, "bottom": 336, "amaz": 336, "pyvista_doc": 336, "trimesh_doc": 336, "trimesh_cit": 336, "dawson": 336, "haggerti": 336, "trimsh": 336, "sullivan2019pyvista": 336, "21105": 336, "joss": 336, "01450": 336, "month": 336, "37": 336, "1450": 336, "bane": 336, "sullivan": 336, "alexand": 336, "kaszynski": 336, "analysi": [336, 337], "streamlin": 336, "toolkit": 336, "vtk": 336, "mgb": 336, "srfeo": 336, "won": 336, "nonpol": 336, "scale": 336, "try": 336, "transpar": 336, "nprocess": 336, "scheme": [336, 342], "p_x": [336, 337], "p_y": 336, "p_z": 336, "spinor": [336, 338], "ON": 336, "opac": 336, "sampl": 336, "enough": 336, "evalu": 336, "kx1": 336, "ky1": 336, "kz1": 336, "color1": 336, "kx2": 336, "ky2": 336, "kz2": 336, "color2": 336, "kx3": 336, "ky3": 336, "kz3": 336, "color3": 336, "request": 336, "linux": 336, "mac": 336, "focu": 336, "zoom": 336, "isometr": 336, "wirefram": 336, "reset": 336, "middl": 336, "pan": 336, "scene": 336, "left": [336, 338], "cmd": 336, "ctrl": 336, "mous": 336, "wheel": 336, "ctl": 336, "screenhsot": 336, "backgroundplott": 336, "pick": 336, "decreas": 336, "scriptfermi3d": 336, "simpler": 337, "subset": 337, "heterostructur": 337, "enorm": 337, "consider": 337, "faster": 337, "rel": 337, "smaller": 337, "70": 337, "ignor": 337, "far": 337, "band50": 337, "low": 337, "column": [337, 338], "real": 337, "filtered_sp": 337, "especi": 337, "hybrid": 337, "filtered_kpoint": 337, "filtered_spin": 337, "filter_atom": 337, "atom_typ": 337, "scriptfilt": 337, "orbital_nam": 337, "human_atom": 337, "re": 337, "overview": 338, "guidanc": 338, "conduct": 338, "prep": 338, "commonli": 338, "decompos": 338, "224": 338, "12500000": 338, "52": 338, "65660295": 338, "occ": 338, "052": 338, "comment": 338, "nion": 338, "report": 338, "repeat": 338, "spheric": 338, "sphere": 338, "radiu": 338, "alpha": 338, "phi_": 338, "nk": 338, "frac": 338, "sum_": 338, "mu": 338, "nu": 338, "sigma_": 338, "psi_": 338, "sigma": 338, "pauli": 338, "bmatrix": 338, "translat": 338, "ill": 340, "lack": 340, "neg": 340, "5000000": 340, "scriptrepair": 340, "often": 342, "primit": 342, "becom": 342, "quit": 342, "sophist": 342, "fold": 342, "difficult": 342, "fat": 342, "proport": 342, "shrink": 342, "2x2x2": 342, "distanc": 342, "doubl": 342, "fname": 342, "diag": 342, "shift_efermi": 342, "54": 342, "86": 342, "110": 342, "147": 342, "165": 342, "print_kpt": 342, "show_band": 342, "savetab": 342, "csv": 342, "unfolded_band": 342, "scriptunfold": 342, "elkin": 342, "unfold_mod": 342, "unfold_mask": 342, "unfold_result": 342, "unfol": 342}, "objects": {"pyprocar.core": [[0, 0, 1, "", "BrillouinZone"], [3, 0, 1, "", "DensityOfStates"], [12, 0, 1, "", "ElectronicBandStructure"], [28, 0, 1, "", "FermiSurface"], [35, 0, 1, "", "FermiSurface3D"], [48, 0, 1, "", "Isosurface"], [55, 0, 1, "", "KPath"], [64, 0, 1, "", "Structure"], [90, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[4, 1, 1, "", "__init__"], [5, 1, 1, "", "coupled_to_uncoupled_basis"], [6, 1, 1, "", "dos_sum"], [7, 1, 1, "", "get_current_basis"], [8, 2, 1, "", "is_non_collinear"], [9, 2, 1, "", "n_dos"], [10, 2, 1, "", "n_energies"], [11, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[13, 1, 1, "", "__init__"], [14, 1, 1, "", "ebs_sum"], [15, 1, 1, "", "ibz2fbz"], [16, 2, 1, "", "is_non_collinear"], [17, 2, 1, "", "kpoints_cartesian"], [18, 2, 1, "", "kpoints_reduced"], [19, 2, 1, "", "natoms"], [20, 2, 1, "", "nbands"], [21, 2, 1, "", "nkpoints"], [22, 2, 1, "", "norbitals"], [23, 2, 1, "", "nprincipals"], [24, 2, 1, "", "nspins"], [25, 1, 1, "", "plot_kpoints"], [26, 1, 1, "", "unfold"], [27, 1, 1, "", "update_weights"]], "pyprocar.core.FermiSurface": [[29, 1, 1, "", "__init__"], [30, 1, 1, "", "add_axes_labels"], [31, 1, 1, "", "add_legend"], [32, 1, 1, "", "find_energy"], [33, 1, 1, "", "plot"], [34, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[36, 1, 1, "", "__init__"], [37, 1, 1, "", "calculate_effective_mass"], [38, 1, 1, "", "calculate_fermi_speed"], [39, 1, 1, "", "calculate_fermi_velocity"], [40, 1, 1, "", "calculate_first_and_second_derivative_energy"], [41, 1, 1, "", "calculate_first_and_second_derivative_energy_band"], [42, 1, 1, "", "create_spin_texture"], [43, 1, 1, "", "create_vector_texture"], [44, 1, 1, "", "extend_surface"], [45, 1, 1, "", "project_atomic_projections"], [46, 1, 1, "", "project_color"], [47, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[49, 1, 1, "", "__init__"], [50, 2, 1, "", "dxyz"], [51, 2, 1, "", "nX"], [52, 2, 1, "", "nY"], [53, 2, 1, "", "nZ"], [54, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[56, 1, 1, "", "__init__"], [57, 1, 1, "", "get_kpoints_transformed"], [58, 1, 1, "", "get_optimized_kpoints_transformed"], [59, 2, 1, "", "kdistances"], [60, 2, 1, "", "nsegments"], [61, 2, 1, "", "tick_names"], [62, 2, 1, "", "tick_positions"], [63, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[65, 1, 1, "", "__init__"], [66, 2, 1, "", "a"], [67, 2, 1, "", "alpha"], [68, 2, 1, "", "atomic_numbers"], [69, 2, 1, "", "b"], [70, 2, 1, "", "beta"], [71, 2, 1, "", "c"], [72, 2, 1, "", "cell_convex_hull"], [73, 2, 1, "", "density"], [74, 2, 1, "", "gamma"], [75, 1, 1, "", "get_space_group_international"], [76, 1, 1, "", "get_space_group_number"], [77, 1, 1, "", "get_spglib_symmetry_dataset"], [78, 1, 1, "", "get_wyckoff_positions"], [79, 1, 1, "", "is_point_inside"], [80, 2, 1, "", "lattice_corners"], [81, 2, 1, "", "masses"], [82, 2, 1, "", "natoms"], [83, 2, 1, "", "nspecies"], [84, 1, 1, "", "plot_cell_convex_hull"], [85, 2, 1, "", "reciprocal_lattice"], [86, 2, 1, "", "species"], [87, 1, 1, "", "supercell"], [88, 1, 1, "", "transform"], [89, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[91, 1, 1, "", "__init__"], [92, 2, 1, "", "centers"], [93, 1, 1, "", "export"], [94, 2, 1, "", "faces_array"], [95, 1, 1, "", "set_color_with_cmap"], [96, 1, 1, "", "set_scalars"], [97, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[109, 0, 1, "", "Kpoints"], [111, 0, 1, "", "Output"], [113, 0, 1, "", "Procar"]], "pyprocar.io.abinit.Kpoints": [[110, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[112, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Procar": [[114, 1, 1, "", "__init__"], [115, 2, 1, "", "kpoints_cartesian"], [116, 2, 1, "", "kpoints_reduced"], [117, 1, 1, "", "repair"], [118, 1, 1, "", "symmetrize"], [113, 3, 1, "", "variables"]], "pyprocar.io.bxsf": [[119, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[120, 1, 1, "", "__init__"], [121, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[122, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[123, 1, 1, "", "__init__"], [124, 2, 1, "", "dos"], [125, 1, 1, "", "dos_parametric"], [126, 2, 1, "", "dos_projected"], [127, 2, 1, "", "dos_to_dict"], [128, 2, 1, "", "dos_total"], [129, 2, 1, "", "final_structure"], [130, 2, 1, "", "initial_structure"], [131, 1, 1, "", "parse_structure"], [132, 2, 1, "", "species"], [133, 2, 1, "", "structure"], [134, 2, 1, "", "structures"]], "pyprocar.io.qe": [[135, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[136, 1, 1, "", "__init__"], [137, 2, 1, "", "final_structure"], [138, 1, 1, "", "getKpointLabels"], [139, 2, 1, "", "initial_structure"], [140, 1, 1, "", "kpoints_cart"], [141, 2, 1, "", "species"], [142, 2, 1, "", "structure"], [143, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[144, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[145, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[146, 0, 1, "", "Kpoints"], [148, 0, 1, "", "Outcar"], [153, 0, 1, "", "Poscar"], [155, 0, 1, "", "Procar"], [161, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[147, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[149, 1, 1, "", "__init__"], [150, 2, 1, "", "efermi"], [151, 2, 1, "", "reciprocal_lattice"], [152, 2, 1, "", "rotations"]], "pyprocar.io.vasp.Poscar": [[154, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[156, 1, 1, "", "__init__"], [157, 2, 1, "", "kpoints_cartesian"], [158, 2, 1, "", "kpoints_reduced"], [159, 1, 1, "", "repair"], [160, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[162, 1, 1, "", "__init__"], [163, 2, 1, "", "bands"], [164, 2, 1, "", "bands_projected"], [165, 1, 1, "", "conv"], [166, 2, 1, "", "convergence"], [167, 2, 1, "", "convergence_electronic"], [168, 2, 1, "", "convergence_ionic"], [169, 2, 1, "", "dos"], [170, 2, 1, "", "dos_projected"], [171, 2, 1, "", "dos_to_dict"], [172, 2, 1, "", "dos_total"], [173, 2, 1, "", "energies"], [174, 2, 1, "", "energy"], [175, 2, 1, "", "fermi"], [176, 2, 1, "", "final_structure"], [177, 2, 1, "", "forces"], [178, 1, 1, "", "get_general"], [179, 1, 1, "", "get_params"], [180, 1, 1, "", "get_scstep"], [181, 1, 1, "", "get_set"], [182, 1, 1, "", "get_structure"], [183, 1, 1, "", "get_varray"], [184, 2, 1, "", "incar"], [185, 2, 1, "", "initial_structure"], [186, 2, 1, "", "is_finished"], [187, 2, 1, "", "iteration_data"], [188, 2, 1, "", "kpoints"], [189, 2, 1, "", "kpoints_list"], [190, 2, 1, "", "last_energy"], [191, 1, 1, "", "parse_vasprun"], [192, 2, 1, "", "potcar_info"], [193, 1, 1, "", "read"], [194, 2, 1, "", "species"], [195, 2, 1, "", "structure"], [196, 2, 1, "", "structures"], [197, 1, 1, "", "text_to_bool"], [198, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[206, 0, 1, "", "DOSPlot"], [225, 0, 1, "", "EBSPlot"], [243, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[207, 1, 1, "", "__init__"], [208, 1, 1, "", "draw_fermi"], [209, 1, 1, "", "grid"], [210, 1, 1, "", "legend"], [211, 1, 1, "", "plot_dos"], [212, 1, 1, "", "plot_parametric"], [213, 1, 1, "", "plot_parametric_line"], [214, 1, 1, "", "plot_stack"], [215, 1, 1, "", "plot_stack_orbitals"], [216, 1, 1, "", "plot_stack_species"], [217, 1, 1, "", "save"], [218, 1, 1, "", "set_xlabel"], [219, 1, 1, "", "set_xlim"], [220, 1, 1, "", "set_xticks"], [221, 1, 1, "", "set_ylabel"], [222, 1, 1, "", "set_ylim"], [223, 1, 1, "", "set_yticks"], [224, 1, 1, "", "show"]], "pyprocar.plotter.EBSPlot": [[226, 1, 1, "", "__init__"], [227, 1, 1, "", "draw_fermi"], [228, 1, 1, "", "grid"], [229, 1, 1, "", "legend"], [230, 1, 1, "", "plot_bands"], [231, 1, 1, "", "plot_parameteric"], [232, 1, 1, "", "plot_parameteric_overlay"], [233, 1, 1, "", "plot_scatter"], [234, 1, 1, "", "save"], [235, 1, 1, "", "set_title"], [236, 1, 1, "", "set_xlabel"], [237, 1, 1, "", "set_xlim"], [238, 1, 1, "", "set_xticks"], [239, 1, 1, "", "set_ylabel"], [240, 1, 1, "", "set_ylim"], [241, 1, 1, "", "set_yticks"], [242, 1, 1, "", "show"]], "pyprocar.plotter.ProcarPlot": [[244, 1, 1, "", "__init__"], [245, 1, 1, "", "atomicPlot"], [246, 1, 1, "", "parametricPlot"], [247, 1, 1, "", "plotBands"], [248, 1, 1, "", "scatterPlot"]], "pyprocar": [[333, 4, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[253, 0, 1, "", "FermiHandler"], [260, 5, 1, "", "bandgap"], [261, 5, 1, "", "bandsdosplot"], [262, 5, 1, "", "bandsplot"], [263, 5, 1, "", "bandsplot_2d"], [264, 5, 1, "", "cat"], [265, 5, 1, "", "dosplot"], [266, 5, 1, "", "fermi3D"], [267, 5, 1, "", "generate2dkmesh"], [268, 5, 1, "", "kpath"], [269, 5, 1, "", "repair"], [330, 4, 0, "-", "scriptBandsplot"], [331, 4, 0, "-", "scriptCat"], [335, 4, 0, "-", "scriptFermi2D"], [336, 4, 0, "-", "scriptFermi3D"], [337, 4, 0, "-", "scriptFilter"], [340, 4, 0, "-", "scriptRepair"], [342, 4, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[254, 1, 1, "", "__init__"], [255, 1, 1, "", "create_isovalue_gif"], [256, 1, 1, "", "plot_fermi_cross_section"], [257, 1, 1, "", "plot_fermi_isoslider"], [258, 1, 1, "", "plot_fermi_surface"], [259, 1, 1, "", "plot_fermi_surface_area_vs_isovalue"]], "pyprocar.scripts.scriptBandsplot": [[330, 5, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[331, 5, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[335, 5, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[336, 5, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[337, 5, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[340, 5, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[342, 5, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:module", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "module", "Python module"], "5": ["py", "function", "Python function"]}, "titleterms": {"pyprocar": [0, 3, 12, 28, 35, 48, 55, 64, 90, 109, 111, 113, 119, 122, 135, 144, 146, 148, 153, 155, 161, 206, 225, 243, 253, 324, 325, 327, 328], "core": [0, 3, 12, 28, 35, 48, 55, 64, 90, 103], "brillouinzon": [0, 98], "__init__": [1, 4, 13, 29, 36, 49, 56, 65, 91, 110, 112, 114, 120, 123, 136, 145, 147, 149, 154, 156, 162, 207, 226, 244, 254], "wigner_seitz": 2, "densityofst": [3, 99], "coupled_to_uncoupled_basi": 5, "dos_sum": 6, "get_current_basi": 7, "is_non_collinear": [8, 16], "n_do": 9, "n_energi": 10, "n_spin": 11, "electronicbandstructur": [12, 100, 334], "ebs_sum": 14, "ibz2fbz": 15, "kpoints_cartesian": [17, 115, 157], "kpoints_reduc": [18, 116, 158], "natom": [19, 82], "nband": 20, "nkpoint": 21, "norbit": 22, "nprincip": 23, "nspin": 24, "plot_kpoint": 25, "unfold": [26, 342], "update_weight": 27, "fermisurfac": [28, 101], "add_axes_label": 30, "add_legend": 31, "find_energi": 32, "plot": [33, 291, 293, 294, 295, 298, 299, 300, 301, 303, 304, 307, 308, 311, 312, 313, 314, 315, 316, 319, 321, 323, 330, 335, 342], "spin_textur": [34, 316], "fermisurface3d": [35, 102], "calculate_effective_mass": 37, "calculate_fermi_spe": 38, "calculate_fermi_veloc": 39, "calculate_first_and_second_derivative_energi": 40, "calculate_first_and_second_derivative_energy_band": 41, "create_spin_textur": 42, "create_vector_textur": 43, "extend_surfac": 44, "project_atomic_project": 45, "project_color": 46, "project_spin_texture_atomic_project": 47, "isosurfac": [48, 104], "dxyz": 50, "nx": 51, "ny": 52, "nz": 53, "surface_boundari": 54, "kpath": [55, 105, 268, 281], "get_kpoints_transform": 57, "get_optimized_kpoints_transform": 58, "kdistanc": 59, "nsegment": 60, "tick_nam": 61, "tick_posit": 62, "write_to_fil": 63, "structur": [64, 106, 133, 134, 142, 143, 195, 196, 287, 289, 290, 291, 292, 293, 294, 295, 323, 330, 341], "alpha": 67, "atomic_numb": 68, "b": 69, "beta": 70, "c": 71, "cell_convex_hul": 72, "densiti": [73, 287, 289, 297, 298, 301, 323, 333], "gamma": 74, "get_space_group_intern": 75, "get_space_group_numb": 76, "get_spglib_symmetry_dataset": 77, "get_wyckoff_posit": 78, "is_point_insid": 79, "lattice_corn": 80, "mass": 81, "nspeci": 83, "plot_cell_convex_hul": 84, "reciprocal_lattic": [85, 151], "speci": [86, 132, 141, 194], "supercel": 87, "transform": 88, "volum": 89, "surfac": [90, 107, 336], "center": 92, "export": [93, 330, 335, 342], "faces_arrai": 94, "set_color_with_cmap": 95, "set_scalar": 96, "set_vector": 97, "api": [103, 108, 201, 251, 280], "refer": 108, "io": [109, 111, 113, 119, 122, 135, 144, 146, 148, 153, 155, 161, 201], "abinit": [109, 111, 113, 283], "kpoint": [109, 146, 188, 335], "output": 111, "procar": [113, 155, 336], "repair": [117, 159, 269, 340], "symmetr": [118, 160], "bxsf": 119, "bxsfparser": [119, 200], "parse_bxsf": 121, "lobster": [122, 286], "lobsterpars": [122, 202], "do": [124, 169, 299, 300, 303, 323], "dos_parametr": 125, "dos_project": [126, 170], "dos_to_dict": [127, 171], "dos_tot": [128, 172], "final_structur": [129, 137, 176], "initial_structur": [130, 139, 185], "parse_structur": 131, "qe": 135, "qepars": [135, 203], "getkpointlabel": 138, "kpoints_cart": 140, "siesta": [144, 288], "siestapars": [144, 204], "vasp": [146, 148, 153, 155, 161, 289, 294, 300], "outcar": 148, "efermi": 150, "rotat": [152, 335], "poscar": 153, "vaspxml": 161, "band": [163, 287, 289, 290, 291, 292, 293, 294, 295, 303, 307, 308, 323, 330, 332, 342], "bands_project": 164, "conv": 165, "converg": 166, "convergence_electron": 167, "convergence_ion": 168, "energi": [173, 174], "fermi": [175, 287, 289, 306, 310, 323, 336], "forc": 177, "get_gener": 178, "get_param": 179, "get_scstep": 180, "get_set": 181, "get_structur": 182, "get_varrai": 183, "incar": 184, "is_finish": 186, "iteration_data": 187, "kpoints_list": 189, "last_energi": 190, "parse_vasprun": 191, "potcar_info": 192, "read": 193, "text_to_bool": 197, "vasp_paramet": 198, "abinitpars": 199, "vasppars": 205, "plotter": [206, 225, 243, 251], "dosplot": [206, 250, 265, 275], "draw_fermi": [208, 227], "grid": [209, 228], "legend": [210, 229], "plot_do": 211, "plot_parametr": 212, "plot_parametric_lin": 213, "plot_stack": 214, "plot_stack_orbit": 215, "plot_stack_speci": 216, "save": [217, 234, 311], "set_xlabel": [218, 236], "set_xlim": [219, 237], "set_xtick": [220, 238], "set_ylabel": [221, 239], "set_ylim": [222, 240], "set_ytick": [223, 241], "show": [224, 242], "ebsplot": [225, 249], "plot_band": 230, "plot_parameter": 231, "plot_parameteric_overlai": 232, "plot_scatt": 233, "set_titl": 235, "procarplot": [243, 252], "atomicplot": 245, "parametricplot": 246, "plotband": 247, "scatterplot": 248, "script": [253, 280], "fermihandl": [253, 276], "create_isovalue_gif": 255, "plot_fermi_cross_sect": 256, "plot_fermi_isoslid": 257, "plot_fermi_surfac": 258, "plot_fermi_surface_area_vs_isovalu": 259, "bandgap": [260, 270, 320], "bandsdosplot": [261, 271, 304], "bandsplot": [262, 272], "bandsplot_2d": [263, 273, 278], "cat": [264, 274], "fermi3d": [266, 277, 311, 312, 313, 314, 315, 316], "generate2dkmesh": [267, 279], "reapir": 282, "perper": [283, 284, 286, 288], "elk": 284, "dft": 285, "prep": 285, "quantum": [287, 293, 299], "espresso": [287, 293, 299], "prepar": [287, 289], "calcul": [287, 289, 331], "state": [287, 289, 297, 298, 301, 323, 333], "k": [287, 289, 321, 330, 337, 339], "point": [287, 289, 330, 337], "format": [287, 289], "magnet": [287, 289], "plain": [291, 293, 294, 295, 298, 301, 304, 307, 312, 313, 314, 315, 330, 333, 336], "mode": [291, 293, 294, 295, 298, 299, 300, 301, 304, 307, 312, 313, 314, 315, 316, 333], "parametr": [291, 293, 294, 295, 298, 299, 300, 301, 307, 314, 315, 333], "parametric_linemod": 291, "scatter": [291, 295], "overlay_speci": 291, "overlay_orbti": 291, "overlai": [291, 298], "orbit": [291, 329, 330, 337], "name": 291, "compar": [292, 332], "non": [293, 294, 299, 300], "colinear": [293, 294, 299, 300], "spin": [295, 301, 308, 315, 316, 329, 330, 335, 337], "polar": [295, 301, 315], "comput": [296, 302, 305, 309, 317, 322], "time": [296, 302, 305, 309, 317, 322], "parametric_lin": [298, 301, 333], "stack_speci": [298, 301, 333], "stack_orbti": [298, 301], "stack": [301, 333], "2d": [306, 323, 335], "fermi2d": [307, 308], "plain_band": 307, "select": [307, 308, 337], "indic": [307, 308, 328], "noncolinear": 308, "textur": [308, 316, 335], "project": [308, 329, 330], "singl": 308, "color": [308, 336], "3d": [310, 323, 336], "cross_sect": 311, "cross": 311, "section": 311, "slice": 311, "isoslid": 312, "isovalue_gif": 313, "other": [318, 323], "exampl": [319, 320, 321, 323, 336], "kmesh_gener": 319, "kmesh": 319, "find": 320, "kpath_gener": 321, "path": [321, 330, 339], "author": 324, "citat": 324, "cite": [324, 325], "contributor": 324, "develop": 324, "licens": 324, "get": 325, "start": 325, "instal": [325, 326], "paper": 325, "support": 325, "pip": 326, "conda": 326, "clone": 326, "through": 326, "github": 326, "after": 326, "why": 327, "tabl": 328, "atom": [329, 330, 337], "1": [329, 330, 333, 336], "2": [329, 330, 333, 336], "3": [329, 330, 333, 336], "4": [330, 333], "matplotlib": [330, 335, 342], "pyplot": [330, 335, 342], "object": [330, 335, 342], "convert": 330, "from": [330, 336], "reduc": 330, "cartesian": 330, "coordin": 330, "discontinu": 330, "concaten": 331, "multipl": 331, "5": 333, "6": 333, "stack_orbit": 333, "translat": 335, "mesh": 335, "base": 336, "properti": 336, "obtain": 336, "an": 336, "extern": 336, "file": 336, "keyboard": 336, "shortcut": 336, "filter": 337, "data": 337, "To": 337, "user": 338, "guid": 338, "further": 338, "detail": 338}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pyprocar.core.BrillouinZone": [[0, "pyprocar-core-brillouinzone"]], "__init__": [[1, "init"], [4, "init"], [13, "init"], [29, "init"], [36, "init"], [49, "init"], [56, "init"], [65, "init"], [91, "init"], [110, "init"], [112, "init"], [114, "init"], [120, "init"], [123, "init"], [136, "init"], [145, "init"], [147, "init"], [149, "init"], [154, "init"], [156, "init"], [162, "init"], [207, "init"], [226, "init"], [244, "init"], [254, "init"]], "wigner_seitz": [[2, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[3, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[5, "coupled-to-uncoupled-basis"]], "dos_sum": [[6, "dos-sum"]], "get_current_basis": [[7, "get-current-basis"]], "is_non_collinear": [[8, "is-non-collinear"], [16, "is-non-collinear"]], "n_dos": [[9, "n-dos"]], "n_energies": [[10, "n-energies"]], "n_spins": [[11, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[12, "pyprocar-core-electronicbandstructure"]], "ebs_sum": [[14, "ebs-sum"]], "ibz2fbz": [[15, "ibz2fbz"]], "kpoints_cartesian": [[17, "kpoints-cartesian"], [115, "kpoints-cartesian"], [157, "kpoints-cartesian"]], "kpoints_reduced": [[18, "kpoints-reduced"], [116, "kpoints-reduced"], [158, "kpoints-reduced"]], "natoms": [[19, "natoms"], [82, "natoms"]], "nbands": [[20, "nbands"]], "nkpoints": [[21, "nkpoints"]], "norbitals": [[22, "norbitals"]], "nprincipals": [[23, "nprincipals"]], "nspins": [[24, "nspins"]], "plot_kpoints": [[25, "plot-kpoints"]], "unfold": [[26, "unfold"]], "update_weights": [[27, "update-weights"]], "pyprocar.core.FermiSurface": [[28, "pyprocar-core-fermisurface"]], "add_axes_labels": [[30, "add-axes-labels"]], "add_legend": [[31, "add-legend"]], "find_energy": [[32, "find-energy"]], "plot": [[33, "plot"]], "spin_texture": [[34, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[35, "pyprocar-core-fermisurface3d"]], "calculate_effective_mass": [[37, "calculate-effective-mass"]], "calculate_fermi_speed": [[38, "calculate-fermi-speed"]], "calculate_fermi_velocity": [[39, "calculate-fermi-velocity"]], "calculate_first_and_second_derivative_energy": [[40, "calculate-first-and-second-derivative-energy"]], "calculate_first_and_second_derivative_energy_band": [[41, "calculate-first-and-second-derivative-energy-band"]], "create_spin_texture": [[42, "create-spin-texture"]], "create_vector_texture": [[43, "create-vector-texture"]], "extend_surface": [[44, "extend-surface"]], "project_atomic_projections": [[45, "project-atomic-projections"]], "project_color": [[46, "project-color"]], "project_spin_texture_atomic_projections": [[47, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[48, "pyprocar-core-isosurface"]], "dxyz": [[50, "dxyz"]], "nX": [[51, "nx"]], "nY": [[52, "ny"]], "nZ": [[53, "nz"]], "surface_boundaries": [[54, "surface-boundaries"]], "pyprocar.core.KPath": [[55, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[57, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[58, "get-optimized-kpoints-transformed"]], "kdistances": [[59, "kdistances"]], "nsegments": [[60, "nsegments"]], "tick_names": [[61, "tick-names"]], "tick_positions": [[62, "tick-positions"]], "write_to_file": [[63, "write-to-file"]], "pyprocar.core.Structure": [[64, "pyprocar-core-structure"]], "a": [[66, "a"]], "alpha": [[67, "alpha"]], "atomic_numbers": [[68, "atomic-numbers"]], "b": [[69, "b"]], "beta": [[70, "beta"]], "c": [[71, "c"]], "cell_convex_hull": [[72, "cell-convex-hull"]], "density": [[73, "density"]], "gamma": [[74, "gamma"]], "get_space_group_international": [[75, "get-space-group-international"]], "get_space_group_number": [[76, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[77, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[78, "get-wyckoff-positions"]], "is_point_inside": [[79, "is-point-inside"]], "lattice_corners": [[80, "lattice-corners"]], "masses": [[81, "masses"]], "nspecies": [[83, "nspecies"]], "plot_cell_convex_hull": [[84, "plot-cell-convex-hull"]], "reciprocal_lattice": [[85, "reciprocal-lattice"], [151, "reciprocal-lattice"]], "species": [[86, "species"], [132, "species"], [141, "species"], [194, "species"]], "supercell": [[87, "supercell"]], "transform": [[88, "transform"]], "volume": [[89, "volume"]], "pyprocar.core.Surface": [[90, "pyprocar-core-surface"]], "centers": [[92, "centers"]], "export": [[93, "export"]], "faces_array": [[94, "faces-array"]], "set_color_with_cmap": [[95, "set-color-with-cmap"]], "set_scalars": [[96, "set-scalars"]], "set_vectors": [[97, "set-vectors"]], "BrillouinZone": [[98, "brillouinzone"]], "DensityOfStates": [[99, "densityofstates"]], "ElectronicBandStructure": [[100, "electronicbandstructure"], [334, "electronicbandstructure"]], "FermiSurface": [[101, "fermisurface"]], "FermiSurface3D": [[102, "fermisurface3d"]], "Core API": [[103, "core-api"]], "Isosurface": [[104, "isosurface"]], "KPath": [[105, "kpath"]], "Structure": [[106, "structure"], [341, "structure"]], "Surface": [[107, "surface"]], "API Reference": [[108, "api-reference"]], "pyprocar.io.abinit.Kpoints": [[109, "pyprocar-io-abinit-kpoints"]], "pyprocar.io.abinit.Output": [[111, "pyprocar-io-abinit-output"]], "pyprocar.io.abinit.Procar": [[113, "pyprocar-io-abinit-procar"]], "repair": [[117, "repair"], [159, "repair"], [269, "repair"]], "symmetrize": [[118, "symmetrize"], [160, "symmetrize"]], "pyprocar.io.bxsf.BxsfParser": [[119, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[121, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[122, "pyprocar-io-lobster-lobsterparser"]], "dos": [[124, "dos"], [169, "dos"]], "dos_parametric": [[125, "dos-parametric"]], "dos_projected": [[126, "dos-projected"], [170, "dos-projected"]], "dos_to_dict": [[127, "dos-to-dict"], [171, "dos-to-dict"]], "dos_total": [[128, "dos-total"], [172, "dos-total"]], "final_structure": [[129, "final-structure"], [137, "final-structure"], [176, "final-structure"]], "initial_structure": [[130, "initial-structure"], [139, "initial-structure"], [185, "initial-structure"]], "parse_structure": [[131, "parse-structure"]], "structure": [[133, "structure"], [142, "structure"], [195, "structure"]], "structures": [[134, "structures"], [143, "structures"], [196, "structures"]], "pyprocar.io.qe.QEParser": [[135, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[138, "getkpointlabels"]], "kpoints_cart": [[140, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[144, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[146, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[148, "pyprocar-io-vasp-outcar"]], "efermi": [[150, "efermi"]], "rotations": [[152, "rotations"]], "pyprocar.io.vasp.Poscar": [[153, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[155, "pyprocar-io-vasp-procar"]], "pyprocar.io.vasp.VaspXML": [[161, "pyprocar-io-vasp-vaspxml"]], "bands": [[163, "bands"]], "bands_projected": [[164, "bands-projected"]], "conv": [[165, "conv"]], "convergence": [[166, "convergence"]], "convergence_electronic": [[167, "convergence-electronic"]], "convergence_ionic": [[168, "convergence-ionic"]], "energies": [[173, "energies"]], "energy": [[174, "energy"]], "fermi": [[175, "fermi"]], "forces": [[177, "forces"]], "get_general": [[178, "get-general"]], "get_params": [[179, "get-params"]], "get_scstep": [[180, "get-scstep"]], "get_set": [[181, "get-set"]], "get_structure": [[182, "get-structure"]], "get_varray": [[183, "get-varray"]], "incar": [[184, "incar"]], "is_finished": [[186, "is-finished"]], "iteration_data": [[187, "iteration-data"]], "kpoints": [[188, "kpoints"]], "kpoints_list": [[189, "kpoints-list"]], "last_energy": [[190, "last-energy"]], "parse_vasprun": [[191, "parse-vasprun"]], "potcar_info": [[192, "potcar-info"]], "read": [[193, "read"]], "text_to_bool": [[197, "text-to-bool"]], "vasp_parameters": [[198, "vasp-parameters"]], "AbinitParser": [[199, "abinitparser"]], "BxsfParser": [[200, "bxsfparser"]], "IO API": [[201, "io-api"]], "LobsterParser": [[202, "lobsterparser"]], "QEParser": [[203, "qeparser"]], "SiestaParser": [[204, "siestaparser"]], "VaspParser": [[205, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[206, "pyprocar-plotter-dosplot"]], "draw_fermi": [[208, "draw-fermi"], [227, "draw-fermi"]], "grid": [[209, "grid"], [228, "grid"]], "legend": [[210, "legend"], [229, "legend"]], "plot_dos": [[211, "plot-dos"]], "plot_parametric": [[212, "plot-parametric"]], "plot_parametric_line": [[213, "plot-parametric-line"]], "plot_stack": [[214, "plot-stack"]], "plot_stack_orbitals": [[215, "plot-stack-orbitals"]], "plot_stack_species": [[216, "plot-stack-species"]], "save": [[217, "save"], [234, "save"]], "set_xlabel": [[218, "set-xlabel"], [236, "set-xlabel"]], "set_xlim": [[219, "set-xlim"], [237, "set-xlim"]], "set_xticks": [[220, "set-xticks"], [238, "set-xticks"]], "set_ylabel": [[221, "set-ylabel"], [239, "set-ylabel"]], "set_ylim": [[222, "set-ylim"], [240, "set-ylim"]], "set_yticks": [[223, "set-yticks"], [241, "set-yticks"]], "show": [[224, "show"], [242, "show"]], "pyprocar.plotter.EBSPlot": [[225, "pyprocar-plotter-ebsplot"]], "plot_bands": [[230, "plot-bands"]], "plot_parameteric": [[231, "plot-parameteric"]], "plot_parameteric_overlay": [[232, "plot-parameteric-overlay"]], "plot_scatter": [[233, "plot-scatter"]], "set_title": [[235, "set-title"]], "pyprocar.plotter.ProcarPlot": [[243, "pyprocar-plotter-procarplot"]], "atomicPlot": [[245, "atomicplot"]], "parametricPlot": [[246, "parametricplot"]], "plotBands": [[247, "plotbands"]], "scatterPlot": [[248, "scatterplot"]], "EBSPlot": [[249, "ebsplot"]], "DosPlot": [[250, "dosplot"]], "Plotter API": [[251, "plotter-api"]], "ProcarPlot": [[252, "procarplot"]], "pyprocar.scripts.FermiHandler": [[253, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[255, "create-isovalue-gif"]], "plot_fermi_cross_section": [[256, "plot-fermi-cross-section"]], "plot_fermi_isoslider": [[257, "plot-fermi-isoslider"]], "plot_fermi_surface": [[258, "plot-fermi-surface"]], "plot_fermi_surface_area_vs_isovalue": [[259, "plot-fermi-surface-area-vs-isovalue"]], "bandgap": [[260, "bandgap"], [270, "bandgap"]], "bandsdosplot": [[261, "bandsdosplot"], [271, "bandsdosplot"]], "bandsplot": [[262, "bandsplot"], [272, "bandsplot"]], "bandsplot_2d": [[263, "bandsplot-2d"], [273, "bandsplot-2d"], [278, "bandsplot-2d"]], "cat": [[264, "cat"], [274, "cat"]], "dosplot": [[265, "dosplot"], [275, "dosplot"]], "fermi3D": [[266, "fermi3d"], [277, "fermi3d"]], "generate2dkmesh": [[267, "generate2dkmesh"], [279, "generate2dkmesh"]], "kpath": [[268, "kpath"], [281, "kpath"]], "FermiHandler": [[276, "fermihandler"]], "Scripts API": [[280, "scripts-api"]], "reapir": [[282, "reapir"]], "Abinit Perperation": [[283, "abinit-perperation"]], "Elk Perperation": [[284, "elk-perperation"]], "DFT Prep": [[285, "dft-prep"]], "Lobster Perperation": [[286, "lobster-perperation"]], "Quantum Espresso Preparation": [[287, "quantum-espresso-preparation"]], "Preparing Calculations": [[287, "preparing-calculations"], [289, "preparing-calculations"]], "Band Structure": [[287, "band-structure"], [289, "band-structure"], [290, "band-structure"], [323, "band-structure"]], "Density of States": [[287, "density-of-states"], [289, "density-of-states"], [297, "density-of-states"], [323, "density-of-states"], [333, "density-of-states"]], "Band Structure and Density of States": [[287, "band-structure-and-density-of-states"], [289, "band-structure-and-density-of-states"]], "Fermi": [[287, "fermi"], [289, "fermi"]], "K-Points Format": [[287, "k-points-format"], [289, "k-points-format"]], "Magnetic Calculations": [[287, "magnetic-calculations"], [289, "magnetic-calculations"]], "Siesta Perperation": [[288, "siesta-perperation"]], "VASP Preparation": [[289, "vasp-preparation"]], "Plotting band structure": [[291, "plotting-band-structure"]], "Plain mode": [[291, "plain-mode"], [293, "plain-mode"], [294, "plain-mode"], [295, "plain-mode"], [298, "plain-mode"], [301, "plain-mode"], [304, "plain-mode"], [307, "plain-mode"], [312, "plain-mode"], [313, "plain-mode"], [314, "plain-mode"], [315, "plain-mode"]], "Parametric mode": [[291, "parametric-mode"], [293, "parametric-mode"], [294, "parametric-mode"], [295, "parametric-mode"], [298, "parametric-mode"], [299, "parametric-mode"], [300, "parametric-mode"], [301, "parametric-mode"], [314, "parametric-mode"], [315, "parametric-mode"]], "parametric_linemode": [[291, "parametric-linemode"]], "Scatter mode": [[291, "scatter-mode"], [295, "scatter-mode"]], "overlay_species mode": [[291, "overlay-species-mode"]], "overlay_orbtials mode": [[291, "overlay-orbtials-mode"]], "overlay mode": [[291, "overlay-mode"], [298, "overlay-mode"]], "overlay mode by orbital names": [[291, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[292, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[293, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[294, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[295, "plotting-spin-polarized-band-structures"]], "Computation times": [[296, "computation-times"], [302, "computation-times"], [305, "computation-times"], [309, "computation-times"], [317, "computation-times"], [322, "computation-times"]], "Plotting density of states": [[298, "plotting-density-of-states"]], "parametric_line mode": [[298, "parametric-line-mode"], [301, "parametric-line-mode"]], "stack_species mode": [[298, "stack-species-mode"], [301, "stack-species-mode"]], "stack_orbtials mode": [[298, "stack-orbtials-mode"], [301, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[299, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[300, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[301, "plotting-spin-polarized-density-of-states"]], "stack mode": [[301, "stack-mode"]], "Bands and Dos plot": [[303, "bands-and-dos-plot"], [323, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[304, "plotting-bandsdosplot"]], "Fermi 2D": [[306, "fermi-2d"], [323, "fermi-2d"]], "Plotting fermi2d": [[307, "plotting-fermi2d"]], "plain_bands mode": [[307, "plain-bands-mode"]], "parametric mode": [[307, "parametric-mode"]], "Selecting band indices": [[307, "selecting-band-indices"], [308, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[308, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[308, "spin-texture-projection"]], "Spin Texture single color": [[308, "spin-texture-single-color"]], "Fermi 3D": [[310, "fermi-3d"], [323, "fermi-3d"]], "Plotting fermi3d cross_section": [[311, "plotting-fermi3d-cross-section"]], "Cross section": [[311, "cross-section"]], "Cross section. Save slice": [[311, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[312, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[313, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[314, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[315, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[316, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[316, "spin-texture-mode"]], "Other": [[318, "other"], [323, "other"]], "Example of kmesh_generator": [[319, "example-of-kmesh-generator"]], "Plotting Kmesh": [[319, "plotting-kmesh"]], "Example of finding the bandgap": [[320, "example-of-finding-the-bandgap"]], "Example of kpath_generator": [[321, "example-of-kpath-generator"]], "Plotting K Path": [[321, "plotting-k-path"]], "Examples": [[323, "examples"], [336, "id1"]], "Authors & Citation": [[324, "authors-citation"]], "Citing PyProcar": [[324, "citing-pyprocar"], [325, "citing-pyprocar"]], "Authors": [[324, "authors"]], "Contributors": [[324, "contributors"]], "Developers": [[324, "developers"]], "License": [[324, "license"]], "Getting started": [[325, "getting-started"]], "Installation": [[325, "installation"], [326, "installation"]], "Paper": [[325, "paper"]], "Support": [[325, "support"]], "Installing with pip": [[326, "installing-with-pip"]], "Installing with conda": [[326, "installing-with-conda"]], "Cloning through GitHub": [[326, "cloning-through-github"]], "After Installation": [[326, "after-installation"]], "Why PyProcar?": [[327, "why-pyprocar"]], "PyProcar": [[328, "pyprocar"]], "Indices and tables": [[328, "indices-and-tables"]], "Atomic Projections": [[329, "atomic-projections"]], "1. Spin projection": [[329, "spin-projection"]], "2. Atom projection": [[329, "atom-projection"]], "3. Orbital projection": [[329, "orbital-projection"]], "Band structure": [[330, "band-structure"]], "1. Plain band structure": [[330, "plain-band-structure"]], "2. Spin projection": [[330, "spin-projection"]], "3. Atom projection": [[330, "atom-projection"]], "4. Orbital projection": [[330, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[330, "export-plot-as-a-matplotlib-pyplot-object"], [335, "export-plot-as-a-matplotlib-pyplot-object"], [342, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[330, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[330, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[331, "concatenating-multiple-calculations"]], "Compare bands": [[332, "compare-bands"]], "1. mode='plain'": [[333, "mode-plain"]], "2. mode='parametric'": [[333, "mode-parametric"]], "3. mode='parametric_line'": [[333, "mode-parametric-line"]], "4. mode='stack'": [[333, "mode-stack"]], "5. mode='stack_species'": [[333, "mode-stack-species"]], "6. mode='stack_orbitals'": [[333, "mode-stack-orbitals"]], "2D spin-texture": [[335, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[335, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[336, "d-fermi-surface"]], "3D surfaces": [[336, "d-surfaces"]], "1. Plain Fermi surface": [[336, "plain-fermi-surface"]], "2. Surface coloring based on properties from PROCAR": [[336, "surface-coloring-based-on-properties-from-procar"]], "3. Surface coloring based on properties obtained from an external file": [[336, "surface-coloring-based-on-properties-obtained-from-an-external-file"]], "Keyboard shortcuts": [[336, "keyboard-shortcuts"]], "Filtering data": [[337, "filtering-data"]], "To filter selected orbitals": [[337, "to-filter-selected-orbitals"]], "To filter selected k-points": [[337, "to-filter-selected-k-points"]], "To filter selected spins": [[337, "to-filter-selected-spins"]], "To filter selected atoms": [[337, "to-filter-selected-atoms"]], "User Guide": [[338, "user-guide"]], "Further Details": [[338, "further-details"]], "K Path": [[339, "k-path"]], "Repair": [[340, "repair"]], "Band unfolding": [[342, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[0, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[1, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[2, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[3, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[4, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[5, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[6, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[7, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[8, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[9, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[10, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[11, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[12, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[13, "pyprocar.core.ElectronicBandStructure.__init__"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[14, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[15, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[16, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[17, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[18, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "natoms (pyprocar.core.electronicbandstructure property)": [[19, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[20, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[21, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[22, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[23, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[25, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[26, "pyprocar.core.ElectronicBandStructure.unfold"]], "update_weights() (pyprocar.core.electronicbandstructure method)": [[27, "pyprocar.core.ElectronicBandStructure.update_weights"]], "fermisurface (class in pyprocar.core)": [[28, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[29, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[30, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[31, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[32, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[33, "pyprocar.core.FermiSurface.plot"]], "spin_texture() (pyprocar.core.fermisurface method)": [[34, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[35, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[36, "pyprocar.core.FermiSurface3D.__init__"]], "calculate_effective_mass() (pyprocar.core.fermisurface3d method)": [[37, "pyprocar.core.FermiSurface3D.calculate_effective_mass"]], "calculate_fermi_speed() (pyprocar.core.fermisurface3d method)": [[38, "pyprocar.core.FermiSurface3D.calculate_fermi_speed"]], "calculate_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[39, "pyprocar.core.FermiSurface3D.calculate_fermi_velocity"]], "calculate_first_and_second_derivative_energy() (pyprocar.core.fermisurface3d method)": [[40, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy"]], "calculate_first_and_second_derivative_energy_band() (pyprocar.core.fermisurface3d method)": [[41, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band"]], "create_spin_texture() (pyprocar.core.fermisurface3d method)": [[42, "pyprocar.core.FermiSurface3D.create_spin_texture"]], "create_vector_texture() (pyprocar.core.fermisurface3d method)": [[43, "pyprocar.core.FermiSurface3D.create_vector_texture"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[44, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[45, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_color() (pyprocar.core.fermisurface3d method)": [[46, "pyprocar.core.FermiSurface3D.project_color"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[47, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[48, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[49, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[50, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[51, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[52, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[53, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[54, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[55, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[56, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[57, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[58, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[59, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[60, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[61, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[62, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[63, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[64, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[65, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[66, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[67, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[68, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[69, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[70, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[71, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[72, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[73, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[74, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[75, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[76, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[77, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[78, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[79, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[80, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[81, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[82, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[83, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[84, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[85, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[86, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[87, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[88, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[89, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[90, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[91, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[92, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[93, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[94, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[95, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[96, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[97, "pyprocar.core.Surface.set_vectors"]], "kpoints (class in pyprocar.io.abinit)": [[109, "pyprocar.io.abinit.Kpoints"]], "__init__() (pyprocar.io.abinit.kpoints method)": [[110, "pyprocar.io.abinit.Kpoints.__init__"]], "output (class in pyprocar.io.abinit)": [[111, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[112, "pyprocar.io.abinit.Output.__init__"]], "procar (class in pyprocar.io.abinit)": [[113, "pyprocar.io.abinit.Procar"]], "variables (pyprocar.io.abinit.procar attribute)": [[113, "pyprocar.io.abinit.Procar.variables"]], "__init__() (pyprocar.io.abinit.procar method)": [[114, "pyprocar.io.abinit.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.abinit.procar property)": [[115, "pyprocar.io.abinit.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.abinit.procar property)": [[116, "pyprocar.io.abinit.Procar.kpoints_reduced"]], "repair() (pyprocar.io.abinit.procar method)": [[117, "pyprocar.io.abinit.Procar.repair"]], "symmetrize() (pyprocar.io.abinit.procar method)": [[118, "pyprocar.io.abinit.Procar.symmetrize"]], "bxsfparser (class in pyprocar.io.bxsf)": [[119, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[120, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[121, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[122, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[123, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[124, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[125, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[126, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[127, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[128, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[129, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[130, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[131, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[132, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[133, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[134, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[135, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[136, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[137, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[138, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[139, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[140, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[141, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[142, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[143, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[144, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[145, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[146, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[147, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[148, "pyprocar.io.vasp.Outcar"]], "__init__() (pyprocar.io.vasp.outcar method)": [[149, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[150, "pyprocar.io.vasp.Outcar.efermi"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[151, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[152, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[153, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[154, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[155, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[156, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[157, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[158, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[159, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[160, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[161, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[162, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[163, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[164, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[165, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[166, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[167, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[168, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[169, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[170, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[171, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[172, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[173, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[174, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[175, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[176, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[177, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[178, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[179, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[180, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[181, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[182, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[183, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[184, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[185, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[186, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[187, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[188, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[189, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[191, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[193, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[197, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[206, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[207, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[208, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[209, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[210, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[211, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[212, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[213, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[214, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[215, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[216, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[217, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[218, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[219, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[220, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[221, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[222, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[223, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[224, "pyprocar.plotter.DOSPlot.show"]], "ebsplot (class in pyprocar.plotter)": [[225, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[226, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[227, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[228, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[229, "pyprocar.plotter.EBSPlot.legend"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[230, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[231, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[232, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[233, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[234, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[235, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[236, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[237, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[238, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[239, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[240, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[241, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[242, "pyprocar.plotter.EBSPlot.show"]], "procarplot (class in pyprocar.plotter)": [[243, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[244, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[245, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[246, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[247, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[248, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "fermihandler (class in pyprocar.scripts)": [[253, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[254, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[255, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[256, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[257, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[258, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "plot_fermi_surface_area_vs_isovalue() (pyprocar.scripts.fermihandler method)": [[259, "pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue"]], "bandgap() (in module pyprocar.scripts)": [[260, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[261, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[262, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[263, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[264, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[265, "pyprocar.scripts.dosplot"]], "fermi3d() (in module pyprocar.scripts)": [[266, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[267, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[268, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[269, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[330, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[330, "module-pyprocar.scripts.scriptBandsplot"], [331, "module-pyprocar.scripts.scriptCat"], [333, "module-pyprocar.scriptDosplot"], [335, "module-pyprocar.scripts.scriptFermi2D"], [336, "module-pyprocar.scripts.scriptFermi3D"], [337, "module-pyprocar.scripts.scriptFilter"], [340, "module-pyprocar.scripts.scriptRepair"], [342, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[330, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[331, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[331, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[333, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[335, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[335, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[336, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[336, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[337, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[337, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[340, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[340, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[342, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[342, "pyprocar.scripts.scriptUnfold.unfold"]]}})