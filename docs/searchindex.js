Search.setIndex({"docnames": ["api/core/_autosummary/pyprocar.core.BrillouinZone", "api/core/_autosummary/pyprocar.core.BrillouinZone.__init__", "api/core/_autosummary/pyprocar.core.BrillouinZone.wigner_seitz", "api/core/_autosummary/pyprocar.core.DensityOfStates", "api/core/_autosummary/pyprocar.core.DensityOfStates.__init__", "api/core/_autosummary/pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.dos_sum", "api/core/_autosummary/pyprocar.core.DensityOfStates.get_current_basis", "api/core/_autosummary/pyprocar.core.DensityOfStates.is_non_collinear", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_dos", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_energies", "api/core/_autosummary/pyprocar.core.DensityOfStates.n_spins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.__init__", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.calculate_scalar_integral", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_nd_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_scaler_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.create_vector_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ebs_sum", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.ibz2fbz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.is_non_collinear", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.kpoints_reduced", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kx", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_ky", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.n_kz", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.natoms", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nbands", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nkpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.norbitals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nprincipals", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.nspins", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.plot_kpoints", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.unfold", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_bands_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_index_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_kpoints_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.update_weights_mesh", "api/core/_autosummary/pyprocar.core.ElectronicBandStructure.weights_mesh", "api/core/_autosummary/pyprocar.core.FermiSurface", "api/core/_autosummary/pyprocar.core.FermiSurface.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface.add_axes_labels", "api/core/_autosummary/pyprocar.core.FermiSurface.add_legend", "api/core/_autosummary/pyprocar.core.FermiSurface.find_energy", "api/core/_autosummary/pyprocar.core.FermiSurface.plot", "api/core/_autosummary/pyprocar.core.FermiSurface.spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D", "api/core/_autosummary/pyprocar.core.FermiSurface3D.__init__", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_effective_mass", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_speed", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_fermi_velocity", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy", "api/core/_autosummary/pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_spin_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.create_vector_texture", "api/core/_autosummary/pyprocar.core.FermiSurface3D.extend_surface", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_atomic_projections", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_color", "api/core/_autosummary/pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections", "api/core/_autosummary/pyprocar.core.Isosurface", "api/core/_autosummary/pyprocar.core.Isosurface.__init__", "api/core/_autosummary/pyprocar.core.Isosurface.dxyz", "api/core/_autosummary/pyprocar.core.Isosurface.nX", "api/core/_autosummary/pyprocar.core.Isosurface.nY", "api/core/_autosummary/pyprocar.core.Isosurface.nZ", "api/core/_autosummary/pyprocar.core.Isosurface.surface_boundaries", "api/core/_autosummary/pyprocar.core.KPath", "api/core/_autosummary/pyprocar.core.KPath.__init__", "api/core/_autosummary/pyprocar.core.KPath.get_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.get_optimized_kpoints_transformed", "api/core/_autosummary/pyprocar.core.KPath.kdistances", "api/core/_autosummary/pyprocar.core.KPath.nsegments", "api/core/_autosummary/pyprocar.core.KPath.tick_names", "api/core/_autosummary/pyprocar.core.KPath.tick_positions", "api/core/_autosummary/pyprocar.core.KPath.write_to_file", "api/core/_autosummary/pyprocar.core.Structure", "api/core/_autosummary/pyprocar.core.Structure.__init__", "api/core/_autosummary/pyprocar.core.Structure.a", "api/core/_autosummary/pyprocar.core.Structure.alpha", "api/core/_autosummary/pyprocar.core.Structure.atomic_numbers", "api/core/_autosummary/pyprocar.core.Structure.b", "api/core/_autosummary/pyprocar.core.Structure.beta", "api/core/_autosummary/pyprocar.core.Structure.c", "api/core/_autosummary/pyprocar.core.Structure.cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.density", "api/core/_autosummary/pyprocar.core.Structure.gamma", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_international", "api/core/_autosummary/pyprocar.core.Structure.get_space_group_number", "api/core/_autosummary/pyprocar.core.Structure.get_spglib_symmetry_dataset", "api/core/_autosummary/pyprocar.core.Structure.get_wyckoff_positions", "api/core/_autosummary/pyprocar.core.Structure.is_point_inside", "api/core/_autosummary/pyprocar.core.Structure.lattice_corners", "api/core/_autosummary/pyprocar.core.Structure.masses", "api/core/_autosummary/pyprocar.core.Structure.natoms", "api/core/_autosummary/pyprocar.core.Structure.nspecies", "api/core/_autosummary/pyprocar.core.Structure.plot_cell_convex_hull", "api/core/_autosummary/pyprocar.core.Structure.reciprocal_lattice", "api/core/_autosummary/pyprocar.core.Structure.species", "api/core/_autosummary/pyprocar.core.Structure.supercell", "api/core/_autosummary/pyprocar.core.Structure.transform", "api/core/_autosummary/pyprocar.core.Structure.volume", "api/core/_autosummary/pyprocar.core.Surface", "api/core/_autosummary/pyprocar.core.Surface.__init__", "api/core/_autosummary/pyprocar.core.Surface.centers", "api/core/_autosummary/pyprocar.core.Surface.export", "api/core/_autosummary/pyprocar.core.Surface.faces_array", "api/core/_autosummary/pyprocar.core.Surface.set_color_with_cmap", "api/core/_autosummary/pyprocar.core.Surface.set_scalars", "api/core/_autosummary/pyprocar.core.Surface.set_vectors", "api/core/brillouin_zone", "api/core/dos", "api/core/ebs", "api/core/fermi2d", "api/core/fermi3d", "api/core/index", "api/core/isosurface", "api/core/kpath", "api/core/structure", "api/core/surface", "api/index", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints", "api/io/_autosummary/pyprocar.io.abinit.AbinitKpoints.__init__", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar", "api/io/_autosummary/pyprocar.io.abinit.AbinitProcar.__init__", "api/io/_autosummary/pyprocar.io.abinit.Output", "api/io/_autosummary/pyprocar.io.abinit.Output.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.__init__", "api/io/_autosummary/pyprocar.io.bxsf.BxsfParser.parse_bxsf", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.__init__", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_parametric", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_projected", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_to_dict", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.dos_total", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.final_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.initial_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.parse_structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.species", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structure", "api/io/_autosummary/pyprocar.io.lobster.LobsterParser.structures", "api/io/_autosummary/pyprocar.io.qe.QEParser", "api/io/_autosummary/pyprocar.io.qe.QEParser.__init__", "api/io/_autosummary/pyprocar.io.qe.QEParser.final_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.getKpointLabels", "api/io/_autosummary/pyprocar.io.qe.QEParser.initial_structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.kpoints_cart", "api/io/_autosummary/pyprocar.io.qe.QEParser.species", "api/io/_autosummary/pyprocar.io.qe.QEParser.structure", "api/io/_autosummary/pyprocar.io.qe.QEParser.structures", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser", "api/io/_autosummary/pyprocar.io.siesta.SiestaParser.__init__", "api/io/_autosummary/pyprocar.io.vasp.Kpoints", "api/io/_autosummary/pyprocar.io.vasp.Kpoints.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar", "api/io/_autosummary/pyprocar.io.vasp.Outcar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Outcar.efermi", "api/io/_autosummary/pyprocar.io.vasp.Outcar.reciprocal_lattice", "api/io/_autosummary/pyprocar.io.vasp.Outcar.rotations", "api/io/_autosummary/pyprocar.io.vasp.Poscar", "api/io/_autosummary/pyprocar.io.vasp.Poscar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar", "api/io/_autosummary/pyprocar.io.vasp.Procar.__init__", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_cartesian", "api/io/_autosummary/pyprocar.io.vasp.Procar.kpoints_reduced", "api/io/_autosummary/pyprocar.io.vasp.Procar.repair", "api/io/_autosummary/pyprocar.io.vasp.Procar.symmetrize", "api/io/_autosummary/pyprocar.io.vasp.VaspXML", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.__init__", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.bands_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.conv", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_electronic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.convergence_ionic", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_projected", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_to_dict", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.dos_total", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energies", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.fermi", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.final_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.forces", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_general", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_params", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_scstep", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_set", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.get_varray", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.incar", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.initial_structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.is_finished", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.iteration_data", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.kpoints_list", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.last_energy", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.parse_vasprun", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.potcar_info", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.read", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.species", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structure", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.structures", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.text_to_bool", "api/io/_autosummary/pyprocar.io.vasp.VaspXML.vasp_parameters", "api/io/abinit", "api/io/bxsf", "api/io/index", "api/io/lobster", "api/io/qe", "api/io/siesta", "api/io/vasp", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_dos", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_parametric_line", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_orbitals", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.plot_stack_species", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.DOSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.draw_fermi", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.grid", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.legend", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_bands", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_parameteric_overlay", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.plot_scatter", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.save", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_title", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xlim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_xticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylabel", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_ylim", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.set_yticks", "api/plotter/_autosummary/pyprocar.plotter.EBSPlot.show", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.__init__", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.atomicPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.parametricPlot", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.plotBands", "api/plotter/_autosummary/pyprocar.plotter.ProcarPlot.scatterPlot", "api/plotter/bandsplot", "api/plotter/dosplot", "api/plotter/index", "api/plotter/procarplot", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.__init__", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.create_isovalue_gif", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_cross_section", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_isoslider", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface", "api/scripts/_autosummary/pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue", "api/scripts/_autosummary/pyprocar.scripts.bandgap", "api/scripts/_autosummary/pyprocar.scripts.bandsdosplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot", "api/scripts/_autosummary/pyprocar.scripts.bandsplot_2d", "api/scripts/_autosummary/pyprocar.scripts.cat", "api/scripts/_autosummary/pyprocar.scripts.dosplot", "api/scripts/_autosummary/pyprocar.scripts.fermi3D", "api/scripts/_autosummary/pyprocar.scripts.generate2dkmesh", "api/scripts/_autosummary/pyprocar.scripts.kpath", "api/scripts/_autosummary/pyprocar.scripts.repair", "api/scripts/bandgap", "api/scripts/bandsdosplot", "api/scripts/bandsplot", "api/scripts/bandsplot_2d", "api/scripts/cat", "api/scripts/dosplot", "api/scripts/fermi2d", "api/scripts/fermi3d", "api/scripts/fermihandler", "api/scripts/generate2dkmesh", "api/scripts/index", "api/scripts/kpath", "api/scripts/repair", "dftprep/abinit", "dftprep/elk", "dftprep/index", "dftprep/lobster", "dftprep/qe", "dftprep/siesta", "dftprep/vasp", "examples/00-band_structure/index", "examples/00-band_structure/plotting_colinear", "examples/00-band_structure/plotting_compare_bands", "examples/00-band_structure/plotting_noncolinear_qe", "examples/00-band_structure/plotting_noncolinear_vasp", "examples/00-band_structure/plotting_spin_polarized", "examples/00-band_structure/sg_execution_times", "examples/01-dos/index", "examples/01-dos/plotting_colinear_dos", "examples/01-dos/plotting_noncolinear_dos_qe", "examples/01-dos/plotting_noncolinear_dos_vasp", "examples/01-dos/plotting_spin_polarized_dos", "examples/01-dos/sg_execution_times", "examples/02-bands_dos/index", "examples/02-bands_dos/plotting_bandsdosplot", "examples/02-bands_dos/sg_execution_times", "examples/03-fermi2d/index", "examples/03-fermi2d/plotting_fermi2d", "examples/03-fermi2d/plotting_fermi2d_spin_texture", "examples/03-fermi2d/sg_execution_times", "examples/04-fermi3d/index", "examples/04-fermi3d/plotting_fermi3d_cross_section", "examples/04-fermi3d/plotting_fermi3d_isoslider", "examples/04-fermi3d/plotting_fermi3d_isovalue_gif", "examples/04-fermi3d/plotting_fermi3d_plain", "examples/04-fermi3d/plotting_fermi3d_spin-polarized", "examples/04-fermi3d/plotting_fermi3d_spin_texture", "examples/04-fermi3d/sg_execution_times", "examples/05-other/index", "examples/05-other/plotting_2dkmesh_generation", "examples/05-other/plotting_bandgap", "examples/05-other/plotting_kpath_generation", "examples/05-other/sg_execution_times", "examples/index", "getting-started/authors", "getting-started/index", "getting-started/installation", "getting-started/why", "index", "user-guide/atomic_projections", "user-guide/bands", "user-guide/cat", "user-guide/comparebands", "user-guide/dos", "user-guide/ebs", "user-guide/fermi2d", "user-guide/fermi3d", "user-guide/filter", "user-guide/index", "user-guide/kpath", "user-guide/repair", "user-guide/structure", "user-guide/unfold"], "filenames": ["api\\core\\_autosummary\\pyprocar.core.BrillouinZone.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.BrillouinZone.wigner_seitz.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.dos_sum.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.get_current_basis.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_dos.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_energies.rst", "api\\core\\_autosummary\\pyprocar.core.DensityOfStates.n_spins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.calculate_scalar_integral.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_nd_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_scaler_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.create_vector_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ebs_sum.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.ibz2fbz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.is_non_collinear.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.kpoints_reduced.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kx.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_ky.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.n_kz.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nbands.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nkpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.norbitals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nprincipals.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.nspins.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.plot_kpoints.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.unfold.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_bands_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_index_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_kpoints_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.update_weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.ElectronicBandStructure.weights_mesh.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_axes_labels.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.add_legend.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.find_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.plot.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface.spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_effective_mass.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_speed.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_fermi_velocity.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_spin_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.create_vector_texture.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.extend_surface.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_color.rst", "api\\core\\_autosummary\\pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.dxyz.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nX.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nY.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.nZ.rst", "api\\core\\_autosummary\\pyprocar.core.Isosurface.surface_boundaries.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.get_optimized_kpoints_transformed.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.kdistances.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.nsegments.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_names.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.tick_positions.rst", "api\\core\\_autosummary\\pyprocar.core.KPath.write_to_file.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.a.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.alpha.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.atomic_numbers.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.b.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.beta.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.c.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.density.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.gamma.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_international.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_space_group_number.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_spglib_symmetry_dataset.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.get_wyckoff_positions.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.is_point_inside.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.lattice_corners.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.masses.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.natoms.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.nspecies.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.plot_cell_convex_hull.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.reciprocal_lattice.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.species.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.supercell.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.transform.rst", "api\\core\\_autosummary\\pyprocar.core.Structure.volume.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.__init__.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.centers.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.export.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.faces_array.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_color_with_cmap.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_scalars.rst", "api\\core\\_autosummary\\pyprocar.core.Surface.set_vectors.rst", "api\\core\\brillouin_zone.rst", "api\\core\\dos.rst", "api\\core\\ebs.rst", "api\\core\\fermi2d.rst", "api\\core\\fermi3d.rst", "api\\core\\index.rst", "api\\core\\isosurface.rst", "api\\core\\kpath.rst", "api\\core\\structure.rst", "api\\core\\surface.rst", "api\\index.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitKpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.AbinitProcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.rst", "api\\io\\_autosummary\\pyprocar.io.abinit.Output.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.bxsf.BxsfParser.parse_bxsf.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_parametric.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.parse_structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.lobster.LobsterParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.getKpointLabels.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.kpoints_cart.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.species.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structure.rst", "api\\io\\_autosummary\\pyprocar.io.qe.QEParser.structures.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.rst", "api\\io\\_autosummary\\pyprocar.io.siesta.SiestaParser.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Kpoints.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.efermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.reciprocal_lattice.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Outcar.rotations.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Poscar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_cartesian.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.kpoints_reduced.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.repair.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.Procar.symmetrize.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.__init__.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.bands_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.conv.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_electronic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.convergence_ionic.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_projected.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_to_dict.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.dos_total.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energies.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.fermi.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.final_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.forces.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_general.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_params.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_scstep.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_set.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.get_varray.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.incar.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.initial_structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.is_finished.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.iteration_data.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.kpoints_list.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.last_energy.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.parse_vasprun.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.potcar_info.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.read.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.species.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structure.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.structures.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.text_to_bool.rst", "api\\io\\_autosummary\\pyprocar.io.vasp.VaspXML.vasp_parameters.rst", "api\\io\\abinit.rst", "api\\io\\bxsf.rst", "api\\io\\index.rst", "api\\io\\lobster.rst", "api\\io\\qe.rst", "api\\io\\siesta.rst", "api\\io\\vasp.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_dos.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_parametric_line.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_orbitals.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.plot_stack_species.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.DOSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.draw_fermi.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.grid.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.legend.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_bands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_parameteric_overlay.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.plot_scatter.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.save.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_title.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xlim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_xticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylabel.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_ylim.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.set_yticks.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.EBSPlot.show.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.__init__.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.atomicPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.parametricPlot.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.plotBands.rst", "api\\plotter\\_autosummary\\pyprocar.plotter.ProcarPlot.scatterPlot.rst", "api\\plotter\\bandsplot.rst", "api\\plotter\\dosplot.rst", "api\\plotter\\index.rst", "api\\plotter\\procarplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.__init__.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.create_isovalue_gif.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_cross_section.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_isoslider.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandgap.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsdosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.bandsplot_2d.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.cat.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.dosplot.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.fermi3D.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.generate2dkmesh.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.kpath.rst", "api\\scripts\\_autosummary\\pyprocar.scripts.repair.rst", "api\\scripts\\bandgap.rst", "api\\scripts\\bandsdosplot.rst", "api\\scripts\\bandsplot.rst", "api\\scripts\\bandsplot_2d.rst", "api\\scripts\\cat.rst", "api\\scripts\\dosplot.rst", "api\\scripts\\fermi2d.rst", "api\\scripts\\fermi3d.rst", "api\\scripts\\fermihandler.rst", "api\\scripts\\generate2dkmesh.rst", "api\\scripts\\index.rst", "api\\scripts\\kpath.rst", "api\\scripts\\repair.rst", "dftprep\\abinit.rst", "dftprep\\elk.rst", "dftprep\\index.rst", "dftprep\\lobster.rst", "dftprep\\qe.rst", "dftprep\\siesta.rst", "dftprep\\vasp.rst", "examples\\00-band_structure\\index.rst", "examples\\00-band_structure\\plotting_colinear.rst", "examples\\00-band_structure\\plotting_compare_bands.rst", "examples\\00-band_structure\\plotting_noncolinear_qe.rst", "examples\\00-band_structure\\plotting_noncolinear_vasp.rst", "examples\\00-band_structure\\plotting_spin_polarized.rst", "examples\\00-band_structure\\sg_execution_times.rst", "examples\\01-dos\\index.rst", "examples\\01-dos\\plotting_colinear_dos.rst", "examples\\01-dos\\plotting_noncolinear_dos_qe.rst", "examples\\01-dos\\plotting_noncolinear_dos_vasp.rst", "examples\\01-dos\\plotting_spin_polarized_dos.rst", "examples\\01-dos\\sg_execution_times.rst", "examples\\02-bands_dos\\index.rst", "examples\\02-bands_dos\\plotting_bandsdosplot.rst", "examples\\02-bands_dos\\sg_execution_times.rst", "examples\\03-fermi2d\\index.rst", "examples\\03-fermi2d\\plotting_fermi2d.rst", "examples\\03-fermi2d\\plotting_fermi2d_spin_texture.rst", "examples\\03-fermi2d\\sg_execution_times.rst", "examples\\04-fermi3d\\index.rst", "examples\\04-fermi3d\\plotting_fermi3d_cross_section.rst", "examples\\04-fermi3d\\plotting_fermi3d_isoslider.rst", "examples\\04-fermi3d\\plotting_fermi3d_isovalue_gif.rst", "examples\\04-fermi3d\\plotting_fermi3d_plain.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin-polarized.rst", "examples\\04-fermi3d\\plotting_fermi3d_spin_texture.rst", "examples\\04-fermi3d\\sg_execution_times.rst", "examples\\05-other\\index.rst", "examples\\05-other\\plotting_2dkmesh_generation.rst", "examples\\05-other\\plotting_bandgap.rst", "examples\\05-other\\plotting_kpath_generation.rst", "examples\\05-other\\sg_execution_times.rst", "examples\\index.rst", "getting-started\\authors.rst", "getting-started\\index.rst", "getting-started\\installation.rst", "getting-started\\why.rst", "index.rst", "user-guide\\atomic_projections.rst", "user-guide\\bands.rst", "user-guide\\cat.rst", "user-guide\\comparebands.rst", "user-guide\\dos.rst", "user-guide\\ebs.rst", "user-guide\\fermi2d.rst", "user-guide\\fermi3d.rst", "user-guide\\filter.rst", "user-guide\\index.rst", "user-guide\\kpath.rst", "user-guide\\repair.rst", "user-guide\\structure.rst", "user-guide\\unfold.rst"], "titles": ["pyprocar.core.BrillouinZone", "__init__", "wigner_seitz", "pyprocar.core.DensityOfStates", "__init__", "coupled_to_uncoupled_basis", "dos_sum", "get_current_basis", "is_non_collinear", "n_dos", "n_energies", "n_spins", "pyprocar.core.ElectronicBandStructure", "__init__", "bands_gradient_mesh", "bands_hessian_mesh", "bands_mesh", "calculate_scalar_gradient", "calculate_scalar_integral", "create_nd_mesh", "create_scaler_mesh", "create_vector_mesh", "ebs_sum", "ibz2fbz", "index_mesh", "is_non_collinear", "kpoints_cartesian", "kpoints_cartesian_mesh", "kpoints_mesh", "kpoints_reduced", "n_kx", "n_ky", "n_kz", "natoms", "nbands", "nkpoints", "norbitals", "nprincipals", "nspins", "plot_kpoints", "projected_mesh", "projected_phase_mesh", "unfold", "update_bands_gradient_mesh", "update_bands_hessian_mesh", "update_bands_mesh", "update_index_mesh", "update_kpoints_cartesian_mesh", "update_kpoints_mesh", "update_projected_mesh", "update_projected_phase_mesh", "update_weights", "update_weights_mesh", "weights_mesh", "pyprocar.core.FermiSurface", "__init__", "add_axes_labels", "add_legend", "find_energy", "plot", "spin_texture", "pyprocar.core.FermiSurface3D", "__init__", "calculate_effective_mass", "calculate_fermi_speed", "calculate_fermi_velocity", "calculate_first_and_second_derivative_energy", "calculate_first_and_second_derivative_energy_band", "create_spin_texture", "create_vector_texture", "extend_surface", "project_atomic_projections", "project_color", "project_spin_texture_atomic_projections", "pyprocar.core.Isosurface", "__init__", "dxyz", "nX", "nY", "nZ", "surface_boundaries", "pyprocar.core.KPath", "__init__", "get_kpoints_transformed", "get_optimized_kpoints_transformed", "kdistances", "nsegments", "tick_names", "tick_positions", "write_to_file", "pyprocar.core.Structure", "__init__", "a", "alpha", "atomic_numbers", "b", "beta", "c", "cell_convex_hull", "density", "gamma", "get_space_group_international", "get_space_group_number", "get_spglib_symmetry_dataset", "get_wyckoff_positions", "is_point_inside", "lattice_corners", "masses", "natoms", "nspecies", "plot_cell_convex_hull", "reciprocal_lattice", "species", "supercell", "transform", "volume", "pyprocar.core.Surface", "__init__", "centers", "export", "faces_array", "set_color_with_cmap", "set_scalars", "set_vectors", "BrillouinZone", "DensityOfStates", "ElectronicBandStructure", "FermiSurface", "FermiSurface3D", "Core API", "Isosurface", "KPath", "Structure", "Surface", "API Reference", "pyprocar.io.abinit.AbinitKpoints", "__init__", "pyprocar.io.abinit.AbinitProcar", "__init__", "pyprocar.io.abinit.Output", "__init__", "pyprocar.io.bxsf.BxsfParser", "__init__", "parse_bxsf", "pyprocar.io.lobster.LobsterParser", "__init__", "dos", "dos_parametric", "dos_projected", "dos_to_dict", "dos_total", "final_structure", "initial_structure", "parse_structure", "species", "structure", "structures", "pyprocar.io.qe.QEParser", "__init__", "final_structure", "getKpointLabels", "initial_structure", "kpoints_cart", "species", "structure", "structures", "pyprocar.io.siesta.SiestaParser", "__init__", "pyprocar.io.vasp.Kpoints", "__init__", "pyprocar.io.vasp.Outcar", "__init__", "efermi", "reciprocal_lattice", "rotations", "pyprocar.io.vasp.Poscar", "__init__", "pyprocar.io.vasp.Procar", "__init__", "kpoints_cartesian", "kpoints_reduced", "repair", "symmetrize", "pyprocar.io.vasp.VaspXML", "__init__", "bands", "bands_projected", "conv", "convergence", "convergence_electronic", "convergence_ionic", "dos", "dos_projected", "dos_to_dict", "dos_total", "energies", "energy", "fermi", "final_structure", "forces", "get_general", "get_params", "get_scstep", "get_set", "get_structure", "get_varray", "incar", "initial_structure", "is_finished", "iteration_data", "kpoints", "kpoints_list", "last_energy", "parse_vasprun", "potcar_info", "read", "species", "structure", "structures", "text_to_bool", "vasp_parameters", "AbinitParser", "BxsfParser", "IO API", "LobsterParser", "QEParser", "SiestaParser", "VaspParser", "pyprocar.plotter.DOSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_dos", "plot_parametric", "plot_parametric_line", "plot_stack", "plot_stack_orbitals", "plot_stack_species", "save", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.EBSPlot", "__init__", "draw_fermi", "grid", "legend", "plot_bands", "plot_parameteric", "plot_parameteric_overlay", "plot_scatter", "save", "set_title", "set_xlabel", "set_xlim", "set_xticks", "set_ylabel", "set_ylim", "set_yticks", "show", "pyprocar.plotter.ProcarPlot", "__init__", "atomicPlot", "parametricPlot", "plotBands", "scatterPlot", "EBSPlot", "DosPlot", "Plotter API", "ProcarPlot", "pyprocar.scripts.FermiHandler", "__init__", "create_isovalue_gif", "plot_fermi_cross_section", "plot_fermi_isoslider", "plot_fermi_surface", "plot_fermi_surface_area_vs_isovalue", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "fermi3D", "generate2dkmesh", "kpath", "repair", "bandgap", "bandsdosplot", "bandsplot", "bandsplot_2d", "cat", "dosplot", "FermiHandler", "fermi3D", "bandsplot_2d", "generate2dkmesh", "Scripts API", "kpath", "reapir", "Abinit Perperation", "Elk Perperation", "DFT Prep", "Lobster Perperation", "Quantum Espresso Preparation", "Siesta Perperation", "VASP Preparation", "Band Structure", "Plotting band structure", "Comparing band structures", "Plotting non colinear band structures in Quantum Espresso", "Plotting non colinear band structures in VASP", "Plotting spin polarized band structures", "Computation times", "Density of States", "Plotting density of states", "Plotting non colinear dos in Quantum Espresso", "Plotting non colinear dos in VASP", "Plotting spin-polarized density of states", "Computation times", "Bands and Dos plot", "Plotting bandsdosplot", "Computation times", "Fermi 2D", "Plotting fermi2d", "Plotting fermi2d noncolinear", "Computation times", "Fermi 3D", "Plotting fermi3d cross_section", "Plotting fermi3d isoslider", "Plotting fermi3d isovalue_gif", "Plotting fermi3d plain", "Plotting fermi3d spin-polarized", "Plotting fermi3d spin_texture", "Computation times", "Other", "Example of kmesh_generator", "Example of finding the bandgap", "Example of kpath_generator", "Computation times", "Examples", "Authors &amp; Citation", "Getting started", "Installation", "Why PyProcar?", "PyProcar", "Atomic Projections", "Band structure", "Concatenating multiple calculations", "Compare bands", "Density of States", "ElectronicBandStructure", "2D spin-texture", "3D Fermi surface", "Filtering data", "User Guide", "K Path", "Repair", "Structure", "Band unfolding"], "terms": {"class": [0, 3, 12, 54, 60, 61, 74, 81, 90, 116, 125, 126, 128, 129, 130, 132, 133, 135, 137, 139, 141, 144, 157, 166, 167, 168, 170, 175, 177, 183, 228, 247, 265, 274, 275, 276, 333, 334, 335, 336, 337, 338, 346, 358], "reciprocal_lattic": [0, 1, 12, 13, 61, 62, 137, 138, 153, 177, 178], "ndarrai": [0, 1, 3, 4, 12, 13, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 61, 62, 69, 72, 74, 75, 83, 84, 85, 104, 105, 106, 111, 113, 114, 116, 117, 122, 123, 153, 162, 174, 177, 178, 179, 180, 185, 186, 192, 210, 253, 254, 255, 284, 285, 352], "transformation_matrix": [0, 1, 39, 42, 83, 84, 114, 364], "option": [0, 1, 3, 4, 6, 12, 13, 22, 39, 42, 54, 55, 59, 60, 61, 62, 69, 70, 72, 74, 75, 82, 89, 101, 102, 103, 104, 105, 114, 116, 117, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 175, 177, 178, 182, 183, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 305, 311, 346, 352, 353, 357, 358, 359, 364], "list": [0, 1, 6, 12, 13, 22, 24, 51, 54, 55, 59, 60, 61, 62, 69, 70, 74, 75, 76, 80, 82, 87, 88, 90, 94, 107, 112, 116, 118, 120, 122, 129, 132, 141, 143, 147, 148, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 195, 209, 218, 232, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 247, 248, 251, 253, 254, 255, 259, 260, 262, 263, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 308, 309, 329, 330, 346, 352, 353, 355, 357, 358, 359], "int": [0, 1, 3, 4, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 60, 61, 62, 67, 70, 74, 75, 77, 78, 79, 86, 102, 108, 109, 147, 153, 154, 163, 177, 233, 234, 235, 236, 237, 238, 241, 242, 244, 245, 247, 248, 253, 254, 255, 260, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 352, 353, 357, 358, 359], "none": [0, 1, 3, 4, 5, 6, 12, 13, 22, 39, 42, 51, 54, 55, 58, 60, 61, 62, 70, 72, 74, 75, 81, 82, 90, 91, 105, 116, 117, 119, 121, 137, 138, 139, 140, 144, 145, 147, 153, 175, 176, 177, 178, 182, 183, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 329, 330, 346, 352, 353, 357, 358, 359, 364], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 17, 18, 19, 20, 21, 22, 23, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 89, 90, 91, 101, 102, 103, 104, 105, 110, 113, 114, 116, 117, 119, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 153, 157, 158, 160, 162, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 181, 182, 183, 184, 187, 200, 201, 202, 203, 204, 205, 213, 215, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 349, 350, 352, 353, 357, 358, 359, 362, 364], "A": [0, 3, 12, 51, 54, 58, 61, 83, 84, 90, 105, 110, 113, 118, 120, 143, 148, 153, 168, 170, 175, 177, 182, 183, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 306, 326, 329, 330, 341, 343, 346, 351, 352, 353, 357, 358, 359, 364], "surfac": [0, 54, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 80, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 230, 276, 277, 278, 279, 280, 281, 288, 298, 302, 334, 335, 341, 346, 349, 350, 351, 352, 357, 360], "object": [0, 12, 54, 61, 82, 116, 121, 146, 147, 148, 157, 177, 191, 192, 206, 210, 211, 228, 247, 280, 287, 288, 313, 314, 315, 316, 317, 320, 321, 322, 323, 333, 334, 335, 336, 337, 338, 346, 358, 360], "vert": [0, 2, 74, 116, 117], "face": [0, 2, 116, 117, 118, 120, 122, 129, 133, 358], "line": [0, 230, 235, 249, 287, 317, 323, 333, 343, 346, 348, 358, 360, 364], "represent": [0, 27, 28, 43, 44, 45, 47, 48, 49, 50, 52, 74, 358], "repres": [0, 14, 15, 61, 90, 116, 122, 141, 188, 189, 190, 218, 236, 287, 288, 346, 355, 358, 364], "thi": [0, 3, 5, 8, 12, 25, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 59, 60, 61, 68, 69, 74, 80, 116, 119, 128, 129, 130, 133, 134, 135, 137, 139, 141, 143, 147, 157, 160, 187, 200, 201, 202, 203, 208, 214, 219, 220, 223, 273, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 290, 291, 302, 305, 307, 309, 311, 314, 330, 333, 334, 335, 336, 337, 338, 341, 343, 346, 347, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364], "calcul": [0, 2, 3, 17, 18, 22, 25, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 144, 154, 157, 163, 167, 177, 182, 188, 189, 190, 191, 196, 206, 209, 210, 211, 212, 214, 215, 220, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 302, 305, 306, 307, 308, 317, 323, 337, 342, 349, 350, 351, 352, 354, 355, 357, 358, 359, 360, 362, 364], "correspond": [0, 51, 54, 69, 74, 111, 346, 351, 352, 357, 359, 364], "reciproc": [0, 12, 39, 61, 70, 111, 124, 126, 129, 139, 153, 173, 177, 311, 352, 364], "lattic": [0, 12, 23, 39, 61, 70, 90, 91, 92, 93, 95, 96, 97, 100, 105, 106, 111, 114, 124, 126, 129, 132, 139, 153, 173, 177, 306, 311, 352, 364], "paramet": [0, 3, 6, 12, 17, 22, 23, 39, 42, 51, 54, 58, 59, 60, 61, 67, 69, 70, 72, 74, 82, 83, 84, 89, 90, 101, 102, 103, 104, 105, 113, 114, 116, 119, 121, 122, 123, 141, 143, 144, 147, 153, 157, 167, 168, 170, 175, 177, 182, 183, 206, 220, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 309, 311, 343, 346, 352, 353, 354, 355, 357, 358, 359, 362, 364], "np": [0, 3, 12, 14, 15, 16, 17, 23, 24, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 60, 69, 72, 74, 83, 84, 85, 104, 105, 106, 111, 113, 114, 123, 153, 162, 173, 174, 177, 179, 180, 185, 186, 192, 210, 253, 254, 255, 284, 285, 287, 342, 343, 352, 364], "us": [0, 42, 54, 61, 74, 80, 116, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 148, 157, 167, 182, 192, 206, 210, 211, 214, 220, 221, 222, 223, 224, 225, 226, 227, 234, 235, 267, 271, 272, 273, 276, 277, 278, 279, 280, 283, 284, 287, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 317, 323, 329, 330, 333, 335, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364], "gener": [0, 74, 124, 128, 129, 130, 133, 137, 277, 281, 286, 287, 288, 289, 301, 302, 303, 305, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 349, 350, 353, 355, 357, 358, 359, 360], "brillouin": [0, 39, 74, 124, 129, 277, 278, 279, 280, 288, 353, 357, 358, 364], "zone": [0, 39, 74, 124, 129, 277, 278, 279, 280, 288, 353, 357, 358, 364], "usgin": 0, "wigner": [0, 2, 360], "seitz": [0, 2, 360], "3": [0, 3, 5, 6, 12, 14, 15, 17, 27, 28, 42, 61, 74, 90, 116, 118, 147, 277, 281, 287, 288, 308, 343, 346, 348, 357, 359, 360, 364], "float": [0, 6, 12, 13, 22, 39, 51, 58, 61, 62, 74, 75, 76, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 115, 116, 118, 121, 153, 177, 178, 182, 183, 184, 230, 234, 235, 236, 237, 238, 249, 253, 254, 255, 259, 262, 263, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 352, 357, 358], "ani": [0, 3, 4, 61, 200, 203, 287, 288, 346, 352, 354, 357, 358, 362], "transform": [0, 42, 74, 83, 84, 113, 346, 352], "appli": [0, 23, 74, 276, 346, 351, 352, 362], "unit": [0, 115], "cell": [0, 2, 74, 98, 99, 109, 112, 115, 349, 350, 358, 364], "rotat": [0, 23, 90, 91, 175, 176, 329, 330, 358, 360], "supercel": [0, 61, 62, 277, 278, 279, 280, 281, 288, 358, 359, 364], "default": [0, 3, 6, 12, 22, 39, 42, 54, 59, 60, 61, 69, 70, 72, 74, 82, 89, 101, 102, 103, 104, 105, 114, 116, 119, 121, 123, 141, 144, 147, 153, 157, 168, 170, 175, 177, 182, 183, 228, 230, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 311, 317, 323, 330, 352, 353, 355, 357, 358, 359], "method": [0, 3, 12, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 81, 83, 84, 90, 105, 110, 113, 116, 135, 137, 139, 141, 143, 144, 153, 157, 160, 166, 168, 170, 175, 177, 182, 183, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 276, 277, 278, 279, 280, 281, 333, 334, 335, 336, 337, 338, 346, 352, 360], "attribut": [0, 3, 12, 61, 74, 81, 90, 116, 144, 157, 170, 177, 183, 314, 346], "brillouinzon": [1, 2, 129], "initi": [1, 62, 75, 117, 146, 207, 276, 278, 333, 346], "polydata": [1, 39, 62, 75, 116, 117, 129, 133], "form": [2, 174, 210, 211, 346], "tupl": [2, 61, 70, 80, 116, 277, 278, 279, 280, 281, 287, 288, 358], "contain": [2, 3, 54, 61, 74, 82, 120, 139, 259, 262, 283, 287, 288, 302, 311, 329, 330, 346, 352, 357, 358, 359], "return": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 220, 228, 230, 231, 232, 233, 239, 240, 243, 246, 247, 252, 279, 280, 282, 287, 288, 289, 314, 346, 357, 358], "type": [2, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 61, 72, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 129, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 187, 191, 192, 193, 194, 206, 210, 211, 215, 228, 230, 231, 232, 233, 239, 240, 243, 246, 247, 252, 273, 279, 280, 282, 284, 285, 287, 288, 289, 302, 346, 351, 352, 357, 358], "n_vert": 2, "n_face": 2, "energi": [3, 4, 10, 12, 54, 58, 59, 60, 61, 125, 126, 127, 129, 139, 150, 153, 172, 177, 197, 212, 267, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 311, 329, 330, 333, 334, 335, 336, 337, 338, 349, 350, 352, 357, 358, 360, 364], "dtype": [3, 4], "float64": [3, 4], "total": [3, 4, 125, 129, 149, 150, 193, 194, 234, 236, 237, 238, 287, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 352, 353, 355, 359, 360], "project": [3, 4, 5, 12, 13, 22, 23, 40, 41, 49, 50, 54, 60, 61, 71, 72, 73, 125, 126, 127, 129, 147, 148, 149, 157, 182, 186, 192, 193, 234, 235, 253, 254, 255, 277, 278, 279, 280, 284, 285, 287, 288, 309, 311, 313, 315, 316, 317, 320, 321, 322, 323, 329, 337, 346, 349, 350, 353, 354, 355, 358, 359, 360], "interpolation_factor": [3, 4, 61, 62, 74, 75, 153, 177, 178, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 352, 358, 364], "1": [3, 4, 5, 6, 12, 22, 53, 61, 62, 74, 75, 80, 114, 116, 147, 153, 177, 178, 183, 184, 230, 234, 235, 237, 238, 249, 268, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 308, 309, 313, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 353, 357, 359, 360, 364], "densiti": [3, 6, 125, 129, 134, 144, 149, 150, 157, 193, 223, 228, 233, 234, 273, 283, 287, 293, 297, 302, 307, 308, 324, 349, 350, 351, 352, 357, 359, 360], "state": [3, 6, 74, 125, 129, 134, 144, 149, 150, 193, 228, 233, 234, 273, 283, 287, 293, 297, 302, 308, 324, 346, 349, 350, 351, 352, 357, 360], "function": [3, 61, 74, 80, 119, 137, 147, 187, 200, 201, 202, 203, 219, 223, 282, 283, 284, 285, 287, 288, 296, 302, 305, 307, 311, 346, 349, 350, 352, 354, 355, 357, 358, 360, 364], "theori": [3, 287, 307, 350], "point": [3, 23, 24, 35, 37, 39, 74, 76, 77, 78, 79, 82, 105, 127, 129, 130, 135, 174, 181, 253, 254, 255, 267, 283, 287, 288, 289, 341, 343, 349, 350, 354, 357, 358, 360, 364], "spectrum": 3, "shape": [3, 12, 14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "n_do": 3, "each": [3, 14, 15, 16, 40, 41, 53, 61, 74, 76, 107, 116, 125, 129, 195, 205, 209, 251, 253, 254, 255, 287, 288, 346, 351, 352, 353, 354, 355, 358, 359, 360], "element": [3, 151, 152, 155, 159, 161, 164, 200, 203, 251, 287, 359], "orbit": [3, 5, 6, 7, 12, 22, 36, 60, 61, 147, 234, 235, 236, 237, 238, 277, 278, 279, 280, 283, 284, 285, 287, 288, 314, 315, 316, 317, 320, 321, 322, 323, 329, 330, 336, 337, 349, 350, 354, 355, 357, 358, 360, 364], "spin": [3, 6, 11, 22, 38, 54, 60, 61, 68, 73, 127, 141, 147, 150, 233, 234, 235, 236, 237, 238, 247, 248, 253, 254, 255, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 302, 306, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 326, 329, 332, 334, 335, 336, 339, 341, 342, 343, 345, 346, 349, 350, 353, 355, 358, 360, 364], "etc": [3, 351, 352, 358], "n_atom": [3, 12, 40, 41, 54], "n_princip": 3, "n_orbit": [3, 40, 41, 54], "n_spin": [3, 12, 40, 41, 54, 125, 129], "i_princip": 3, "work": [3, 61, 288, 326, 329, 346, 347, 352, 357, 358], "like": [3, 60, 346, 351, 352], "princip": [3, 22, 37, 234, 235, 237, 238], "quantum": [3, 6, 22, 37, 157, 222, 223, 224, 225, 226, 234, 235, 237, 238, 307, 308, 312, 318, 319, 324, 345, 350, 351, 352, 360], "number": [3, 6, 9, 10, 11, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 61, 72, 77, 78, 79, 86, 94, 101, 102, 108, 109, 122, 154, 163, 234, 235, 237, 238, 277, 279, 281, 287, 288, 289, 346, 352, 354, 358, 360, 362], "n": [3, 6, 61, 74, 90, 118, 311, 360], "The": [3, 6, 9, 10, 11, 12, 17, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 54, 58, 59, 60, 61, 67, 69, 72, 74, 77, 78, 79, 82, 83, 84, 86, 87, 88, 92, 93, 95, 96, 97, 100, 101, 102, 104, 105, 111, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 141, 144, 150, 153, 157, 167, 168, 170, 174, 175, 177, 179, 180, 182, 183, 185, 186, 191, 193, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 239, 240, 241, 243, 244, 247, 249, 253, 254, 255, 263, 271, 272, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 308, 309, 311, 317, 320, 323, 326, 342, 343, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364], "last": [3, 151, 155, 159, 164, 172, 173, 189, 196, 212, 217, 352], "index": [3, 6, 24, 46, 54, 67, 147, 280, 350, 351, 352, 357, 359, 360], "should": [3, 22, 84, 122, 181, 201, 286, 287, 342, 346, 351, 352, 353, 357, 358, 359, 364], "0": [3, 5, 6, 39, 60, 61, 62, 74, 80, 114, 116, 147, 181, 183, 184, 234, 249, 269, 277, 278, 279, 280, 281, 287, 288, 290, 306, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 351, 352, 355, 357, 358, 359, 360, 362, 364], "2": [3, 5, 6, 61, 74, 80, 147, 287, 288, 308, 309, 311, 313, 315, 316, 321, 322, 330, 334, 335, 336, 337, 346, 357, 359, 360, 364], "": [3, 5, 6, 134, 147, 287, 288, 305, 343, 346, 351, 355, 357, 358, 359, 360], "p": [3, 5, 287, 288, 311, 313, 351, 355, 358, 359], "d": [3, 5, 14, 15, 287, 288, 313, 346, 351, 352, 354, 355, 358], "i_orbit": 3, "similar": [3, 287, 288, 305, 346, 355, 358], "angular": [3, 360], "l": [3, 5, 309, 351, 352, 360, 364], "same": [3, 6, 84, 90, 122, 283, 288, 293, 302, 306, 308, 309, 311, 317, 323, 346, 351, 352, 354, 355, 357, 358, 359, 360], "follow": [3, 74, 129, 181, 223, 273, 287, 288, 302, 306, 308, 309, 311, 330, 341, 343, 346, 348, 351, 352, 353, 355, 358, 359, 360, 364], "order": [3, 5, 6, 90, 287, 288, 343, 346, 351, 352, 354, 358], "4": [3, 5, 6, 39, 61, 147, 287, 288, 313, 314, 316, 317, 320, 322, 323, 329, 336, 337, 346, 351, 354, 358, 360, 364], "5": [3, 5, 6, 74, 101, 102, 103, 104, 116, 147, 182, 278, 287, 288, 306, 309, 311, 313, 314, 316, 317, 320, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 341, 343, 346, 351, 352, 354, 358, 360, 364], "6": [3, 6, 60, 147, 287, 288, 306, 313, 314, 316, 317, 320, 322, 323, 326, 329, 330, 334, 335, 336, 337, 341, 343, 346, 351, 352, 354, 357, 358, 360], "7": [3, 6, 147, 287, 288, 313, 314, 316, 317, 320, 322, 323, 329, 334, 335, 336, 337, 341, 346, 351, 352, 354, 355, 358, 360], "8": [3, 6, 147, 287, 288, 309, 313, 314, 315, 316, 317, 320, 321, 322, 323, 329, 334, 335, 336, 337, 338, 351, 352, 354, 355, 358, 360], "py": [3, 6, 147, 287, 288, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 348, 358, 359, 360], "pz": [3, 6, 147, 287, 288, 358, 359, 360], "px": [3, 6, 147, 287, 288, 358, 359, 360], "dxy": [3, 6, 147, 287, 288, 358, 360], "dyz": [3, 6, 147, 287, 288, 358, 360], "dz2": [3, 6, 147, 287, 288, 358, 360], "dxz": [3, 6, 147, 287, 288, 358, 360], "dx2": [3, 360], "y2": [3, 6, 74, 147, 287, 288, 289, 341, 358], "i_spin": 3, "magnet": [3, 351, 352, 360], "m": [3, 5, 115, 306, 351, 352, 353, 360, 364], "up": [3, 141, 150, 181, 287, 317, 323, 348, 352, 355, 358, 359, 364], "down": [3, 150, 287, 317, 323, 352, 355, 358, 359, 364], "increas": [3, 61, 74, 288, 358, 364], "factor": [3, 61, 74, 144, 153, 177, 183, 277, 278, 279, 280, 281, 285, 287, 288, 358, 364], "interpol": [3, 59, 60, 74, 80, 128, 129, 144, 153, 177, 183, 277, 278, 279, 280, 281, 284, 285, 287, 288, 352, 358], "densityofst": [4, 5, 6, 7, 8, 9, 10, 11, 129, 146, 147, 148, 191, 228, 229, 273], "convert": [5, 187, 360], "coupl": [5, 315, 321, 358], "uncoupl": 5, "assum": [5, 346], "ar": [5, 39, 42, 58, 60, 74, 82, 116, 129, 150, 157, 219, 236, 273, 284, 285, 287, 288, 302, 306, 317, 323, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360], "coupled_orbit": 5, "j": [5, 343, 346, 351], "uncoupled_orbit": 5, "ret": [5, 6, 22, 200, 203], "atom": [6, 22, 33, 60, 61, 71, 73, 90, 91, 94, 107, 108, 129, 132, 147, 148, 154, 157, 163, 234, 235, 236, 237, 277, 278, 279, 280, 283, 284, 285, 287, 288, 302, 313, 315, 316, 317, 320, 321, 322, 323, 329, 330, 336, 337, 349, 350, 355, 357, 358, 360, 364], "principal_q_numb": [6, 22, 234, 235, 237, 238], "sum_noncolinear": [6, 22], "bool": [6, 8, 12, 22, 25, 39, 60, 82, 84, 105, 168, 182, 234, 235, 236, 237, 238, 254, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 352, 353, 357, 358, 359], "true": [6, 22, 39, 81, 82, 135, 136, 168, 169, 182, 208, 234, 235, 236, 237, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 306, 308, 309, 311, 314, 329, 330, 333, 334, 335, 336, 337, 338, 341, 343, 352, 353, 355, 357, 358, 362, 364], "tabl": [6, 287, 288, 358, 364], "lm": [6, 351, 352, 360], "tot": [6, 352, 360], "x2": [6, 74, 147, 287, 288, 289, 341, 358], "need": [6, 39, 137, 147, 208, 267, 287, 305, 333, 334, 335, 336, 337, 338, 341, 343, 346, 352, 354, 355, 358, 359, 364], "sume": [6, 147], "over": [6, 17, 22, 147, 288, 346, 347, 349, 350, 355, 358, 360], "count": [6, 287, 288, 351, 352, 357, 358, 359], "from": [6, 60, 61, 116, 119, 124, 129, 130, 133, 137, 139, 144, 147, 157, 283, 286, 287, 288, 341, 343, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 359, 360, 362, 364], "zero": [6, 287, 288, 351, 352, 358, 360], "input": [6, 167, 223, 286, 287, 288, 291, 302, 305, 308, 309, 352, 353, 358, 362], "i": [6, 8, 12, 14, 15, 16, 25, 40, 41, 42, 53, 54, 60, 61, 72, 74, 105, 114, 116, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 141, 143, 157, 167, 181, 201, 208, 221, 222, 223, 224, 225, 226, 227, 228, 233, 247, 271, 272, 273, 274, 276, 283, 285, 286, 287, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 314, 317, 323, 329, 330, 333, 334, 335, 336, 337, 338, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364], "sum": [6, 22, 147, 352, 355, 358], "string": [7, 121, 154, 163, 233, 234, 235, 236, 237, 238, 251, 256, 257, 258, 261, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 333, 352, 353, 357], "current": [7, 42, 308, 350, 351, 352], "basi": [7, 26, 29, 30, 31, 32, 39, 42, 315, 321, 351], "str": [7, 39, 54, 59, 60, 61, 62, 69, 72, 74, 75, 89, 90, 101, 112, 119, 121, 122, 123, 144, 147, 153, 157, 158, 166, 167, 168, 170, 175, 177, 178, 182, 183, 219, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 249, 251, 256, 257, 258, 260, 261, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 352, 353, 357, 358, 359, 362], "properti": [8, 9, 10, 11, 14, 15, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 53, 76, 77, 78, 79, 80, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 108, 109, 111, 112, 115, 118, 120, 146, 148, 149, 150, 151, 152, 154, 155, 156, 159, 161, 163, 164, 165, 172, 173, 174, 179, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 288, 346], "boolean": [8, 12, 25, 39, 84, 105, 168, 182, 230, 234, 235, 236, 237, 238, 254, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 352, 353, 357, 358], "non": [8, 22, 25, 68, 287, 288, 309, 311, 312, 313, 314, 318, 319, 320, 324, 326, 330, 333, 334, 335, 336, 338, 342, 343, 345, 346, 351, 352, 358, 359, 360, 364], "colinear": [8, 22, 25, 68, 286, 306, 309, 311, 312, 317, 318, 319, 323, 324, 329, 330, 333, 337, 338, 343, 345, 351, 352, 353, 358, 359], "calc": [8, 208], "do": [9, 61, 134, 147, 148, 157, 192, 194, 228, 229, 234, 236, 237, 238, 239, 283, 287, 288, 308, 309, 311, 317, 319, 320, 323, 324, 326, 333, 334, 335, 336, 337, 338, 341, 343, 346, 351, 352, 354, 355, 358], "valu": [9, 10, 61, 74, 121, 123, 126, 128, 129, 130, 182, 234, 235, 236, 253, 254, 255, 277, 278, 279, 280, 284, 285, 287, 288, 289, 330, 335, 352, 353, 355, 357, 358], "channel": [11, 38, 287, 351, 352, 360], "kpoint": [12, 13, 23, 24, 26, 27, 28, 29, 30, 31, 32, 39, 42, 46, 47, 48, 51, 54, 55, 61, 62, 69, 72, 82, 83, 84, 89, 126, 128, 129, 135, 136, 153, 162, 169, 177, 178, 179, 180, 182, 211, 223, 265, 266, 276, 288, 290, 308, 309, 311, 341, 343, 352, 358, 359, 360, 364], "band": [12, 13, 14, 15, 16, 23, 34, 42, 45, 54, 55, 58, 61, 62, 66, 67, 72, 74, 82, 86, 126, 127, 129, 131, 134, 141, 157, 158, 160, 182, 186, 228, 233, 247, 252, 256, 257, 265, 266, 271, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 288, 290, 294, 295, 299, 300, 302, 306, 308, 318, 323, 326, 333, 334, 335, 336, 337, 338, 342, 343, 349, 350, 351, 355, 357, 358, 359, 360], "efermi": [12, 13, 137, 138, 177, 178, 306, 364], "projected_phas": [12, 13, 50], "weight": [12, 13, 42, 51, 52, 53, 126, 129, 211, 253, 254, 255, 308, 359, 360, 364], "kpath": [12, 13, 39, 82, 83, 84, 85, 86, 87, 88, 89, 126, 129, 137, 138, 160, 177, 178, 247, 248, 283, 302, 308, 343], "label": [12, 13, 56, 57, 82, 232, 234, 235, 236, 237, 238, 240, 243, 251, 258, 261, 283, 287, 308, 309, 311, 343, 352, 355, 357, 360, 364], "store": [12, 14, 15, 16, 24, 40, 41, 53, 61, 125, 126, 128, 129, 131, 132, 219, 276, 288, 358, 359], "electron": [12, 126, 129, 134, 153, 185, 188, 189, 195, 209, 228, 247, 271, 273, 326, 329, 330, 341, 343, 346, 349, 350, 351, 352, 358, 360], "structur": [12, 42, 61, 82, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 129, 131, 134, 139, 151, 152, 157, 159, 161, 177, 178, 182, 198, 200, 204, 207, 228, 229, 247, 252, 257, 265, 273, 274, 283, 290, 294, 295, 299, 300, 302, 306, 308, 318, 326, 329, 330, 341, 342, 343, 346, 349, 350, 351, 354, 355, 359, 360, 364], "informomr": 12, "arrai": [12, 14, 15, 16, 40, 41, 53, 54, 60, 61, 69, 72, 85, 114, 125, 127, 129, 130, 132, 148, 192, 205, 287, 288, 290, 343, 351, 352, 358, 364], "Will": 12, "have": [12, 208, 287, 288, 302, 308, 346, 347, 354, 355, 357, 358, 359, 360], "n_kpoint": [12, 54, 60], "n_band": [12, 14, 15, 16, 40, 41, 54, 60], "fermi": [12, 54, 59, 60, 61, 62, 64, 65, 68, 69, 72, 126, 127, 128, 129, 134, 139, 153, 172, 177, 230, 249, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 298, 302, 308, 329, 330, 333, 334, 335, 336, 337, 338, 341, 346, 349, 350, 351, 352, 357, 359, 360, 364], "norbit": 12, "full": [12, 287, 288, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 353, 358], "incud": 12, "complex": 12, "part": [12, 190, 346, 358], "clacul": 12, "name": [12, 69, 72, 87, 122, 123, 144, 153, 157, 240, 242, 243, 245, 256, 258, 260, 261, 276, 277, 278, 279, 282, 283, 284, 285, 288, 346, 351, 352, 358, 359, 364], "vector": [12, 69, 90, 92, 93, 95, 96, 97, 100, 116, 117, 123, 139, 173, 258, 288, 311, 351, 352, 358], "matrix": [12, 39, 42, 74, 83, 84, 90, 105, 111, 113, 114, 124, 129, 132, 153, 174, 177, 357, 358, 364], "shifted_to_efermi": 12, "determin": [12, 22, 25, 39, 60, 82, 84, 105, 168, 346, 357, 358], "shift": [12, 61, 80, 277, 278, 279, 280, 281, 358], "fals": [12, 39, 60, 84, 238, 254, 275, 276, 277, 278, 279, 280, 283, 285, 286, 287, 288, 309, 314, 329, 330, 333, 352, 353, 354, 357, 358, 359, 364], "electronicbandstructur": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 129, 247, 248, 273, 360], "gradient": [14, 17], "mesh": [14, 15, 16, 17, 24, 27, 28, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 69, 301, 311, 341, 349, 350, 358, 360], "numpi": [14, 15, 16, 40, 41, 53, 54, 60, 61, 74, 125, 127, 129, 130, 132, 287, 288, 342, 343, 348, 358, 364], "grid": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53, 74, 76, 77, 78, 79, 84, 283, 287, 288, 311, 341, 343, 352, 357, 358], "n_kx": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "n_ky": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "n_kz": [14, 15, 16, 17, 24, 27, 28, 40, 41, 53], "where": [14, 15, 157, 236, 276, 284, 285, 288, 302, 309, 333, 346, 352, 353, 357, 358, 359, 360], "first": [14, 15, 66, 67, 74, 92, 96, 100, 152, 161, 306, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 346, 354, 357, 358, 359, 364], "dimens": [14, 15], "dx": [14, 15], "dy": [14, 15], "dz": [14, 15], "fradient": 14, "hessian": 15, "second": [15, 67, 93, 95, 100, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 358], "scalar_mesh": [17, 18], "scalar": [17, 18, 72, 116, 117, 122, 128, 129, 130, 358], "k": [17, 35, 39, 127, 129, 131, 135, 181, 258, 267, 301, 302, 306, 308, 314, 341, 349, 350, 353, 354, 357, 358, 360, 364], "cartesian": [17, 26, 27, 39, 61, 162, 179, 358, 360], "coordin": [17, 61, 74, 129, 130, 132, 162, 179, 180, 289, 341, 360], "scalar_gradient_mesh": 17, "integr": 18, "nd_list": 19, "scalar_list": 20, "vector_list": 21, "_summary_": [22, 289], "symmetri": [23, 82, 101, 102, 103, 104, 168, 174, 182, 276, 329, 330, 352, 353, 358], "oper": [23, 174, 346, 357], "particular": [24, 288, 308, 346, 357, 358, 359], "rtype": [27, 28], "fraction": [29, 90, 129, 132], "uniqu": [30, 31, 32, 343], "kx": [30, 31], "direct": [30, 31, 32, 61, 70, 74, 76, 77, 78, 79, 277, 278, 279, 280, 281, 287, 288, 289, 341, 346, 351, 352, 353, 357, 358, 359], "reduc": [30, 31, 32, 39, 180, 276, 359, 360], "ky": 32, "numbersk": 37, "show_brillouin_zon": 39, "color": [39, 54, 60, 61, 62, 116, 121, 122, 230, 233, 234, 235, 236, 237, 238, 249, 253, 254, 255, 260, 269, 277, 278, 279, 280, 283, 287, 288, 314, 317, 323, 329, 341, 343, 351, 352, 354, 355, 357, 364], "r": [39, 261, 287, 306, 352, 355, 358], "point_siz": [39, 341, 343], "render_points_as_spher": [39, 341, 343], "move": [39, 311, 358], "core": [39, 42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 177, 182, 191, 192, 210, 211, 218, 228, 247, 335, 358], "updat": [39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 122, 123, 346], "new": [39, 42, 181, 288, 346, 358, 359], "implement": [39, 267, 346, 352], "pyvista": [39, 74, 116, 129, 133, 288, 333, 334, 335, 336, 337, 338, 341, 343, 348, 358], "plot": [39, 54, 56, 57, 60, 110, 127, 129, 131, 134, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 264, 265, 267, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 290, 293, 294, 295, 297, 298, 299, 300, 302, 306, 312, 318, 319, 324, 327, 328, 331, 332, 339, 349, 350, 351, 353, 354, 355, 358, 359, 360, 362], "wether": 39, "show": [39, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 308, 309, 311, 314, 333, 334, 336, 337, 338, 341, 343, 346, 352, 354, 355, 357, 358, 364], "size": [39, 42, 54, 60, 61, 72, 84, 122, 269, 270, 277, 278, 279, 280, 283, 288, 333, 343, 357, 358, 359, 364], "how": [39, 82, 134, 288, 309, 346, 358], "render": [39, 333, 334, 335, 336, 337, 338, 341, 343, 346, 358], "phase": [41, 50, 126, 129, 311, 364], "help": [42, 54, 127, 129, 144, 307, 309, 311, 346, 347, 358, 359, 364], "done": [42, 278, 287, 311, 326, 342, 348, 353, 357], "find": [42, 58, 59, 60, 61, 74, 80, 172, 173, 174, 282, 340, 344, 345, 346, 352, 364], "expect": [42, 54, 126, 127, 129, 132, 273, 302, 346], "pyprocar": [42, 83, 84, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 147, 148, 151, 152, 155, 156, 159, 161, 164, 165, 182, 191, 192, 221, 222, 223, 224, 225, 226, 227, 271, 272, 273, 274, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364], "materi": [42, 101, 102, 288, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343, 346, 351, 352, 354, 358], "bands_gradi": 43, "bands_hessian": 44, "spd": [54, 55, 61, 62, 265, 266], "band_indic": [54, 55, 329, 330, 357], "band_color": [54, 55, 329, 330, 357], "cmap": [54, 55, 61, 62, 121, 234, 235, 267, 268, 270, 277, 278, 279, 280, 281, 283, 287, 288, 337, 351, 352, 357, 358], "jet": [54, 55, 234, 235, 268, 277, 278, 279, 280, 281, 283, 287, 288, 337, 352, 354, 357, 358], "loglevel": [54, 55], "30": [54, 55, 287, 309, 346], "2d": [54, 59, 60, 127, 129, 278, 285, 288, 295, 300, 301, 302, 330, 341, 349, 350, 358, 360], "nx3": 54, "alreadi": [54, 60, 346], "substract": 54, "n_kppint": 54, "indic": [54, 287, 288, 313, 315, 316, 317, 320, 321, 322, 323, 346, 352, 357, 358, 364], "given": [54, 58, 127, 129, 147, 329, 337, 341, 343, 346, 349, 350, 352, 355, 357, 364], "_type_": [54, 144, 279, 283, 284, 285, 289, 291, 352, 359, 362], "verbos": [54, 283, 287], "level": [54, 59, 60, 267, 283, 288, 334, 335, 351, 352, 358, 359], "log": 54, "warn": [54, 335], "fermisurfac": [55, 56, 57, 58, 59, 60, 129, 280], "add": [56, 57, 61, 267, 287, 309, 346, 357], "matplotlib": [56, 57, 59, 228, 247, 284, 285, 287, 288, 314, 348, 351, 358, 360], "which": [58, 66, 74, 120, 147, 287, 288, 302, 309, 311, 317, 323, 337, 346, 351, 352, 357, 358, 364], "search": [58, 61, 277, 278, 279, 280, 281, 288, 334, 335, 350, 358], "around": [58, 288, 334, 335, 358, 360], "rais": [58, 59, 60, 114, 183, 279, 357, 359], "runtimeerror": [58, 59, 60, 357, 359], "If": [58, 61, 228, 247, 286, 287, 288, 311, 333, 346, 347, 352, 353, 355, 358, 359], "found": [58, 172, 181, 183, 309, 342, 343, 346, 355, 360], "an": [58, 74, 85, 128, 129, 130, 133, 205, 228, 247, 279, 280, 305, 311, 314, 333, 334, 335, 336, 337, 338, 341, 343, 346, 351, 352, 355, 360], "error": [58, 59, 60, 114, 181, 208, 353, 357], "mode": [59, 277, 278, 279, 280, 283, 284, 285, 287, 288, 302, 308, 309, 311, 314, 330, 333, 346, 351, 352, 354, 357, 358, 360, 364], "500": 59, "along": [59, 60, 85, 346, 353], "z": [59, 60, 74, 76, 79, 123, 289, 330, 335, 341, 357, 358, 359, 360], "axi": [59, 287, 357], "onli": [59, 60, 89, 116, 181, 276, 287, 288, 308, 320, 323, 329, 330, 346, 347, 351, 352, 358, 359], "layer": [59, 60, 358], "geometri": [59, 60, 364], "set": [59, 74, 121, 122, 123, 173, 203, 240, 241, 242, 243, 244, 245, 257, 258, 259, 260, 261, 262, 263, 286, 287, 288, 305, 306, 308, 309, 311, 317, 323, 326, 330, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 362, 364], "pyplot": [59, 360], "instanc": [59, 302, 351, 352, 362, 364], "wa": [59, 60, 287, 346, 352, 360], "call": [59, 60, 276, 291, 302, 308, 309, 311, 333, 334, 335, 336, 337, 338, 346, 354, 358, 362], "befor": [59, 60, 357, 362, 364], "sx": 60, "sy": 60, "sz": 60, "arrow_project": [60, 330, 357], "no_arrow": [60, 329, 330, 357], "300": 60, "arrow_color": [60, 277, 278, 279, 280, 288, 330, 357, 358], "arrow_s": [60, 277, 278, 279, 280, 288, 330, 333, 338, 357, 358], "05": [60, 101, 102, 103, 104, 182, 290, 343], "arrow_dens": [60, 330, 357], "color_bar": [60, 330, 357], "textur": [60, 68, 73, 127, 277, 278, 279, 280, 288, 341, 346, 351, 352, 358, 360], "It": [60, 141, 181, 267, 287, 346, 351, 352, 357], "enhanc": 60, "version": [60, 305, 326, 329, 330, 341, 343, 346, 347, 348, 355, 358, 359], "nkpoint": 60, "x": [60, 74, 76, 77, 123, 240, 241, 258, 259, 260, 287, 289, 305, 306, 308, 309, 330, 341, 348, 352, 357, 358, 359, 360], "nband": [60, 360], "thei": [60, 181, 346, 354], "also": [60, 288, 305, 309, 317, 323, 329, 330, 346, 351, 352, 357, 358, 364], "other": [60, 74, 200, 287, 288, 343, 344, 346, 352, 357, 358, 359, 360, 362], "compon": [60, 346, 357, 359, 360], "y": [60, 74, 76, 78, 123, 243, 244, 261, 262, 263, 287, 289, 330, 341, 343, 357, 358, 359, 360], "marker": [60, 269, 270], "arrow": [60, 277, 278, 279, 280, 288, 330, 357, 358], "whether": [60, 287, 346, 364], "eb": [61, 62, 157, 247, 248, 317, 323], "bands_to_keep": [61, 62], "spd_spin": [61, 62], "fermi_shift": [61, 62, 277, 278, 279, 280, 281, 288, 358], "fermi_toler": [61, 62, 277, 278, 279, 280, 281, 288, 358], "surface_color": [61, 62], "projection_accuraci": [61, 62, 277, 278, 279, 280, 288, 358], "normal": [61, 62, 116, 121, 234, 235, 253, 254, 255, 277, 278, 279, 280, 284, 285, 288, 346, 352, 357, 358], "viridi": [61, 62, 121], "vmin": [61, 62, 121, 234, 235, 253, 254, 255, 267, 268, 270, 277, 278, 279, 280, 283, 284, 285, 287, 288, 313, 315, 316, 317, 320, 321, 322, 323, 334, 335, 336, 352, 357, 358, 364], "vmax": [61, 62, 121, 234, 235, 253, 254, 255, 267, 268, 270, 277, 278, 279, 280, 283, 284, 285, 287, 288, 313, 315, 316, 317, 320, 321, 322, 323, 334, 335, 336, 352, 357, 358, 364], "manapul": 61, "3d": [61, 68, 69, 72, 128, 129, 280, 288, 298, 302, 349, 350, 360], "dft": [61, 134, 287, 288, 308, 343, 346, 349, 350, 351, 352, 353, 355, 358, 360, 364], "ha": [61, 74, 129, 137, 167, 168, 220, 223, 273, 287, 288, 302, 305, 308, 309, 311, 314, 346, 358, 364], "being": [61, 287, 346], "differ": [61, 112, 287, 288, 308, 309, 311, 315, 321, 346, 352, 353, 354, 355, 358], "ith": 61, "coorespond": 61, "one": [61, 74, 80, 116, 172, 173, 267, 276, 287, 288, 308, 309, 311, 330, 343, 346, 351, 352, 353, 355, 357, 358, 359], "want": [61, 74, 116, 287, 288, 333, 346, 347, 357, 358, 359], "isosurfac": [61, 75, 76, 77, 78, 79, 80, 128, 129, 277, 278, 279, 280, 281, 334, 335, 358], "inform": [61, 116, 125, 126, 129, 131, 132, 135, 141, 144, 153, 160, 167, 202, 209, 211, 214, 215, 302, 311, 314, 330, 341, 343, 346, 351, 352, 355, 358, 359, 360], "about": [61, 116, 134, 214, 215, 314, 330, 346, 347, 355, 358], "improv": [61, 288, 358], "effienc": [61, 288, 358], "prior": [61, 137, 288, 346, 348, 358], "select": [61, 287, 288, 317, 323, 355, 358, 360], "within": [61, 288, 343, 346, 348, 352, 358, 359, 360, 364], "toler": [61, 101, 102, 103, 104, 277, 278, 279, 280, 281, 288, 343, 358], "everi": [61, 287, 346, 349, 350, 360], "you": [61, 134, 288, 307, 308, 309, 311, 329, 330, 333, 334, 335, 336, 337, 338, 341, 343, 346, 347, 348, 355, 358, 359, 364], "rgba": [61, 288, 358], "argument": [61, 283, 287, 288, 302, 326, 333, 346, 355, 358], "doe": [61, 287, 288, 329, 346, 355, 357, 358, 359], "whena": [61, 288, 358], "file": [61, 89, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 172, 174, 175, 177, 183, 221, 222, 224, 225, 226, 227, 256, 276, 280, 282, 283, 286, 287, 288, 290, 291, 296, 302, 304, 305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 346, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 364], "save": [61, 157, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 309, 329, 330, 352, 354, 357, 358, 364], "when": [61, 276, 277, 278, 279, 280, 281, 288, 305, 311, 314, 317, 323, 333, 334, 335, 336, 337, 338, 341, 343, 346, 351, 353, 354, 357, 358, 359], "save3d": [61, 288, 358], "we": [61, 208, 287, 288, 308, 309, 311, 346, 347, 351, 355, 357, 358, 360, 364], "recomend": [61, 288, 358], "qualit": [61, 288, 358], "colormap": [61, 121, 235, 277, 278, 279, 280, 281, 287, 288, 354, 357, 358], "automat": [61, 287, 288, 311, 341, 343, 346, 352, 358], "choos": [61, 287, 288, 346, 358], "e": [61, 74, 172, 261, 287, 288, 309, 346, 352, 355, 357, 358, 359], "g": [61, 74, 287, 288, 308, 309, 343, 352, 353, 357, 358, 359], "red": [61, 287, 288, 330, 337, 343, 352, 358], "blue": [61, 230, 233, 249, 269, 287, 288, 329, 330, 337, 341, 343, 352, 358, 364], "green": [61, 287, 288, 358], "control": [61, 288, 308, 346, 358], "accuraci": [61, 288, 358], "high": [61, 288, 352, 353, 358], "map": [61, 69, 82, 116, 121, 122, 234, 287, 288, 351, 352, 357, 358], "minimum": [61, 116, 121, 234, 235, 253, 254, 255, 277, 278, 279, 280, 284, 285, 287, 288, 352, 357, 358, 359], "maximum": [61, 121, 234, 253, 254, 255, 277, 278, 279, 280, 284, 285, 287, 288, 352, 357, 358, 359], "pad": [61, 74, 75], "assist": [61, 129, 273], "fermisurface3d": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 129, 358], "effect": [63, 277, 278, 279, 280, 288, 346, 357, 358], "mass": [63, 277, 278, 279, 280, 288, 358], "speed": [64, 277, 278, 279, 280], "veloc": [65, 277, 278, 279, 280, 288, 349, 350, 358], "helper": [66, 67, 143], "secoond": 66, "deriv": [66, 67], "all": [66, 74, 147, 172, 199, 218, 220, 286, 287, 288, 345, 346, 352, 353, 355, 357, 358, 359, 360, 364], "iband": 67, "creat": [68, 74, 116, 287, 288, 290, 308, 309, 311, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 343, 352, 358, 359], "case": [68, 157, 287, 288, 302, 346, 352, 353, 358, 359, 364], "vectors_arrai": 69, "vectors_nam": [69, 123], "extended_zone_direct": [70, 277, 278, 279, 280, 281, 288, 358], "extend": [70, 346], "vecctor": 70, "expand": [70, 277, 278, 279, 280, 281], "scalars_arrai": 72, "scalar_nam": [72, 122], "len": [72, 343], "self": [72, 74, 188, 189, 202, 311, 342], "length": [72, 76, 346], "iso": [72, 281, 288, 357, 358], "xyz": [74, 75], "v": [74, 75, 281, 287, 288, 351, 352, 355, 358], "isovalu": [74, 75, 129, 130, 281, 288, 358], "v_matrix": [74, 75], "algorithm": [74, 75], "lewin": [74, 75], "transform_matrix": [74, 75], "boundari": [74, 75], "equat": [74, 358, 360], "f": [74, 219, 308, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343, 346, 351, 352, 357, 358], "must": [74, 288, 302, 308, 309, 333, 343, 346, 352, 358, 364], "between": [74, 76, 82, 93, 96, 100, 116, 346, 352, 358, 362], "x1": [74, 289, 341], "y1": [74, 289, 341], "z1": 74, "z2": 74, "descript": [74, 80, 206, 355], "v1": [74, 287, 288, 358], "v2": 74, "constant": [74, 357], "nx": 74, "ny": 74, "nz": 74, "One": [74, 287, 288, 351, 352, 357, 358], "can": [74, 116, 134, 141, 287, 288, 302, 305, 306, 309, 311, 317, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 364], "present": [74, 109, 112, 173, 286, 287, 288, 346, 352, 353, 358], "instead": [74, 335, 346, 352, 357], "togeth": [74, 305, 346, 351, 352], "provid": [74, 121, 228, 247, 276, 286, 287, 288, 302, 305, 311, 346, 349, 350, 351, 352, 353, 355, 358, 360], "scikit": [74, 348], "imag": [74, 288, 333, 334, 335, 336, 337, 338, 341, 343, 348, 352, 358], "possibl": [74, 346, 351, 352, 358], "classic": 74, "modul": [74, 223, 286, 290, 291, 350, 353, 354, 357, 359, 362, 364], "fourier": [74, 288, 358], "dafault": [74, 355], "period": 74, "dataset": [74, 103, 335, 358, 359], "solid": 74, "1st": [74, 288, 358], "bz": [74, 353, 358, 364], "cover": [74, 346], "fulli": 74, "so": [74, 287, 346, 352, 354, 358, 359, 360], "might": [74, 346, 348, 355, 358], "wrap": 74, "look": [74, 288, 337, 358], "afterward": 74, "clip": 74, "easili": [74, 355], "doabl": 74, "trimesh": [74, 119, 121, 288, 348, 358], "goe": [74, 352, 355, 359], "eigen_matrix": 74, "In": [74, 134, 287, 288, 311, 343, 346, 347, 351, 352, 355, 358, 359, 360, 364], "word": [74, 287, 288, 358], "super": [74, 349, 350], "withpad": 74, "vertic": [74, 129, 133, 230, 234, 235, 236, 237, 238, 287, 306, 355, 358], "verts_prim": 74, "t": [74, 219, 267, 308, 346, 347, 358], "exampl": [74, 116, 147, 287, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 344, 346, 347, 351, 352, 355, 357, 359, 360], "space": [76, 101, 102, 334, 335, 343, 357, 358, 362, 364], "tri": [80, 181], "correct": [80, 346], "posit": [80, 88, 104, 242, 245, 260, 277, 278, 279, 280, 288, 333, 358], "abl": [80, 333, 351, 352, 358, 360], "min": 80, "max": 80, "kname": [81, 82, 283, 284, 285, 352, 364], "ktick": [81, 82, 283, 284, 285, 352, 364], "special_kpoint": [81, 82], "ngrid": [81, 82], "has_time_revers": [81, 82, 135, 136, 168, 169], "handl": [82, 223, 276, 358, 362], "tick": [82, 87, 88, 242, 245, 260, 263, 268, 269, 270], "special": [82, 346, 351, 357], "mani": [82, 288, 346, 351, 352, 358, 359], "time": [82, 168, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 358, 364], "revers": [82, 168, 343, 346], "get": [83, 84, 160, 292, 308, 343, 346, 358], "same_grid_s": 84, "optim": 84, "after": [84, 346, 355, 360], "transformm": 84, "retain": [84, 346], "segment": [86, 357], "filenam": [89, 135, 136, 141, 143, 144, 153, 157, 168, 169, 170, 171, 175, 176, 177, 178, 182, 183, 184, 239, 256, 282, 283, 287, 291, 333, 355, 357, 362, 364], "fmt": 89, "vasp": [89, 137, 144, 206, 220, 223, 227, 282, 283, 284, 285, 287, 288, 305, 307, 308, 312, 314, 318, 319, 324, 342, 343, 345, 350, 351, 352, 354, 355, 357, 358, 360, 362, 364], "write": [89, 346, 359], "support": [89, 288, 308, 309, 346, 348, 350, 351, 352, 358], "moment": [89, 360], "_description_": [89, 279, 283, 285, 289, 357, 359], "cartesian_coordin": [90, 91], "fractional_coordin": [90, 91], "defin": [90, 287, 288, 343, 346, 352, 355, 357, 358, 359, 360], "perid": 90, "crystal": [90, 92, 93, 95, 96, 97, 100, 105, 106, 111, 217, 308, 309, 343, 349, 350], "symbol": [90, 129, 132], "natom": 90, "coordinatesd": 90, "magnitud": [92, 95, 97, 288, 351, 352, 358], "angl": [93, 96, 100, 343, 357], "third": [93, 96, 97, 346], "convex": [98, 110], "hull": [98, 110], "scipi": [98, 348], "spatial": 98, "convexhul": 98, "symprec": [101, 102, 103, 104, 182, 290, 343], "1e": [101, 102, 103, 104, 182, 290, 343], "intern": 101, "group": [101, 102, 329, 330], "spglib": [103, 182], "dict": [103, 149, 150, 193, 194, 211, 215, 236, 283, 284, 285, 287, 352, 355], "wyckoff": 104, "insid": [105, 141, 346], "unitcel": 105, "question": 105, "corner": [106, 355], "speci": [109, 238, 287, 355], "crystla": 114, "valueerror": [114, 183], "proper": 114, "face_norm": [116, 117], "vert_norm": [116, 117], "face_color": [116, 117, 358], "vert_color": [116, 117], "hold": 116, "inherit": 116, "To": [116, 286, 287, 288, 305, 306, 308, 309, 311, 346, 347, 348, 352, 353, 355, 356, 357, 358, 360, 361], "requir": [116, 305, 306, 308, 309, 311, 346, 352, 354, 357, 358, 359], "nvert": 116, "vertici": 116, "integ": [116, 277, 278, 279, 280, 281], "nface": 116, "connect": [116, 343, 346, 358], "vertex": 116, "attach": [116, 346], "glyph": 116, "file_obj": 119, "output": [119, 140, 144, 223, 286, 287, 288, 291, 305, 346, 352, 353, 355, 358, 362], "glb": [119, 288, 358], "file_typ": 119, "new_fac": 120, "vectors_x": 123, "vectors_i": 123, "vectors_z": 123, "manipul": [125, 126, 129], "1d": [125, 129, 130], "n_energi": [125, 129], "see": [125, 126, 127, 128, 131, 132, 346, 351, 352, 357, 358, 364], "further": [125, 126, 127, 128, 131, 132, 137, 346, 352, 357, 359, 364], "detail": [125, 126, 127, 128, 131, 132, 287, 313, 315, 316, 317, 320, 321, 322, 323, 343, 346, 352, 358], "plane": [127, 129, 288, 333, 341, 351, 352, 357, 358], "informt": [128, 129], "includ": [128, 129, 134, 147, 174, 231, 232, 234, 236, 277, 278, 279, 280, 281, 302, 308, 311, 346, 349, 350, 351, 352, 360, 364], "extens": [128, 129, 130, 133, 346], "chapter": [129, 273], "intend": [129, 134, 273, 346], "describ": [129, 273, 277, 278, 279, 280, 281], "data": [129, 134, 273, 276, 302, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343, 346, 349, 350, 358, 360], "process": [129, 137, 302, 326, 329, 330, 341, 343, 346, 349, 350, 352, 357, 359, 360, 364], "path": [129, 131, 157, 287, 288, 302, 306, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 349, 350, 353, 354, 358, 360], "tick_label": [129, 131], "tick_posit": [129, 131, 242, 245, 260], "n_segement": [129, 131], "kdistanc": [129, 131], "section": [134, 223, 278, 288, 302, 305, 309, 317, 323, 346, 355, 357, 358, 360], "learn": [134, 347], "more": [134, 172, 173, 267, 277, 278, 279, 280, 281, 288, 302, 317, 323, 330, 343, 346, 347, 351, 352, 355, 358, 359], "pars": [134, 135, 137, 139, 141, 143, 144, 153, 157, 160, 167, 168, 170, 175, 177, 183, 185, 186, 200, 215, 221, 222, 223, 224, 225, 226, 227, 355, 357, 358], "code": [134, 141, 144, 145, 206, 223, 275, 276, 282, 283, 284, 285, 287, 288, 305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 349, 350, 351, 352, 354, 355, 357, 358, 360, 364], "highlight": [134, 364], "python": [134, 149, 193, 219, 287, 288, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 349, 350, 358], "interfac": [134, 346, 358], "io": [134, 221, 222, 224, 225, 226, 227], "plotter": [134, 271, 272, 274, 278, 279, 313, 314, 315, 316, 317, 320, 321, 322, 323, 341, 343], "script": [134, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 352, 353, 357, 358, 359, 362, 364], "bandsplot": [134, 283, 302, 308, 309, 311, 313, 314, 315, 316, 317, 323, 326, 352, 354, 355, 358], "dosplot": [134, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 273, 283, 302, 308, 309, 311, 320, 321, 322, 323, 326, 355], "bandsdosplot": [134, 302, 308, 309, 311, 325, 327, 345, 355], "abinitkpoint": [136, 223], "infil": [137, 138, 141, 142, 143, 286, 288, 290, 291, 343, 353, 358, 359, 362], "abinit_output": [137, 138, 139, 140, 286, 288, 305, 352, 353, 358, 364], "procar": [137, 144, 145, 153, 178, 179, 180, 181, 182, 223, 276, 282, 283, 286, 287, 288, 291, 296, 302, 304, 305, 311, 342, 348, 349, 350, 351, 352, 353, 357, 359, 360, 362, 364], "unlik": 137, "here": [137, 181, 267, 307, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345, 347, 352], "merg": [137, 286, 305, 346, 353], "fix": [137, 181, 208, 286, 305, 346, 353], "format": [137, 181, 219, 223, 286, 287, 288, 305, 308, 341, 342, 343, 346, 349, 350, 352, 353, 358, 360, 362], "issu": [137, 286, 305, 353, 362], "abinitprocar": [138, 223], "through": [141, 143, 279, 346, 351, 352, 357, 358, 364], "becaus": [141, 346, 352], "some": [141, 181, 288, 302, 309, 346, 351, 358], "multipl": [141, 286, 296, 305, 349, 350, 355, 360], "bsxf": 141, "sown": 141, "bxsfparser": [142, 143, 223], "bxsf": [142, 143, 222, 223, 288, 358], "dirnam": [144, 145, 157, 158, 275, 276, 282, 283, 284, 285, 287, 288, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343, 352, 357, 358, 364], "qe": [144, 145, 223, 224, 225, 287, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338], "lobsterin": [144, 145, 308], "lobsterout": [144, 145, 308], "scfin_filenam": [144, 145], "scf": [144, 145, 157, 158, 308, 309, 311], "outcar": [144, 145, 153, 171, 172, 173, 174, 182, 223, 282, 283, 287, 288, 311, 342, 352, 354, 357, 358, 364], "poscar": [144, 145, 153, 176, 216, 223, 283, 287, 288, 343, 358, 359, 364], "dos_interpolation_factor": [144, 145, 183, 184], "directori": [144, 157, 276, 284, 285, 286, 287, 302, 306, 308, 309, 311, 352, 353, 357], "put": [144, 287, 288, 353, 358], "lobsterpars": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 223], "retrun": 146, "titl": [147, 257, 283, 284, 285, 287, 346, 352, 355, 357, 358, 364], "dos_paramater": 147, "separatli": 147, "pychemia": [147, 198, 206, 207, 210, 211, 218, 348], "visual": [147, 357, 358], "multi": [148, 192], "diment": [148, 192, 358], "per": 148, "complet": [149, 193, 306], "dictionari": [149, 193, 201, 204, 236, 283, 284, 285, 287, 302, 352], "denis": 149, "kei": [150, 236, 284, 285, 287, 346, 352, 358], "sturcutu": 153, "scf_in_filenam": [157, 158], "bands_in_filenam": [157, 158], "pdos_in_filenam": [157, 158], "pdo": [157, 158, 309], "kpdos_in_filenam": [157, 158], "kpdo": [157, 158, 309], "atomic_proj_xml": [157, 158], "atomic_proj": [157, 158, 309], "xml": [157, 158, 183, 184, 187, 208, 215, 283, 287, 309, 355], "expresso": 157, "most": [157, 287, 346, 352, 355], "import": [157, 287, 288, 308, 309, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 348, 357, 358, 364], "come": [157, 346, 349, 350], "parser": [157, 208, 223, 352], "took": 157, "place": [157, 302, 309, 346, 358], "ofstat": 157, "locat": [157, 228, 247, 263, 359], "outdir": 157, "prefix": 157, "qepars": [158, 159, 160, 161, 162, 163, 164, 165, 223], "fdf_file": [166, 167], "siestapars": [167, 223], "siesta": [167, 223, 226, 307], "fdf": 167, "vlaue": [168, 281], "kpioint": 168, "ourcar": 170, "just": [172, 173, 267, 358, 359], "field": [172, 358], "keep": [172, 287, 288, 346, 351, 358, 359], "than": [172, 173, 200, 267, 287, 288, 346, 351, 352, 358, 359, 364], "ndaarai": 173, "them": [174, 219, 346, 352, 360], "matric": [174, 360], "stupid": 181, "problem": [181, 346], "due": [181, 362, 364], "fortran": [181, 362], "now": [181, 308, 309, 357, 359, 360], "separ": [181, 346, 351, 352, 353], "61": 181, "00000000": [181, 360], "50000000": 181, "But": [181, 330, 346, 357], "precis": [182, 346], "vasprun": [183, 184, 213, 215, 283, 287, 355], "vaspxml": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 364], "el": 187, "_type": 187, "text": [187, 219], "specifi": [187, 276, 277, 278, 279, 287, 288, 306, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 352, 355, 358], "attrib": 187, "tree": 187, "boolian": [188, 189, 190, 219, 287], "consist": [188, 189, 202, 311, 342, 346, 351, 352, 360], "ionic": [188, 190, 195, 199, 209, 218], "converg": [189, 190], "step": [195, 199, 202, 209, 217, 218, 309, 311, 346], "system": [196, 212, 308, 346, 353, 357, 364], "final": [198, 346, 352, 353], "xml_tree": [200, 201, 202, 203, 204, 205], "calculatio": 200, "scstep": 200, "dest": 201, "recurc": [201, 203], "check": [201, 286, 347, 353], "spell": 201, "extract": [202, 203, 311, 359], "tage": 203, "varrai": 205, "tag": [205, 352, 357, 358], "vaspincar": 206, "alwai": [208, 357], "accord": [208, 346, 357], "read": [208, 288, 309, 343, 346, 355, 358, 364], "finish": [208, 356, 361], "pseudopotenti": 214, "potcar": 214, "covert": 219, "abinit": [221, 223, 286, 287, 288, 307, 308, 351, 352, 353, 358, 364], "espresso": [222, 223, 224, 225, 226, 307, 308, 312, 318, 319, 324, 345, 350, 351, 352], "decrib": 223, "result": [223, 346, 359, 364], "lobster": [223, 224, 283, 285, 287, 307, 357], "abinitpars": 223, "vasppars": 223, "ax": [228, 229, 247, 248, 267, 268, 269, 270, 283, 284, 285, 287, 314, 352, 354, 357, 364], "kwarg": [228, 229, 247, 248, 283, 284, 285, 352, 364], "mpl": [228, 247], "orient": [230, 233, 234, 235, 236, 237, 238, 283, 287, 333, 351, 352, 355], "horizont": [230, 233, 234, 235, 236, 237, 238, 283, 287, 355], "linestyl": [230, 249], "dot": [230, 249], "linewidth": [230, 249, 268, 283, 287], "draw": [230, 249], "THe": 230, "style": [230, 317, 323], "plain": [233, 252, 283, 284, 285, 287, 288, 308, 309, 311, 314, 332, 339, 345, 349, 350, 354, 357, 360, 364], "spin_color": [234, 235, 236, 237, 238, 277, 278, 279, 280, 283, 287, 337], "spin_label": [234, 235, 236, 237, 238, 283, 287], "plot_tot": [234, 236, 237, 238, 283, 287, 355], "plot_bar": [234, 235, 268], "parametr": [234, 235, 254, 287, 288, 302, 314, 351, 352, 354, 358, 360], "colorba": 234, "mmaximum": 235, "colorbar": 235, "item": [236, 283, 284, 285, 287, 313, 320, 323, 346, 352, 355, 364], "contribut": [236, 237, 238, 287, 288, 346, 351, 352, 355, 358], "stack": [236, 237, 238, 287, 320, 360], "eachoth": 238, "pdf": [239, 256, 287], "interv": [241, 244, 259, 262, 263, 354], "xlim": 241, "tick_nam": [242, 245, 260], "xtick": 242, "ylim": 244, "ytick": 245, "ebsplot": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 273, 313, 314, 315, 316, 317], "fermi_level": 249, "methdo": 251, "width_mask": [253, 255], "color_mask": [253, 255], "width_weight": [253, 255], "color_weight": [253, 255], "scatter": [253, 255, 352], "width": [253, 255, 287, 343, 358, 364], "mask": [253, 255, 268, 270, 284, 285, 346, 352], "plot_color_bar": [254, 283], "overlai": 254, "bar": [254, 283, 287, 288, 357, 358], "fo": [258, 261, 279], "limit": [259, 262, 287, 346, 352], "begin": [259, 262, 289, 360], "end": [259, 262, 289, 346, 355, 360], "black": [260, 354], "_f": 261, "ev": [261, 334, 335, 342, 357], "major": [263, 346], "minor": 263, "depeci": 265, "ot": 265, "procarplot": [266, 267, 268, 269, 270, 273], "hot_r": [267, 270], "handler": 267, "parametricplot": 267, "fake": 267, "shouldn": 267, "invok": [267, 346, 348], "discontinu": [268, 269, 270, 283, 309, 360], "figsiz": [268, 269], "13": [268, 269, 315, 321, 333, 337, 338, 339, 346, 351, 359, 360], "9": [268, 269, 305, 315, 321, 329, 334, 335, 336, 337, 351, 360], "02": [269, 318], "o": [269, 270, 287, 288, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 351, 352, 355, 358], "50": [270, 311, 359], "structutu": 271, "stuctur": 273, "depreci": 274, "repair": [275, 276, 282, 283, 288, 302, 304, 346, 357, 358, 360], "apply_symmetri": [275, 276, 333, 334, 335, 336, 337, 338], "fermihandl": [276, 277, 278, 279, 280, 281, 302, 311, 333, 334, 335, 336, 337, 338], "Then": [276, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 364], "srufac": [276, 279], "iso_rang": [277, 279, 281, 288, 334, 335, 358], "iso_surfac": [277, 279, 281, 288, 334, 335, 358], "10": [277, 281, 287, 288, 315, 321, 330, 333, 336, 339, 343, 346, 351, 358, 359, 360], "iso_valu": [277, 281, 335], "spin_textur": [277, 278, 279, 280, 288, 329, 330, 332, 333, 339, 345, 357, 358], "calculate_fermi_spe": [277, 278, 279, 280, 288, 358], "calculate_fermi_veloc": [277, 278, 279, 280, 288, 358], "calculate_effective_mass": [277, 278, 279, 280, 288, 358], "plot_brillouin_zon": [277, 278, 279, 280], "015": [277, 278, 279, 288, 343, 358], "plot_directional_arrow": [277, 278, 279, 280], "camera_po": [277, 278, 279, 280, 288, 358], "background_color": [277, 278, 279, 280, 288, 358], "white": [277, 278, 279, 280, 288, 358, 362], "save_gif": [277, 280, 335], "genrat": 277, "gif": [277, 280, 288, 335, 358], "chang": [277, 317, 323, 330, 346, 355, 358], "isovlau": [277, 281], "rang": [277, 279, 281, 288, 334, 335, 341, 358, 359, 364], "excat": 277, "ther": [277, 278, 279, 280, 281, 285], "allow": [277, 278, 279, 280, 281, 288, 346, 351, 352, 357, 358, 364], "orlist": [277, 278, 279, 280], "camera": [277, 278, 279, 280, 288, 358], "strortupl": [277, 278, 279, 280], "background": [277, 278, 279, 280, 288, 358], "show_cross_section_area": [278, 288, 333, 358], "slice_norm": [278, 288, 333, 358], "slice_origin": [278, 288, 333, 358], "line_width": [278, 333], "perspect": [278, 279, 280, 288, 358], "save_2d": [278, 279, 280], "save_2d_slic": [278, 333], "sruafc": [278, 281], "cross": [278, 288, 346, 358], "widget": [278, 279, 288, 333, 358], "area": [278, 281, 287, 288, 333, 346, 355, 358], "slice": [278, 288, 358], "noraml": 278, "origin": [278, 288, 329, 330, 346, 352, 358, 359], "linwidth": 278, "screenshot": [278, 279, 280], "isoslid": [279, 332, 339, 345], "slide": 279, "go": [279, 287, 288, 348, 358], "except": [279, 346], "save_mp4": 280, "save_3d": 280, "boollean": 280, "mp4": [280, 288, 358], "savefig": [281, 283, 284, 285, 287, 352, 354, 355, 357, 364], "exact": [281, 335, 346], "gap": [282, 342], "bands_set": [283, 302, 326], "elimit": [283, 284, 285, 287, 314, 352, 354, 355, 364], "cubic": [283, 284, 285, 287, 352, 364], "interpolation_typ": [283, 284, 285, 352, 364], "projection_mask": [283, 284, 285, 287, 352, 364], "dos_set": [283, 302, 326], "dos_limit": [283, 287], "old": [283, 287, 364], "k_limit": 283, "title_fonts": 283, "16": [283, 288, 315, 321, 330, 333, 338, 346, 351, 358], "draw_fermi": 283, "keyword": [283, 302, 317, 323, 326, 329, 330, 333, 346, 358], "window": [283, 284, 285, 287, 346, 352, 358], "structutr": [284, 352], "sting": [284, 352], "custom": [284, 285, 346, 352], "kanem": [284, 352], "decid": [284, 346, 352, 357], "plt": [284, 285, 287, 352, 357, 364], "kdirect": [285, 352, 364], "bandstructur": [285, 293, 346, 353], "kitck": 285, "objext": 285, "outfil": [286, 290, 291, 343, 353, 359, 362], "procar_merg": [286, 353], "gz": [286, 353], "mergeparallel": [286, 353], "fixformat": [286, 353], "nspin": [286, 309, 353], "concaten": [286, 296, 302, 305, 360], "procar_": [286, 353], "compress": [286, 353], "parallel": [286, 305, 353], "detect": [286, 353], "nsppol": [286, 353], "flag": [286, 305, 306, 308, 309, 311, 353, 364], "carri": [287, 346, 352, 355], "out": [287, 288, 305, 306, 308, 309, 346, 358, 364], "srvo3": 287, "perform": [287, 288, 306, 309, 311, 346, 349, 350, 357, 358, 359, 364], "explain": [287, 305, 346, 358], "exmapl": [287, 333, 334, 335, 336, 337, 338, 341, 343], "tutori": [287, 347, 358], "parametric_lin": [287, 360], "stack_orbit": [287, 320, 323, 360], "stack_speci": [287, 360], "multipli": 287, "spline": 287, "ploariz": 287, "These": [287, 306, 312, 319, 325, 326, 328, 332, 340, 345, 346, 351, 352, 358], "chosen": [287, 358], "accept": [287, 346], "rgb": 287, "html": [287, 288, 346, 358], "0000ff": 287, "ff0000": 287, "polar": [287, 312, 313, 314, 318, 319, 320, 324, 326, 329, 332, 334, 335, 336, 339, 342, 343, 345, 351, 352, 353, 360, 364], "two": [287, 288, 346, 352, 358], "even": [287, 346, 352], "disregard": 287, "cation": 287, "fill": [287, 355], "under": [287, 346, 355], "curv": [287, 355], "better": [287, 358], "sens": 287, "refer": [287, 308, 313, 315, 316, 317, 320, 321, 322, 323, 330, 346, 351, 352, 360], "srvo": [287, 288, 351, 352, 355, 358], "magenta": 287, "cyan": 287, "polor": 287, "both": [287, 346, 349, 350, 352, 355, 364], "legend": [287, 357], "packag": [287, 288, 309, 335, 346, 352, 355, 358], "relev": [287, 288, 346, 358], "mind": [287, 288, 358, 359], "start": [287, 288, 346, 351, 352, 357, 358, 359], "oxygen": [287, 288, 355, 358], "sr1": [287, 288, 358], "o3": [287, 288, 358], "900891": [287, 288, 358], "000000": [287, 288, 358, 362], "sr": [287, 288, 351, 352, 355, 358], "500000": [287, 288, 358], "noth": [287, 288, 346, 358], "consid": [287, 288, 320, 323, 346, 347, 349, 350, 351, 352, 358], "indeci": [287, 288, 358], "relav": [287, 288, 358], "while": [287, 288, 346, 355, 358, 359], "ask": [287, 346, 355], "graph": [287, 346], "higher": 287, "web": [287, 288, 358], "page": [287, 288, 346, 347, 350, 358], "http": [287, 288, 346, 348, 358], "org": [287, 288, 346, 358], "user": [287, 288, 302, 313, 315, 316, 317, 320, 321, 322, 323, 329, 330, 343, 346, 351, 352, 355, 357, 358], "plasma": 287, "plote": 287, "flase": 287, "entri": 287, "png": [287, 288, 333, 352, 355, 358, 364], "jpg": 287, "shown": 287, "interact": [287, 346, 358], "ad": [287, 288, 308, 346, 347, 358], "abov": [287, 288, 308, 309, 311, 334, 335, 346, 351, 352, 354, 358], "srvo_": 287, "latex": 287, "well": [287, 329, 330, 346, 352, 353, 358], "cal": 287, "argumnet": [287, 355], "elk": [287, 307, 351, 352, 354, 355, 364], "uparrow": [287, 355, 360], "downarrow": [287, 355, 360], "side": [287, 309, 346], "mean": [287, 288, 313, 315, 316, 317, 320, 321, 322, 323, 346, 358], "treat": [287, 346, 357], "raw": 287, "No": [287, 334, 335, 346, 352], "ack_speci": 287, "base": [287, 288, 343, 346, 352], "For": [287, 302, 311, 313, 315, 316, 317, 320, 321, 322, 323, 330, 341, 346, 351, 352, 355, 357, 358, 359, 360, 364], "clarif": 287, "visit": 287, "specif": [287, 302, 308, 346, 347, 351, 352, 355, 358], "clarifi": 287, "lingo": 287, "equival": [287, 346], "top": [287, 355], "take": [287, 302, 309, 315, 321, 346], "figur": [287, 302, 329, 330, 352, 354, 364], "subplot": 287, "larger": [287, 346], "row": [287, 351, 352, 359], "colomun": 287, "fig": [287, 352, 354], "linspac": 287, "pi": 287, "1000": 287, "sin": 287, "plt_show": 287, "skip": [287, 358], "modifi": [287, 346, 351, 352], "set_ylim": 287, "save_color": [288, 358], "only_spin": [288, 358], "savegif": [288, 358], "savemp4": [288, 358], "save_meshio": [288, 358], "save2d": [288, 358], "show_slic": [288, 358], "iso_slid": [288, 358], "simul": [288, 358], "mgb2": [288, 358], "ni_f": [288, 358], "49": [288, 358], "iter": [288, 358], "ones": [288, 355, 358], "14": [288, 315, 321, 330, 333, 335, 338, 339, 351, 358, 360], "15": [288, 315, 321, 330, 333, 338, 346, 351, 358, 364], "17": [288, 315, 321, 324, 330, 333, 338, 351, 358], "kgrid": [288, 358], "5x5x5": [288, 358], "lead": [288, 358], "20x20x20": [288, 358], "uniform": [288, 358], "direect": [288, 358], "grai": [288, 358], "surfca": [288, 358], "property_project": [288, 358], "fermi_velocity_vector": [288, 358], "fermi_veloc": [288, 358], "harmon": [288, 358, 360], "effective_mass": [288, 358], "collinear": [288, 351, 352, 358, 360], "As": [288, 346, 352, 358, 360], "suggest": [288, 358], "belov": [288, 358], "fast": [288, 358], "rather": [288, 358, 359, 364], "inaccur": [288, 346, 358], "nearest": [288, 358], "neighbor": [288, 358], "accur": [288, 358], "linear": [288, 358], "video": [288, 358], "export": [288, 358, 360], "stl": [288, 358], "binari": [288, 358], "ply": [288, 358], "ascii": [288, 358], "off": [288, 333, 334, 335, 336, 337, 338, 341, 343, 358], "obj": [288, 358], "gltf": [288, 358], "collada": [288, 358], "meshio": [288, 358], "illus": [288, 358], "depth": [288, 347, 358], "graphic": [288, 358], "turn": [288, 358], "featur": [288, 311, 317, 323, 346, 357, 358, 359], "largest": [288, 358], "show_curvatur": [288, 358], "curvatur": [288, 358], "curvature_typ": [288, 358], "avail": [288, 346, 347, 352, 357, 358, 364], "gaussian": [288, 358], "slider": [288, 358], "iso_energi": [288, 358], "view": [288, 346, 358], "whole": [288, 346, 358], "nkx": 289, "nky": 289, "coord": 289, "grid_siz": 290, "40": [290, 306, 343, 352], "with_time_revers": 290, "recip": [290, 343, 358], "hpkot": [290, 343], "threshold": [290, 343], "07": [290, 318, 343], "angle_toler": 290, "supercell_matrix": [290, 343, 364], "recepi": 290, "procarrepair": [291, 362], "exist": 292, "aclass": 298, "pre": [302, 326, 329, 330, 341, 343, 346, 349, 350], "post": [302, 326, 329, 330, 341, 343, 346, 349, 350, 359], "cat": [302, 305, 353, 360], "depend": [302, 348, 355], "mai": [302, 317, 323, 346, 352, 358], "orbitald": 302, "bandsplot_2d": 302, "bandtructur": 302, "combin": [302, 346, 351, 352, 353, 358], "fermi2d": [302, 328, 331, 345, 357], "fermi3d": [302, 308, 309, 332, 339, 345, 358], "generate2dkmesh": [302, 341], "kmesh": [302, 308, 311, 358], "bandgap": [302, 340, 344, 345], "reapir": 302, "abinitoutput": 305, "prtprocar": 305, "nameofoutputfil": 305, "run": [305, 306, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 353, 360], "split": [305, 353, 357], "bandlin": 306, "band_": [306, 351, 352], "_a": 306, "obtain": [306, 349, 350, 352, 353, 360], "task": [306, 349, 350], "22": 306, "addition": 306, "spinpol": 306, "join": 306, "plot1d": 306, "gamma": [306, 311, 341, 352, 353, 364], "were": [306, 346], "guid": [307, 309, 311, 313, 315, 316, 317, 320, 321, 322, 323, 347], "prepar": 307, "perper": 307, "fatband": 308, "lobter": 308, "lobstercod": 308, "v6": [308, 309], "variou": [308, 309, 311, 349, 350, 360], "independ": [308, 309, 311, 346], "pw": [308, 309], "your": [308, 309, 346, 347, 358], "bands_dirnam": [308, 309, 311], "dos_dirnam": [308, 309, 311], "bands_mod": [308, 309, 311], "dos_mod": [308, 309, 311], "right": [308, 346, 355, 358, 360], "addit": [308, 309, 311, 346, 358, 360], "wf_collect": 308, "nosym": 308, "noinv": 308, "k_point": [308, 309], "520": 308, "0000000": 308, "1428571": 308, "2857143": 308, "4285714": 308, "0000000000": [308, 309], "0000": 308, "0200000000": 308, "4800000000": 308, "5000000000": [308, 309], "5110420726": 308, "4889579274": 308, "7539676705": 308, "2460323295": 308, "7650097432": 308, "2349902568": 308, "h2": 308, "h0": 308, "2238002446": 308, "meth": 308, "explicitli": [308, 309, 346], "lobster_input_fil": 308, "explicit": [308, 309], "createfatband": 308, "2p_x": 308, "2p_y": 308, "2p_z": 308, "li": [308, 346], "fe": [308, 313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "lobster_q": 308, "projwfc": 309, "make": [309, 311, 346, 357, 359], "sure": [309, 311, 346], "kresolveddo": 309, "copi": [309, 346, 355], "main": [309, 358], "nscf": 309, "crystal_b": 309, "6250000000": 309, "2500000000": 309, "u": [309, 346, 347, 357], "3750000000": 309, "7500000000": 309, "w": [309, 346, 358], "occur": [309, 346, 352], "269": 309, "0083333333": 309, "0166666667": 309, "0250000000": 309, "0333333333": 309, "0416666667": 309, "4916666667": 309, "5062500000": 309, "0125000000": 309, "6125000000": 309, "2250000000": 309, "6187500000": 309, "2375000000": 309, "3691406250": 309, "7382812500": 309, "3632812500": 309, "7265625000": 309, "3574218750": 309, "7148437500": 309, "0058593750": 309, "0117187500": 309, "starting_magnet": 309, "branch": 309, "print": [309, 364], "instal": [309, 346], "git": [309, 348], "clone": 309, "gitlab": 309, "com": [309, 346, 348], "pietrodeluga": 309, "q": [309, 358], "cd": [309, 348], "checkout": 309, "new_proj": 309, "bin": 309, "noncolin": 309, "lspinorb": 309, "savesigma": 309, "wavefunct": [311, 360], "written": [311, 341, 343, 346, 364], "lorbit": [311, 364], "11": [311, 315, 321, 339, 346, 351, 360], "incar": [311, 358], "unfold": [311, 349, 350, 360], "12": [311, 315, 321, 333, 334, 338, 339, 351, 358, 360, 364], "wave": [311, 360], "ispin": [311, 364], "lnoncollinear": 311, "icharg": 311, "math": [311, 351, 352], "chgcar": 311, "line_mod": 311, "h": [311, 346, 364], "25": [311, 335], "demonstr": [312, 319, 325, 328, 332, 340, 345], "capabl": [312, 319, 325, 328, 332, 340, 345, 349, 350, 352, 358], "compar": [312, 318, 345, 349, 350, 360, 364], "click": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 358], "download": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345], "below": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343, 346, 351, 352, 354], "replac": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 343], "data_dir": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343], "download_exampl": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "save_dir": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "spin_calc_typ": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "calc_typ": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "local": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346], "project_dir": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "getcwd": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "sep": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 342, 343], "ebs_plot": [313, 314, 315, 316, 317], "0x000001fb2edda2e0": 313, "pleas": [313, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 341, 343, 346, 347, 348, 358, 360], "ref": [313, 315, 316, 317, 320, 321, 322, 323], "atomic_project": [313, 315, 316, 317, 320, 321, 322, 323], "0x000001fb2e480130": 313, "0x000001fb2d932850": 313, "0x000001fb2e122c10": 313, "0x000001fb2dd773a0": 313, "overlay_orbit": 313, "0x000001fb31d91bb0": 313, "0x000001fb2f6ef5e0": 313, "0x000001fb2d99d700": 313, "minut": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343], "136": [313, 318], "plotting_colinear": [313, 318], "jupyt": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345], "notebook": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345], "ipynb": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343], "galleri": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345], "sphinx": [313, 314, 315, 316, 317, 320, 321, 322, 323, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 342, 343, 345], "vasp_data_dir": 314, "qe_data_dir": 314, "equal": [314, 334, 335, 358], "0x000001fb2d9e2d00": 314, "597": [314, 318], "plotting_compare_band": [314, 318], "sphinx_gallery_thumbnail_numb": [315, 333, 334, 335, 336, 337, 338, 341, 342, 343], "0x000001fb31d988e0": 315, "express": [315, 321, 346], "therefor": [315, 321, 346, 351, 364], "0x000001fb05708490": 315, "240": [315, 318], "plotting_noncolinear_q": [315, 318], "0x000001fb2e0357c0": 316, "0x000001fb2db03f70": 316, "940": [316, 318], "plotting_noncolinear_vasp": [316, 318], "There": [317, 323, 346, 347, 358], "few": [317, 323], "0x000001fb2dc9b400": 317, "doc": [317, 323], "util": [317, 323, 341, 343, 346, 353, 357, 358, 359, 362], "default_set": [317, 323], "ini": [317, 323], "0x000001fb2dc501c0": 317, "0x000001fb2dabadf0": 317, "0x000001fb2e0e2190": 317, "293": [317, 318], "plotting_spin_polar": [317, 318], "00": [318, 324, 327, 331, 339, 344], "206": 318, "execut": [318, 324, 327, 331, 339, 344, 346, 352], "examples_00": 318, "band_structur": 318, "mb": [318, 324, 327, 331, 339, 344], "01": [318, 324, 327, 339], "dos_plot": [320, 321, 322, 323], "0x000001fb2d8ae070": 320, "0x000001fb31dabe80": 320, "0x000001fb3c783250": 320, "0x000001fb3d32baf0": 320, "0x000001fb3ce2c8b0": 320, "0x000001fb3cc5b7f0": 320, "20": [320, 324, 341, 343, 346], "838": [320, 324], "plotting_colinear_do": [320, 324], "0x000001fb2db5e070": 321, "706": [321, 324], "plotting_noncolinear_dos_q": [321, 324], "0x000001fb2e4a9700": 322, "568": [322, 324], "plotting_noncolinear_dos_vasp": [322, 324], "0x000001fb2e67c460": 323, "0x000001fb2d98fc10": 323, "0x000001fb2f404a30": 323, "0x000001fb52267e50": 323, "0x000001fb2f6c24c0": 323, "0x000001fb2db77340": 323, "0x000001fb526887c0": 323, "43": [323, 324], "564": [323, 324], "plotting_spin_polarized_do": [323, 324], "26": [324, 329, 331], "677": 324, "examples_01": 324, "04": 324, "bands_dir": 326, "dos_dir": 326, "____": [326, 329, 330, 341, 343], "_": [326, 329, 330, 341, 343, 360], "__": [326, 329, 330, 341, 343], "___": [326, 329, 330, 341, 343], "librari": [326, 329, 330, 341, 343, 346, 348, 349, 350], "jun": [326, 329, 330, 341, 343], "10th": [326, 329, 330, 341, 343], "2021": [326, 329, 330, 341, 343], "cite": [326, 329, 330, 341, 343, 358], "uthpala": [326, 329, 330, 341, 343, 346], "herath": [326, 329, 330, 341, 343, 346], "pedram": [326, 329, 330, 341, 343, 346], "tavadz": [326, 329, 330, 341, 343, 346], "xu": [326, 329, 330, 341, 343, 346], "he": [326, 329, 330, 341, 343, 346], "eric": [326, 329, 330, 341, 343, 346], "bousquet": [326, 329, 330, 341, 343, 346], "sobhit": [326, 329, 330, 341, 343, 346], "singh": [326, 329, 330, 341, 343, 346], "francisco": [326, 329, 330, 341, 343, 346], "mu\u00f1oz": [326, 329, 330, 341, 343, 346], "aldo": [326, 329, 330, 341, 343, 346], "romero": [326, 329, 330, 341, 343, 346], "comput": [326, 329, 330, 341, 343, 346], "physic": [326, 329, 330, 341, 343, 346], "commun": [326, 329, 330, 341, 343, 346], "251": [326, 329, 330, 341, 343, 346], "2020": [326, 329, 330, 341, 343, 346], "107080": [326, 329, 330, 341, 343, 346], "develop": [326, 329, 330, 341, 343], "rees": [326, 329, 330, 341, 343, 346], "boucher": [326, 329, 330, 341, 343, 346], "logan": [326, 329, 330, 341, 343, 346], "lang": [326, 329, 330, 341, 343, 346], "freddi": [326, 329, 330, 341, 343, 346], "farah": [326, 329, 330, 341, 343, 346], "116": [326, 327], "plotting_bandsdosplot": [326, 327], "examples_02": 327, "bands_do": 327, "noncolinear": [328, 331, 345, 351, 358], "c": [329, 330, 346, 347, 348, 358], "lllang": [329, 330], "desktop": [329, 330], "research": [329, 330, 346, 347], "comp": [329, 330], "rot": [329, 330], "trasl": [329, 330], "_____________________________________________________": [329, 330], "add_legend": [329, 357], "contact": [329, 346], "specfic": [329, 330], "navi": 329, "581": [329, 331], "plotting_fermi2d": [329, 331], "By": [330, 346, 358, 364], "s_z": [330, 351, 352, 357], "plain_band": 330, "19": [330, 331], "938": [330, 331], "plotting_fermi2d_spin_textur": [330, 331], "46": 331, "519": 331, "examples_03": 331, "isovalue_gif": [332, 339, 345], "cross_sect": [332, 339, 345], "ensur": [333, 334, 335, 336, 337, 338, 341, 343, 346], "screen": [333, 334, 335, 336, 337, 338, 341, 343, 364], "off_screen": [333, 334, 335, 336, 337, 338, 341, 343], "load": [333, 334, 335, 336, 337, 338], "memori": [333, 334, 335, 336, 337, 338, 359], "outermost": 333, "center": [333, 341, 346, 357, 358, 360], "adjust": 333, "manual": [333, 343, 352, 353], "plot_fermi_cross_sect": 333, "18": [333, 334, 335, 336, 337, 338], "054241046313987": [333, 338], "2d_slice": 333, "995": [333, 339], "plotting_fermi3d_cross_sect": [333, 339], "would": [334, 335, 346, 351, 352, 357, 358], "throughout": [334, 335, 346], "plot_fermi_isoslid": 334, "239837592692684": [334, 335, 336], "896": [334, 339], "plotting_fermi3d_isoslid": [334, 339], "create_isovalue_gif": 335, "anaconda": [335, 347], "env": 335, "pyprocar_dev": 335, "lib": 335, "site": [335, 351, 352, 360], "2132": 335, "pyvistadeprecationwarn": 335, "overwrit": 335, "deprec": 335, "copy_from": 335, "353": [335, 339, 343, 344], "plotting_fermi3d_isovalue_gif": [335, 339], "plot_fermi_surfac": [336, 337, 338], "610": [336, 339], "plotting_fermi3d_plain": [336, 339], "042041123610034": 337, "473": [337, 339], "plotting_fermi3d_spin": [337, 339], "745": [338, 339], "plotting_fermi3d_spin_textur": [338, 339], "073": 339, "examples_04": 339, "08": 339, "kmesh_gener": [340, 344, 345, 357], "kpath_gener": [340, 344, 345], "particularli": [341, 353, 357, 362], "command": [341, 346, 348, 353, 354], "k_": 341, "num_grids_x": 341, "num_grids_i": 341, "add_mesh": 341, "show_ax": [341, 343], "show_grid": [341, 343], "320": [341, 344], "plotting_2dkmesh_gener": [341, 344], "note": [342, 348, 352, 353, 355, 358, 364], "band_gap": 342, "128": [342, 343, 344], "plotting_bandgap": [342, 344], "desir": [343, 352, 355, 358], "momentum": [343, 358], "enabl": [343, 346, 357, 358, 364], "suitabl": [343, 346], "suffici": 343, "typic": [343, 346, 362], "retriev": [343, 352], "slight": 343, "modif": [343, 346], "regard": [343, 346, 357, 359], "seek": 343, "seekpath": [343, 348], "hinuma": 343, "et": [343, 358], "al": [343, 358], "pizzi": 343, "kumagai": 343, "oba": 343, "tanaka": 343, "diagram": 343, "crystallographi": 343, "scienc": [343, 346], "2017": 343, "140": 343, "184": 343, "doi": [343, 346, 358], "1016": [343, 346], "commatsci": 343, "2016": 343, "k_path": 343, "k_label": 343, "ey": 343, "unique_label": 343, "unique_kpath": 343, "enumer": 343, "append": 343, "ik": 343, "add_lin": 343, "els": 343, "add_point_label": 343, "point_color": 343, "text_color": 343, "font_siz": 343, "36": [343, 364], "always_vis": 343, "view_yz": 343, "plotting_kpath_gener": [343, 344], "801": 344, "examples_05": 344, "sever": [345, 358], "what": [345, 346], "examples_python": 345, "zip": 345, "examples_jupyt": 345, "open": [346, 349, 350, 358], "head": [346, 347], "paper": 346, "scientif": [346, 347], "our": [346, 347, 357], "visibl": [346, 347], "bibtex": 346, "articl": [346, 358], "herath2020107080": 346, "journal": [346, 358], "volum": [346, 358], "year": [346, 358], "issn": 346, "0010": 346, "4655": 346, "cpc": 346, "2019": [346, 358], "url": [346, 358], "www": 346, "sciencedirect": 346, "pii": 346, "s0010465519303935": 346, "condens": 346, "matter": 346, "who": 346, "made": 346, "substanti": 346, "concept": 346, "design": 346, "softwar": [346, 358], "creation": 346, "draft": 346, "substant": 346, "revis": 346, "global": 346, "effort": 346, "team": 346, "thank": 346, "jan": 346, "janssen": 346, "litong": 346, "jiang": 346, "nichola": 346, "pike": 346, "don": [346, 347], "munoz": 346, "b": 346, "departamento": 346, "de": 346, "isica": 346, "facultad": 346, "ciencia": 346, "universidad": 346, "chile": 346, "santiago": 346, "nanosci": 346, "nanotechnologi": 346, "cedenna": 346, "depart": 346, "astronomi": 346, "west": 346, "virginia": 346, "univers": 346, "morgantown": 346, "wv": 346, "26505": 346, "6315": 346, "usa": 346, "rutger": 346, "piscatawai": 346, "nj": 346, "08854": 346, "physiqu": 346, "th": 346, "eoriqu": 346, "mat": 346, "eriaux": 346, "cesam": 346, "universit": 346, "eg": 346, "4000": 346, "sart": 346, "tilman": 346, "belgium": 346, "gnu": 346, "public": [346, 347, 358], "29": 346, "june": 346, "2007": 346, "copyright": 346, "free": 346, "foundat": 346, "inc": 346, "fsf": 346, "everyon": 346, "permit": 346, "distribut": [346, 347], "verbatim": 346, "document": [346, 355], "preambl": 346, "copyleft": 346, "kind": 346, "practic": 346, "awai": 346, "freedom": 346, "share": 346, "contrast": 346, "guarante": 346, "program": 346, "remain": [346, 360], "its": 346, "releas": 346, "wai": [346, 347, 359], "too": [346, 362], "speak": 346, "price": 346, "charg": 346, "wish": [346, 352], "receiv": 346, "piec": 346, "know": 346, "thing": 346, "protect": 346, "prevent": [346, 362], "deni": 346, "surrend": 346, "certain": [346, 351, 352, 357], "respons": 346, "respect": [346, 351, 352, 357, 358, 359, 364], "grati": 346, "fee": 346, "pass": 346, "recipi": 346, "And": 346, "term": 346, "gpl": 346, "assert": 346, "offer": 346, "give": [346, 357, 360], "legal": 346, "permiss": [346, 362], "clearli": 346, "warranti": 346, "sake": 346, "mark": 346, "erron": [346, 362], "previou": [346, 358], "devic": 346, "access": [346, 351, 358, 360], "although": 346, "manufactur": 346, "fundament": 346, "incompat": 346, "aim": 346, "systemat": 346, "pattern": 346, "abus": 346, "product": 346, "individu": [346, 352], "unaccept": 346, "prohibit": 346, "those": 346, "aris": [346, 362], "domain": 346, "stand": 346, "readi": 346, "provis": 346, "futur": [346, 352], "threaten": 346, "constantli": 346, "patent": 346, "restrict": [346, 358], "purpos": [346, 364], "avoid": 346, "danger": 346, "could": [346, 352, 357, 359], "proprietari": 346, "assur": 346, "cannot": 346, "condit": 346, "AND": 346, "definit": [346, 358], "law": 346, "semiconductor": 346, "license": 346, "address": 346, "organ": 346, "adapt": 346, "fashion": 346, "earlier": 346, "either": [346, 357], "unmodifi": 346, "propag": 346, "anyth": 346, "without": [346, 355, 358], "directli": 346, "secondarili": 346, "liabl": 346, "infring": 346, "applic": 346, "privat": 346, "countri": 346, "activ": [346, 358], "convei": 346, "parti": 346, "mere": 346, "network": 346, "transfer": 346, "displai": [346, 354], "appropri": 346, "notic": 346, "extent": 346, "conveni": 346, "promin": 346, "tell": 346, "menu": 346, "meet": 346, "criterion": 346, "prefer": [346, 347], "standard": [346, 358], "offici": 346, "recogn": 346, "bodi": 346, "languag": 346, "wide": 346, "among": 346, "serv": 346, "context": 346, "essenti": 346, "kernel": 346, "compil": 346, "produc": [346, 357, 364], "interpret": 346, "howev": [346, 352, 358], "tool": 346, "associ": 346, "dynam": 346, "link": [346, 355], "subprogram": 346, "intim": 346, "flow": 346, "regener": 346, "basic": [346, 349, 350, 352, 355], "grant": 346, "irrevoc": 346, "met": 346, "affirm": 346, "unlimit": 346, "content": 346, "constitut": 346, "acknowledg": [346, 347], "fair": 346, "long": [346, 352, 358], "otherwis": 346, "forc": 346, "sole": 346, "exclus": 346, "facil": 346, "compli": 346, "thu": [346, 351], "behalf": 346, "outsid": 346, "relationship": 346, "circumst": 346, "sublicens": 346, "unnecessari": 346, "anti": 346, "circumvent": 346, "shall": 346, "deem": 346, "technolog": 346, "measur": 346, "fulfil": 346, "oblig": 346, "wipo": 346, "treati": 346, "adopt": 346, "decemb": 346, "1996": 346, "waiv": 346, "power": 346, "forbid": 346, "exercis": 346, "disclaim": 346, "intent": 346, "enforc": 346, "against": 346, "medium": 346, "conspicu": 346, "publish": [346, 358], "intact": 346, "absenc": 346, "date": [346, 348, 358], "entir": 346, "anyon": 346, "possess": 346, "regardless": 346, "invalid": [346, 357], "natur": 346, "storag": 346, "aggreg": 346, "beyond": [346, 352, 355], "inclus": 346, "caus": 346, "machin": 346, "readabl": 346, "embodi": 346, "accompani": 346, "durabl": 346, "customarili": 346, "interchang": 346, "valid": 346, "least": 346, "three": [346, 351, 352, 353, 358, 359], "spare": 346, "model": 346, "reason": [346, 352], "cost": 346, "server": 346, "altern": 346, "occasion": 346, "noncommerci": 346, "subsect": 346, "6b": 346, "maintain": 346, "clear": [346, 354], "next": [346, 358], "sai": 346, "host": 346, "satisfi": 346, "peer": 346, "transmiss": 346, "6d": 346, "portion": 346, "whose": 346, "exclud": 346, "consum": 346, "tangibl": 346, "person": 346, "famili": 346, "household": 346, "sold": 346, "incorpor": [346, 352], "dwell": 346, "doubt": 346, "resolv": [346, 351, 352, 355], "favor": 346, "coverag": 346, "common": 346, "statu": 346, "actual": 346, "commerci": 346, "industri": 346, "unless": 346, "signific": 346, "procedur": 346, "suffic": 346, "continu": [346, 358], "interf": 346, "been": [346, 358], "transact": 346, "perpetu": 346, "character": 346, "neither": 346, "nor": 346, "abil": 346, "rom": 346, "servic": 346, "itself": [346, 347], "advers": 346, "affect": 346, "violat": 346, "rule": 346, "protocol": 346, "across": [346, 360], "publicli": 346, "password": 346, "unpack": 346, "supplement": 346, "though": 346, "govern": 346, "remov": 346, "own": 346, "notwithstand": 346, "holder": 346, "liabil": 346, "preserv": 346, "misrepresent": 346, "licensor": 346, "declin": 346, "trademark": 346, "trade": 346, "indemnif": 346, "contractu": 346, "assumpt": 346, "impos": 346, "relicens": 346, "surviv": 346, "statement": 346, "termin": [346, 348], "expressli": 346, "attempt": 346, "void": 346, "paragraph": 346, "ceas": 346, "reinstat": 346, "provision": 346, "until": 346, "perman": 346, "fail": 346, "notifi": 346, "60": [346, 357, 359], "dai": 346, "cessat": 346, "moreov": 346, "cure": 346, "receipt": 346, "qualifi": 346, "Not": 346, "ancillari": 346, "consequ": 346, "likewis": 346, "action": [346, 358], "downstream": 346, "subject": 346, "complianc": 346, "entiti": 346, "asset": 346, "subdivid": 346, "whatev": 346, "predecessor": 346, "interest": [346, 358], "had": [346, 352], "plu": 346, "royalti": 346, "litig": 346, "claim": 346, "counterclaim": 346, "lawsuit": 346, "alleg": 346, "sell": 346, "sale": 346, "acquir": 346, "hereaft": 346, "manner": [346, 352], "worldwid": 346, "agreement": 346, "commit": 346, "denomin": 346, "coven": 346, "sue": 346, "knowingli": 346, "reli": 346, "readili": 346, "arrang": [346, 351, 352], "depriv": 346, "yourself": 346, "benefit": 346, "knowledg": 346, "identifi": [346, 351, 352, 357], "believ": 346, "pursuant": 346, "singl": [346, 353], "procur": 346, "convey": 346, "discriminatori": 346, "scope": 346, "busi": 346, "payment": 346, "primarili": 346, "enter": 346, "28": 346, "march": 346, "constru": 346, "impli": 346, "defens": 346, "court": 346, "contradict": 346, "excus": 346, "simultan": 346, "pertin": 346, "agre": 346, "collect": [346, 358], "whom": 346, "refrain": 346, "affero": 346, "concern": [346, 358], "Such": 346, "spirit": 346, "distinguish": 346, "later": 346, "ever": 346, "proxi": 346, "THERE": 346, "NO": 346, "FOR": 346, "THE": 346, "TO": 346, "BY": 346, "IN": 346, "OR": 346, "AS": 346, "OF": 346, "BUT": 346, "NOT": 346, "merchant": 346, "fit": 346, "risk": 346, "qualiti": 346, "WITH": 346, "prove": 346, "defect": 346, "necessari": [346, 352, 360], "event": 346, "WILL": 346, "BE": 346, "damag": 346, "incident": 346, "consequenti": 346, "inabl": 346, "loss": 346, "BEING": 346, "sustain": 346, "failur": 346, "IF": 346, "SUCH": 346, "advis": 346, "review": 346, "close": [346, 358], "approxim": 346, "absolut": 346, "waiver": 346, "civil": 346, "greatest": 346, "best": 346, "achiev": [346, 362], "redistribut": 346, "safest": 346, "pointer": 346, "brief": 346, "idea": 346, "hope": 346, "mail": 346, "short": 346, "welcom": 346, "hypothet": 346, "Of": 346, "cours": 346, "gui": 346, "box": 346, "employ": 346, "programm": 346, "school": 346, "sign": [346, 362], "subroutin": 346, "lesser": 346, "philosophi": 346, "why": 346, "lgpl": 346, "herein": 346, "subclass": 346, "minim": 346, "isol": 346, "reproduc": 346, "bound": 346, "suppli": [346, 352], "good": [346, 358], "faith": 346, "still": 346, "meaning": [346, 354], "header": 346, "choic": [346, 355, 357], "numer": 346, "layout": 346, "accessor": 346, "small": [346, 358], "macro": 346, "inlin": 346, "templat": 346, "ten": 346, "fewer": 346, "taken": 346, "engin": 346, "debug": 346, "dure": [346, 362], "recombin": 346, "relink": 346, "mechan": 346, "properli": 346, "compat": 346, "4d0": 346, "4d1": 346, "uncombin": 346, "prerequisit": 347, "yet": 347, "simplest": 347, "recommend": [347, 351, 352, 362], "conda": 347, "forg": [347, 348], "pip": 347, "via": 347, "pypi": 347, "instruct": [347, 358], "author": [347, 358], "citat": [347, 358], "elsevi": 347, "ase": 348, "romerogroup": 348, "onc": 348, "robust": [349, 350], "manag": [349, 350], "kohn": [349, 350, 360], "sham": [349, 350, 360], "That": [349, 350], "multitud": [349, 350], "partial": [349, 350], "convent": [351, 352, 355], "s_x": [351, 352, 357, 359], "s_y": [351, 352, 357], "st": [351, 352, 357, 358], "perpendicular": [351, 352, 357], "k_x": [351, 352, 357], "k_y": [351, 352, 357], "rashba": [351, 352, 357], "seismic": [351, 352], "onto": [351, 352, 360], "ion": [351, 352, 359, 360], "five": [351, 352], "_3": [351, 352, 355], "correl": [351, 352], "strongli": [351, 352], "jm": 351, "y_": [351, 352, 360], "logic": [351, 352], "probe": [351, 352], "queri": [351, 352], "portrai": 352, "fine": [352, 357, 358], "let": 352, "usag": [352, 353, 354, 355, 357, 359, 362, 364], "39": 352, "79": 352, "119": 352, "159": 352, "filter": [352, 360], "comparison": [352, 354], "syntax": 352, "bands_up": 352, "block": [352, 360], "meant": 352, "suit": 352, "four": 352, "set_titl": 352, "convers": 352, "variabl": 352, "199": [352, 364], "239": 352, "279": 352, "319": 352, "scriptbandsplot": 352, "larg": [353, 359], "hexagon": [353, 364], "procar_g": 353, "procar_k": 353, "procar_m": 353, "seper": 353, "scriptcat": 353, "acheiv": 354, "procar1": 354, "kpointsfil": 354, "kpoints1": 354, "outcar1": 354, "srvo_3": 354, "veri": [355, 359], "invlov": 355, "exmpla": 355, "api": 355, "match": [355, 358], "aregumnet": 355, "button": 355, "did": 355, "defalut": 355, "switch": [355, 358], "back": 355, "dos_plain_v": 355, "illustr": [355, 360], "familiar": 355, "lawngreen": 355, "orang": 355, "royalblu": 355, "stach": 355, "anoth": [355, 358], "variat": 355, "dresselhau": 357, "analyz": 357, "topologi": 357, "examin": 357, "lifshitz": 357, "transit": 357, "e_": 357, "noarrow": 357, "heat": 357, "usual": 357, "fault": 357, "solut": 357, "90": 357, "degre": 357, "mostli": 357, "220": 357, "Be": 357, "care": 357, "exportplt": [357, 364], "scriptfermi2d": 357, "k_z_plane": 357, "rot_symm": 357, "add_axes_label": 357, "k_z": 357, "invers": 357, "rbg": 357, "phonon": 358, "divid": 358, "sub": 358, "monkhorst": 358, "pack": 358, "isym": 358, "focus": 358, "polygon": 358, "smooth": 358, "known": 358, "cube": 358, "999999": 358, "000001": 358, "triangl": 358, "assign": 358, "aspect": 358, "handel": 358, "isosurfcac": 358, "fermisurfcae3d": 358, "eigen": 358, "bottom": 358, "amaz": 358, "pyvista_doc": 358, "trimesh_doc": 358, "trimesh_cit": 358, "dawson": 358, "haggerti": 358, "trimsh": 358, "sullivan2019pyvista": 358, "21105": 358, "joss": 358, "01450": 358, "month": 358, "37": 358, "1450": 358, "bane": 358, "sullivan": 358, "alexand": 358, "kaszynski": 358, "analysi": [358, 359], "streamlin": 358, "toolkit": 358, "vtk": 358, "mgb": 358, "srfeo": 358, "won": 358, "nonpol": 358, "scale": 358, "try": 358, "transpar": 358, "nprocess": 358, "scheme": [358, 364], "p_x": [358, 359], "p_y": 358, "p_z": 358, "spinor": [358, 360], "ON": 358, "opac": 358, "sampl": 358, "enough": 358, "evalu": 358, "kx1": 358, "ky1": 358, "kz1": 358, "color1": 358, "kx2": 358, "ky2": 358, "kz2": 358, "color2": 358, "kx3": 358, "ky3": 358, "kz3": 358, "color3": 358, "request": 358, "linux": 358, "mac": 358, "focu": 358, "zoom": 358, "isometr": 358, "wirefram": 358, "reset": 358, "middl": 358, "pan": 358, "scene": 358, "left": [358, 360], "cmd": 358, "ctrl": 358, "mous": 358, "wheel": 358, "ctl": 358, "screenhsot": 358, "backgroundplott": 358, "pick": 358, "decreas": 358, "scriptfermi3d": 358, "simpler": 359, "subset": 359, "heterostructur": 359, "enorm": 359, "consider": 359, "faster": 359, "rel": 359, "smaller": 359, "70": 359, "ignor": 359, "far": 359, "band50": 359, "low": 359, "column": [359, 360], "real": 359, "filtered_sp": 359, "especi": 359, "hybrid": 359, "filtered_kpoint": 359, "filtered_spin": 359, "filter_atom": 359, "atom_typ": 359, "scriptfilt": 359, "orbital_nam": 359, "human_atom": 359, "re": 359, "overview": 360, "guidanc": 360, "conduct": 360, "prep": 360, "commonli": 360, "decompos": 360, "224": 360, "12500000": 360, "52": 360, "65660295": 360, "occ": 360, "052": 360, "000": 360, "comment": 360, "nion": 360, "report": 360, "repeat": 360, "spheric": 360, "sphere": 360, "radiu": 360, "alpha": 360, "phi_": 360, "nk": 360, "frac": 360, "sum_": 360, "mu": 360, "nu": 360, "sigma_": 360, "psi_": 360, "sigma": 360, "pauli": 360, "bmatrix": 360, "translat": 360, "keyboard": 360, "shortcut": 360, "ill": 362, "lack": 362, "neg": 362, "5000000": 362, "scriptrepair": 362, "often": 364, "primit": 364, "becom": 364, "quit": 364, "sophist": 364, "fold": 364, "difficult": 364, "fat": 364, "proport": 364, "shrink": 364, "2x2x2": 364, "distanc": 364, "doubl": 364, "fname": 364, "diag": 364, "shift_efermi": 364, "54": 364, "86": 364, "110": 364, "147": 364, "165": 364, "print_kpt": 364, "show_band": 364, "savetab": 364, "csv": 364, "unfolded_band": 364, "scriptunfold": 364, "elkin": 364, "unfold_mod": 364, "unfold_mask": 364, "unfold_result": 364, "unfol": 364}, "objects": {"pyprocar.core": [[0, 0, 1, "", "BrillouinZone"], [3, 0, 1, "", "DensityOfStates"], [12, 0, 1, "", "ElectronicBandStructure"], [54, 0, 1, "", "FermiSurface"], [61, 0, 1, "", "FermiSurface3D"], [74, 0, 1, "", "Isosurface"], [81, 0, 1, "", "KPath"], [90, 0, 1, "", "Structure"], [116, 0, 1, "", "Surface"]], "pyprocar.core.BrillouinZone": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "wigner_seitz"]], "pyprocar.core.DensityOfStates": [[4, 1, 1, "", "__init__"], [5, 1, 1, "", "coupled_to_uncoupled_basis"], [6, 1, 1, "", "dos_sum"], [7, 1, 1, "", "get_current_basis"], [8, 2, 1, "", "is_non_collinear"], [9, 2, 1, "", "n_dos"], [10, 2, 1, "", "n_energies"], [11, 2, 1, "", "n_spins"]], "pyprocar.core.ElectronicBandStructure": [[13, 1, 1, "", "__init__"], [14, 2, 1, "", "bands_gradient_mesh"], [15, 2, 1, "", "bands_hessian_mesh"], [16, 2, 1, "", "bands_mesh"], [17, 1, 1, "", "calculate_scalar_gradient"], [18, 1, 1, "", "calculate_scalar_integral"], [19, 1, 1, "", "create_nd_mesh"], [20, 1, 1, "", "create_scaler_mesh"], [21, 1, 1, "", "create_vector_mesh"], [22, 1, 1, "", "ebs_sum"], [23, 1, 1, "", "ibz2fbz"], [24, 2, 1, "", "index_mesh"], [25, 2, 1, "", "is_non_collinear"], [26, 2, 1, "", "kpoints_cartesian"], [27, 2, 1, "", "kpoints_cartesian_mesh"], [28, 2, 1, "", "kpoints_mesh"], [29, 2, 1, "", "kpoints_reduced"], [30, 2, 1, "", "n_kx"], [31, 2, 1, "", "n_ky"], [32, 2, 1, "", "n_kz"], [33, 2, 1, "", "natoms"], [34, 2, 1, "", "nbands"], [35, 2, 1, "", "nkpoints"], [36, 2, 1, "", "norbitals"], [37, 2, 1, "", "nprincipals"], [38, 2, 1, "", "nspins"], [39, 1, 1, "", "plot_kpoints"], [40, 2, 1, "", "projected_mesh"], [41, 2, 1, "", "projected_phase_mesh"], [42, 1, 1, "", "unfold"], [43, 1, 1, "", "update_bands_gradient_mesh"], [44, 1, 1, "", "update_bands_hessian_mesh"], [45, 1, 1, "", "update_bands_mesh"], [46, 1, 1, "", "update_index_mesh"], [47, 1, 1, "", "update_kpoints_cartesian_mesh"], [48, 1, 1, "", "update_kpoints_mesh"], [49, 1, 1, "", "update_projected_mesh"], [50, 1, 1, "", "update_projected_phase_mesh"], [51, 1, 1, "", "update_weights"], [52, 1, 1, "", "update_weights_mesh"], [53, 2, 1, "", "weights_mesh"]], "pyprocar.core.FermiSurface": [[55, 1, 1, "", "__init__"], [56, 1, 1, "", "add_axes_labels"], [57, 1, 1, "", "add_legend"], [58, 1, 1, "", "find_energy"], [59, 1, 1, "", "plot"], [60, 1, 1, "", "spin_texture"]], "pyprocar.core.FermiSurface3D": [[62, 1, 1, "", "__init__"], [63, 1, 1, "", "calculate_effective_mass"], [64, 1, 1, "", "calculate_fermi_speed"], [65, 1, 1, "", "calculate_fermi_velocity"], [66, 1, 1, "", "calculate_first_and_second_derivative_energy"], [67, 1, 1, "", "calculate_first_and_second_derivative_energy_band"], [68, 1, 1, "", "create_spin_texture"], [69, 1, 1, "", "create_vector_texture"], [70, 1, 1, "", "extend_surface"], [71, 1, 1, "", "project_atomic_projections"], [72, 1, 1, "", "project_color"], [73, 1, 1, "", "project_spin_texture_atomic_projections"]], "pyprocar.core.Isosurface": [[75, 1, 1, "", "__init__"], [76, 2, 1, "", "dxyz"], [77, 2, 1, "", "nX"], [78, 2, 1, "", "nY"], [79, 2, 1, "", "nZ"], [80, 2, 1, "", "surface_boundaries"]], "pyprocar.core.KPath": [[82, 1, 1, "", "__init__"], [83, 1, 1, "", "get_kpoints_transformed"], [84, 1, 1, "", "get_optimized_kpoints_transformed"], [85, 2, 1, "", "kdistances"], [86, 2, 1, "", "nsegments"], [87, 2, 1, "", "tick_names"], [88, 2, 1, "", "tick_positions"], [89, 1, 1, "", "write_to_file"]], "pyprocar.core.Structure": [[91, 1, 1, "", "__init__"], [92, 2, 1, "", "a"], [93, 2, 1, "", "alpha"], [94, 2, 1, "", "atomic_numbers"], [95, 2, 1, "", "b"], [96, 2, 1, "", "beta"], [97, 2, 1, "", "c"], [98, 2, 1, "", "cell_convex_hull"], [99, 2, 1, "", "density"], [100, 2, 1, "", "gamma"], [101, 1, 1, "", "get_space_group_international"], [102, 1, 1, "", "get_space_group_number"], [103, 1, 1, "", "get_spglib_symmetry_dataset"], [104, 1, 1, "", "get_wyckoff_positions"], [105, 1, 1, "", "is_point_inside"], [106, 2, 1, "", "lattice_corners"], [107, 2, 1, "", "masses"], [108, 2, 1, "", "natoms"], [109, 2, 1, "", "nspecies"], [110, 1, 1, "", "plot_cell_convex_hull"], [111, 2, 1, "", "reciprocal_lattice"], [112, 2, 1, "", "species"], [113, 1, 1, "", "supercell"], [114, 1, 1, "", "transform"], [115, 2, 1, "", "volume"]], "pyprocar.core.Surface": [[117, 1, 1, "", "__init__"], [118, 2, 1, "", "centers"], [119, 1, 1, "", "export"], [120, 2, 1, "", "faces_array"], [121, 1, 1, "", "set_color_with_cmap"], [122, 1, 1, "", "set_scalars"], [123, 1, 1, "", "set_vectors"]], "pyprocar.io.abinit": [[135, 0, 1, "", "AbinitKpoints"], [137, 0, 1, "", "AbinitProcar"], [139, 0, 1, "", "Output"]], "pyprocar.io.abinit.AbinitKpoints": [[136, 1, 1, "", "__init__"]], "pyprocar.io.abinit.AbinitProcar": [[138, 1, 1, "", "__init__"]], "pyprocar.io.abinit.Output": [[140, 1, 1, "", "__init__"]], "pyprocar.io.bxsf": [[141, 0, 1, "", "BxsfParser"]], "pyprocar.io.bxsf.BxsfParser": [[142, 1, 1, "", "__init__"], [143, 1, 1, "", "parse_bxsf"]], "pyprocar.io.lobster": [[144, 0, 1, "", "LobsterParser"]], "pyprocar.io.lobster.LobsterParser": [[145, 1, 1, "", "__init__"], [146, 2, 1, "", "dos"], [147, 1, 1, "", "dos_parametric"], [148, 2, 1, "", "dos_projected"], [149, 2, 1, "", "dos_to_dict"], [150, 2, 1, "", "dos_total"], [151, 2, 1, "", "final_structure"], [152, 2, 1, "", "initial_structure"], [153, 1, 1, "", "parse_structure"], [154, 2, 1, "", "species"], [155, 2, 1, "", "structure"], [156, 2, 1, "", "structures"]], "pyprocar.io.qe": [[157, 0, 1, "", "QEParser"]], "pyprocar.io.qe.QEParser": [[158, 1, 1, "", "__init__"], [159, 2, 1, "", "final_structure"], [160, 1, 1, "", "getKpointLabels"], [161, 2, 1, "", "initial_structure"], [162, 1, 1, "", "kpoints_cart"], [163, 2, 1, "", "species"], [164, 2, 1, "", "structure"], [165, 2, 1, "", "structures"]], "pyprocar.io.siesta": [[166, 0, 1, "", "SiestaParser"]], "pyprocar.io.siesta.SiestaParser": [[167, 1, 1, "", "__init__"]], "pyprocar.io.vasp": [[168, 0, 1, "", "Kpoints"], [170, 0, 1, "", "Outcar"], [175, 0, 1, "", "Poscar"], [177, 0, 1, "", "Procar"], [183, 0, 1, "", "VaspXML"]], "pyprocar.io.vasp.Kpoints": [[169, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Outcar": [[171, 1, 1, "", "__init__"], [172, 2, 1, "", "efermi"], [173, 2, 1, "", "reciprocal_lattice"], [174, 2, 1, "", "rotations"]], "pyprocar.io.vasp.Poscar": [[176, 1, 1, "", "__init__"]], "pyprocar.io.vasp.Procar": [[178, 1, 1, "", "__init__"], [179, 2, 1, "", "kpoints_cartesian"], [180, 2, 1, "", "kpoints_reduced"], [181, 1, 1, "", "repair"], [182, 1, 1, "", "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[184, 1, 1, "", "__init__"], [185, 2, 1, "", "bands"], [186, 2, 1, "", "bands_projected"], [187, 1, 1, "", "conv"], [188, 2, 1, "", "convergence"], [189, 2, 1, "", "convergence_electronic"], [190, 2, 1, "", "convergence_ionic"], [191, 2, 1, "", "dos"], [192, 2, 1, "", "dos_projected"], [193, 2, 1, "", "dos_to_dict"], [194, 2, 1, "", "dos_total"], [195, 2, 1, "", "energies"], [196, 2, 1, "", "energy"], [197, 2, 1, "", "fermi"], [198, 2, 1, "", "final_structure"], [199, 2, 1, "", "forces"], [200, 1, 1, "", "get_general"], [201, 1, 1, "", "get_params"], [202, 1, 1, "", "get_scstep"], [203, 1, 1, "", "get_set"], [204, 1, 1, "", "get_structure"], [205, 1, 1, "", "get_varray"], [206, 2, 1, "", "incar"], [207, 2, 1, "", "initial_structure"], [208, 2, 1, "", "is_finished"], [209, 2, 1, "", "iteration_data"], [210, 2, 1, "", "kpoints"], [211, 2, 1, "", "kpoints_list"], [212, 2, 1, "", "last_energy"], [213, 1, 1, "", "parse_vasprun"], [214, 2, 1, "", "potcar_info"], [215, 1, 1, "", "read"], [216, 2, 1, "", "species"], [217, 2, 1, "", "structure"], [218, 2, 1, "", "structures"], [219, 1, 1, "", "text_to_bool"], [220, 2, 1, "", "vasp_parameters"]], "pyprocar.plotter": [[228, 0, 1, "", "DOSPlot"], [247, 0, 1, "", "EBSPlot"], [265, 0, 1, "", "ProcarPlot"]], "pyprocar.plotter.DOSPlot": [[229, 1, 1, "", "__init__"], [230, 1, 1, "", "draw_fermi"], [231, 1, 1, "", "grid"], [232, 1, 1, "", "legend"], [233, 1, 1, "", "plot_dos"], [234, 1, 1, "", "plot_parametric"], [235, 1, 1, "", "plot_parametric_line"], [236, 1, 1, "", "plot_stack"], [237, 1, 1, "", "plot_stack_orbitals"], [238, 1, 1, "", "plot_stack_species"], [239, 1, 1, "", "save"], [240, 1, 1, "", "set_xlabel"], [241, 1, 1, "", "set_xlim"], [242, 1, 1, "", "set_xticks"], [243, 1, 1, "", "set_ylabel"], [244, 1, 1, "", "set_ylim"], [245, 1, 1, "", "set_yticks"], [246, 1, 1, "", "show"]], "pyprocar.plotter.EBSPlot": [[248, 1, 1, "", "__init__"], [249, 1, 1, "", "draw_fermi"], [250, 1, 1, "", "grid"], [251, 1, 1, "", "legend"], [252, 1, 1, "", "plot_bands"], [253, 1, 1, "", "plot_parameteric"], [254, 1, 1, "", "plot_parameteric_overlay"], [255, 1, 1, "", "plot_scatter"], [256, 1, 1, "", "save"], [257, 1, 1, "", "set_title"], [258, 1, 1, "", "set_xlabel"], [259, 1, 1, "", "set_xlim"], [260, 1, 1, "", "set_xticks"], [261, 1, 1, "", "set_ylabel"], [262, 1, 1, "", "set_ylim"], [263, 1, 1, "", "set_yticks"], [264, 1, 1, "", "show"]], "pyprocar.plotter.ProcarPlot": [[266, 1, 1, "", "__init__"], [267, 1, 1, "", "atomicPlot"], [268, 1, 1, "", "parametricPlot"], [269, 1, 1, "", "plotBands"], [270, 1, 1, "", "scatterPlot"]], "pyprocar": [[355, 3, 0, "-", "scriptDosplot"]], "pyprocar.scripts": [[275, 0, 1, "", "FermiHandler"], [282, 4, 1, "", "bandgap"], [283, 4, 1, "", "bandsdosplot"], [284, 4, 1, "", "bandsplot"], [285, 4, 1, "", "bandsplot_2d"], [286, 4, 1, "", "cat"], [287, 4, 1, "", "dosplot"], [288, 4, 1, "", "fermi3D"], [289, 4, 1, "", "generate2dkmesh"], [290, 4, 1, "", "kpath"], [291, 4, 1, "", "repair"], [352, 3, 0, "-", "scriptBandsplot"], [353, 3, 0, "-", "scriptCat"], [357, 3, 0, "-", "scriptFermi2D"], [358, 3, 0, "-", "scriptFermi3D"], [359, 3, 0, "-", "scriptFilter"], [362, 3, 0, "-", "scriptRepair"], [364, 3, 0, "-", "scriptUnfold"]], "pyprocar.scripts.FermiHandler": [[276, 1, 1, "", "__init__"], [277, 1, 1, "", "create_isovalue_gif"], [278, 1, 1, "", "plot_fermi_cross_section"], [279, 1, 1, "", "plot_fermi_isoslider"], [280, 1, 1, "", "plot_fermi_surface"], [281, 1, 1, "", "plot_fermi_surface_area_vs_isovalue"]], "pyprocar.scripts.scriptBandsplot": [[352, 4, 1, "", "bandsplot"]], "pyprocar.scripts.scriptCat": [[353, 4, 1, "", "cat"]], "pyprocar.scripts.scriptFermi2D": [[357, 4, 1, "", "fermi2D"]], "pyprocar.scripts.scriptFermi3D": [[358, 4, 1, "", "fermi3D"]], "pyprocar.scripts.scriptFilter": [[359, 4, 1, "", "filter"]], "pyprocar.scripts.scriptRepair": [[362, 4, 1, "", "repair"]], "pyprocar.scripts.scriptUnfold": [[364, 4, 1, "", "unfold"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:module", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "titleterms": {"pyprocar": [0, 3, 12, 54, 61, 74, 81, 90, 116, 135, 137, 139, 141, 144, 157, 166, 168, 170, 175, 177, 183, 228, 247, 265, 275, 346, 347, 349, 350], "core": [0, 3, 12, 54, 61, 74, 81, 90, 116, 129], "brillouinzon": [0, 124], "__init__": [1, 4, 13, 55, 62, 75, 82, 91, 117, 136, 138, 140, 142, 145, 158, 167, 169, 171, 176, 178, 184, 229, 248, 266, 276], "wigner_seitz": 2, "densityofst": [3, 125], "coupled_to_uncoupled_basi": 5, "dos_sum": 6, "get_current_basi": 7, "is_non_collinear": [8, 25], "n_do": 9, "n_energi": 10, "n_spin": 11, "electronicbandstructur": [12, 126, 356], "bands_gradient_mesh": 14, "bands_hessian_mesh": 15, "bands_mesh": 16, "calculate_scalar_gradi": 17, "calculate_scalar_integr": 18, "create_nd_mesh": 19, "create_scaler_mesh": 20, "create_vector_mesh": 21, "ebs_sum": 22, "ibz2fbz": 23, "index_mesh": 24, "kpoints_cartesian": [26, 179], "kpoints_cartesian_mesh": 27, "kpoints_mesh": 28, "kpoints_reduc": [29, 180], "n_kx": 30, "n_ky": 31, "n_kz": 32, "natom": [33, 108], "nband": 34, "nkpoint": 35, "norbit": 36, "nprincip": 37, "nspin": 38, "plot_kpoint": 39, "projected_mesh": 40, "projected_phase_mesh": 41, "unfold": [42, 364], "update_bands_gradient_mesh": 43, "update_bands_hessian_mesh": 44, "update_bands_mesh": 45, "update_index_mesh": 46, "update_kpoints_cartesian_mesh": 47, "update_kpoints_mesh": 48, "update_projected_mesh": 49, "update_projected_phase_mesh": 50, "update_weight": 51, "update_weights_mesh": 52, "weights_mesh": 53, "fermisurfac": [54, 127], "add_axes_label": 56, "add_legend": 57, "find_energi": 58, "plot": [59, 313, 315, 316, 317, 320, 321, 322, 323, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 341, 343, 345, 352, 357, 364], "spin_textur": [60, 338], "fermisurface3d": [61, 128], "calculate_effective_mass": 63, "calculate_fermi_spe": 64, "calculate_fermi_veloc": 65, "calculate_first_and_second_derivative_energi": 66, "calculate_first_and_second_derivative_energy_band": 67, "create_spin_textur": 68, "create_vector_textur": 69, "extend_surfac": 70, "project_atomic_project": 71, "project_color": 72, "project_spin_texture_atomic_project": 73, "isosurfac": [74, 130], "dxyz": 76, "nx": 77, "ny": 78, "nz": 79, "surface_boundari": 80, "kpath": [81, 131, 290, 303], "get_kpoints_transform": 83, "get_optimized_kpoints_transform": 84, "kdistanc": 85, "nsegment": 86, "tick_nam": 87, "tick_posit": 88, "write_to_fil": 89, "structur": [90, 132, 155, 156, 164, 165, 217, 218, 309, 311, 312, 313, 314, 315, 316, 317, 345, 352, 363], "alpha": 93, "atomic_numb": 94, "b": 95, "beta": 96, "c": 97, "cell_convex_hul": 98, "densiti": [99, 309, 311, 319, 320, 323, 345, 355], "gamma": 100, "get_space_group_intern": 101, "get_space_group_numb": 102, "get_spglib_symmetry_dataset": 103, "get_wyckoff_posit": 104, "is_point_insid": 105, "lattice_corn": 106, "mass": 107, "nspeci": 109, "plot_cell_convex_hul": 110, "reciprocal_lattic": [111, 173], "speci": [112, 154, 163, 216], "supercel": 113, "transform": 114, "volum": 115, "surfac": [116, 133, 358], "center": 118, "export": [119, 352, 357, 364], "faces_arrai": 120, "set_color_with_cmap": 121, "set_scalar": 122, "set_vector": 123, "api": [129, 134, 223, 273, 302], "refer": 134, "io": [135, 137, 139, 141, 144, 157, 166, 168, 170, 175, 177, 183, 223], "abinit": [135, 137, 139, 305], "abinitkpoint": 135, "abinitprocar": 137, "output": 139, "bxsf": 141, "bxsfparser": [141, 222], "parse_bxsf": 143, "lobster": [144, 308], "lobsterpars": [144, 224], "do": [146, 191, 321, 322, 325, 345], "dos_parametr": 147, "dos_project": [148, 192], "dos_to_dict": [149, 193], "dos_tot": [150, 194], "final_structur": [151, 159, 198], "initial_structur": [152, 161, 207], "parse_structur": 153, "qe": 157, "qepars": [157, 225], "getkpointlabel": 160, "kpoints_cart": 162, "siesta": [166, 310], "siestapars": [166, 226], "vasp": [168, 170, 175, 177, 183, 311, 316, 322], "kpoint": [168, 210, 357], "outcar": 170, "efermi": 172, "rotat": [174, 357], "poscar": 175, "procar": [177, 358], "repair": [181, 291, 362], "symmetr": 182, "vaspxml": 183, "band": [185, 309, 311, 312, 313, 314, 315, 316, 317, 325, 329, 330, 345, 352, 354, 364], "bands_project": 186, "conv": 187, "converg": 188, "convergence_electron": 189, "convergence_ion": 190, "energi": [195, 196], "fermi": [197, 309, 311, 328, 332, 345, 358], "forc": 199, "get_gener": 200, "get_param": 201, "get_scstep": 202, "get_set": 203, "get_structur": 204, "get_varrai": 205, "incar": 206, "is_finish": 208, "iteration_data": 209, "kpoints_list": 211, "last_energi": 212, "parse_vasprun": 213, "potcar_info": 214, "read": 215, "text_to_bool": 219, "vasp_paramet": 220, "abinitpars": 221, "vasppars": 227, "plotter": [228, 247, 265, 273], "dosplot": [228, 272, 287, 297], "draw_fermi": [230, 249], "grid": [231, 250], "legend": [232, 251], "plot_do": 233, "plot_parametr": 234, "plot_parametric_lin": 235, "plot_stack": 236, "plot_stack_orbit": 237, "plot_stack_speci": 238, "save": [239, 256, 333], "set_xlabel": [240, 258], "set_xlim": [241, 259], "set_xtick": [242, 260], "set_ylabel": [243, 261], "set_ylim": [244, 262], "set_ytick": [245, 263], "show": [246, 264], "ebsplot": [247, 271], "plot_band": 252, "plot_parameter": 253, "plot_parameteric_overlai": 254, "plot_scatt": 255, "set_titl": 257, "procarplot": [265, 274], "atomicplot": 267, "parametricplot": 268, "plotband": 269, "scatterplot": 270, "script": [275, 302], "fermihandl": [275, 298], "create_isovalue_gif": 277, "plot_fermi_cross_sect": 278, "plot_fermi_isoslid": 279, "plot_fermi_surfac": 280, "plot_fermi_surface_area_vs_isovalu": 281, "bandgap": [282, 292, 342], "bandsdosplot": [283, 293, 326], "bandsplot": [284, 294], "bandsplot_2d": [285, 295, 300], "cat": [286, 296], "fermi3d": [288, 299, 333, 334, 335, 336, 337, 338], "generate2dkmesh": [289, 301], "reapir": 304, "perper": [305, 306, 308, 310], "elk": 306, "dft": 307, "prep": 307, "quantum": [309, 315, 321], "espresso": [309, 315, 321], "prepar": [309, 311], "calcul": [309, 311, 353], "state": [309, 311, 319, 320, 323, 345, 355], "k": [309, 311, 343, 352, 359, 361], "point": [309, 311, 352, 359], "format": [309, 311], "magnet": [309, 311], "plain": [313, 315, 316, 317, 320, 323, 326, 329, 334, 335, 336, 337, 352, 355, 358], "mode": [313, 315, 316, 317, 320, 321, 322, 323, 326, 329, 334, 335, 336, 337, 338, 355], "parametr": [313, 315, 316, 317, 320, 321, 322, 323, 329, 336, 337, 355], "parametric_linemod": 313, "scatter": [313, 317], "overlay_speci": 313, "overlay_orbti": 313, "overlai": [313, 320], "orbit": [313, 351, 352, 359], "name": 313, "compar": [314, 354], "non": [315, 316, 321, 322], "colinear": [315, 316, 321, 322], "spin": [317, 323, 330, 337, 338, 351, 352, 357, 359], "polar": [317, 323, 337], "comput": [318, 324, 327, 331, 339, 344], "time": [318, 324, 327, 331, 339, 344], "parametric_lin": [320, 323, 355], "stack_speci": [320, 323, 355], "stack_orbti": [320, 323], "stack": [323, 355], "2d": [328, 345, 357], "fermi2d": [329, 330], "plain_band": 329, "select": [329, 330, 359], "indic": [329, 330, 350], "noncolinear": 330, "textur": [330, 338, 357], "project": [330, 351, 352], "singl": 330, "color": [330, 358], "3d": [332, 345, 358], "cross_sect": 333, "cross": 333, "section": 333, "slice": 333, "isoslid": 334, "isovalue_gif": 335, "other": [340, 345], "exampl": [341, 342, 343, 345, 358], "kmesh_gener": 341, "kmesh": 341, "find": 342, "kpath_gener": 343, "path": [343, 352, 361], "author": 346, "citat": 346, "cite": [346, 347], "contributor": 346, "develop": 346, "licens": 346, "get": 347, "start": 347, "instal": [347, 348], "paper": 347, "support": 347, "pip": 348, "conda": 348, "clone": 348, "through": 348, "github": 348, "after": 348, "why": 349, "tabl": 350, "atom": [351, 352, 359], "1": [351, 352, 355, 358], "2": [351, 352, 355, 358], "3": [351, 352, 355, 358], "4": [352, 355], "matplotlib": [352, 357, 364], "pyplot": [352, 357, 364], "object": [352, 357, 364], "convert": 352, "from": [352, 358], "reduc": 352, "cartesian": 352, "coordin": 352, "discontinu": 352, "concaten": 353, "multipl": 353, "5": 355, "6": 355, "stack_orbit": 355, "translat": 357, "mesh": 357, "base": 358, "properti": 358, "obtain": 358, "an": 358, "extern": 358, "file": 358, "keyboard": 358, "shortcut": 358, "filter": 359, "data": 359, "To": 359, "user": 360, "guid": 360, "further": 360, "detail": 360}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pyprocar.core.BrillouinZone": [[0, "pyprocar-core-brillouinzone"]], "__init__": [[1, "init"], [4, "init"], [13, "init"], [55, "init"], [62, "init"], [75, "init"], [82, "init"], [91, "init"], [117, "init"], [136, "init"], [138, "init"], [140, "init"], [142, "init"], [145, "init"], [158, "init"], [167, "init"], [169, "init"], [171, "init"], [176, "init"], [178, "init"], [184, "init"], [229, "init"], [248, "init"], [266, "init"], [276, "init"]], "wigner_seitz": [[2, "wigner-seitz"]], "pyprocar.core.DensityOfStates": [[3, "pyprocar-core-densityofstates"]], "coupled_to_uncoupled_basis": [[5, "coupled-to-uncoupled-basis"]], "dos_sum": [[6, "dos-sum"]], "get_current_basis": [[7, "get-current-basis"]], "is_non_collinear": [[8, "is-non-collinear"], [25, "is-non-collinear"]], "n_dos": [[9, "n-dos"]], "n_energies": [[10, "n-energies"]], "n_spins": [[11, "n-spins"]], "pyprocar.core.ElectronicBandStructure": [[12, "pyprocar-core-electronicbandstructure"]], "bands_gradient_mesh": [[14, "bands-gradient-mesh"]], "bands_hessian_mesh": [[15, "bands-hessian-mesh"]], "bands_mesh": [[16, "bands-mesh"]], "calculate_scalar_gradient": [[17, "calculate-scalar-gradient"]], "calculate_scalar_integral": [[18, "calculate-scalar-integral"]], "create_nd_mesh": [[19, "create-nd-mesh"]], "create_scaler_mesh": [[20, "create-scaler-mesh"]], "create_vector_mesh": [[21, "create-vector-mesh"]], "ebs_sum": [[22, "ebs-sum"]], "ibz2fbz": [[23, "ibz2fbz"]], "index_mesh": [[24, "index-mesh"]], "kpoints_cartesian": [[26, "kpoints-cartesian"], [179, "kpoints-cartesian"]], "kpoints_cartesian_mesh": [[27, "kpoints-cartesian-mesh"]], "kpoints_mesh": [[28, "kpoints-mesh"]], "kpoints_reduced": [[29, "kpoints-reduced"], [180, "kpoints-reduced"]], "n_kx": [[30, "n-kx"]], "n_ky": [[31, "n-ky"]], "n_kz": [[32, "n-kz"]], "natoms": [[33, "natoms"], [108, "natoms"]], "nbands": [[34, "nbands"]], "nkpoints": [[35, "nkpoints"]], "norbitals": [[36, "norbitals"]], "nprincipals": [[37, "nprincipals"]], "nspins": [[38, "nspins"]], "plot_kpoints": [[39, "plot-kpoints"]], "projected_mesh": [[40, "projected-mesh"]], "projected_phase_mesh": [[41, "projected-phase-mesh"]], "unfold": [[42, "unfold"]], "update_bands_gradient_mesh": [[43, "update-bands-gradient-mesh"]], "update_bands_hessian_mesh": [[44, "update-bands-hessian-mesh"]], "update_bands_mesh": [[45, "update-bands-mesh"]], "update_index_mesh": [[46, "update-index-mesh"]], "update_kpoints_cartesian_mesh": [[47, "update-kpoints-cartesian-mesh"]], "update_kpoints_mesh": [[48, "update-kpoints-mesh"]], "update_projected_mesh": [[49, "update-projected-mesh"]], "update_projected_phase_mesh": [[50, "update-projected-phase-mesh"]], "update_weights": [[51, "update-weights"]], "update_weights_mesh": [[52, "update-weights-mesh"]], "weights_mesh": [[53, "weights-mesh"]], "pyprocar.core.FermiSurface": [[54, "pyprocar-core-fermisurface"]], "add_axes_labels": [[56, "add-axes-labels"]], "add_legend": [[57, "add-legend"]], "find_energy": [[58, "find-energy"]], "plot": [[59, "plot"]], "spin_texture": [[60, "spin-texture"]], "pyprocar.core.FermiSurface3D": [[61, "pyprocar-core-fermisurface3d"]], "calculate_effective_mass": [[63, "calculate-effective-mass"]], "calculate_fermi_speed": [[64, "calculate-fermi-speed"]], "calculate_fermi_velocity": [[65, "calculate-fermi-velocity"]], "calculate_first_and_second_derivative_energy": [[66, "calculate-first-and-second-derivative-energy"]], "calculate_first_and_second_derivative_energy_band": [[67, "calculate-first-and-second-derivative-energy-band"]], "create_spin_texture": [[68, "create-spin-texture"]], "create_vector_texture": [[69, "create-vector-texture"]], "extend_surface": [[70, "extend-surface"]], "project_atomic_projections": [[71, "project-atomic-projections"]], "project_color": [[72, "project-color"]], "project_spin_texture_atomic_projections": [[73, "project-spin-texture-atomic-projections"]], "pyprocar.core.Isosurface": [[74, "pyprocar-core-isosurface"]], "dxyz": [[76, "dxyz"]], "nX": [[77, "nx"]], "nY": [[78, "ny"]], "nZ": [[79, "nz"]], "surface_boundaries": [[80, "surface-boundaries"]], "pyprocar.core.KPath": [[81, "pyprocar-core-kpath"]], "get_kpoints_transformed": [[83, "get-kpoints-transformed"]], "get_optimized_kpoints_transformed": [[84, "get-optimized-kpoints-transformed"]], "kdistances": [[85, "kdistances"]], "nsegments": [[86, "nsegments"]], "tick_names": [[87, "tick-names"]], "tick_positions": [[88, "tick-positions"]], "write_to_file": [[89, "write-to-file"]], "pyprocar.core.Structure": [[90, "pyprocar-core-structure"]], "a": [[92, "a"]], "alpha": [[93, "alpha"]], "atomic_numbers": [[94, "atomic-numbers"]], "b": [[95, "b"]], "beta": [[96, "beta"]], "c": [[97, "c"]], "cell_convex_hull": [[98, "cell-convex-hull"]], "density": [[99, "density"]], "gamma": [[100, "gamma"]], "get_space_group_international": [[101, "get-space-group-international"]], "get_space_group_number": [[102, "get-space-group-number"]], "get_spglib_symmetry_dataset": [[103, "get-spglib-symmetry-dataset"]], "get_wyckoff_positions": [[104, "get-wyckoff-positions"]], "is_point_inside": [[105, "is-point-inside"]], "lattice_corners": [[106, "lattice-corners"]], "masses": [[107, "masses"]], "nspecies": [[109, "nspecies"]], "plot_cell_convex_hull": [[110, "plot-cell-convex-hull"]], "reciprocal_lattice": [[111, "reciprocal-lattice"], [173, "reciprocal-lattice"]], "species": [[112, "species"], [154, "species"], [163, "species"], [216, "species"]], "supercell": [[113, "supercell"]], "transform": [[114, "transform"]], "volume": [[115, "volume"]], "pyprocar.core.Surface": [[116, "pyprocar-core-surface"]], "centers": [[118, "centers"]], "export": [[119, "export"]], "faces_array": [[120, "faces-array"]], "set_color_with_cmap": [[121, "set-color-with-cmap"]], "set_scalars": [[122, "set-scalars"]], "set_vectors": [[123, "set-vectors"]], "BrillouinZone": [[124, "brillouinzone"]], "DensityOfStates": [[125, "densityofstates"]], "ElectronicBandStructure": [[126, "electronicbandstructure"], [356, "electronicbandstructure"]], "FermiSurface": [[127, "fermisurface"]], "FermiSurface3D": [[128, "fermisurface3d"]], "Core API": [[129, "core-api"]], "Isosurface": [[130, "isosurface"]], "KPath": [[131, "kpath"]], "Structure": [[132, "structure"], [363, "structure"]], "Surface": [[133, "surface"]], "API Reference": [[134, "api-reference"]], "pyprocar.io.abinit.AbinitKpoints": [[135, "pyprocar-io-abinit-abinitkpoints"]], "pyprocar.io.abinit.AbinitProcar": [[137, "pyprocar-io-abinit-abinitprocar"]], "pyprocar.io.abinit.Output": [[139, "pyprocar-io-abinit-output"]], "pyprocar.io.bxsf.BxsfParser": [[141, "pyprocar-io-bxsf-bxsfparser"]], "parse_bxsf": [[143, "parse-bxsf"]], "pyprocar.io.lobster.LobsterParser": [[144, "pyprocar-io-lobster-lobsterparser"]], "dos": [[146, "dos"], [191, "dos"]], "dos_parametric": [[147, "dos-parametric"]], "dos_projected": [[148, "dos-projected"], [192, "dos-projected"]], "dos_to_dict": [[149, "dos-to-dict"], [193, "dos-to-dict"]], "dos_total": [[150, "dos-total"], [194, "dos-total"]], "final_structure": [[151, "final-structure"], [159, "final-structure"], [198, "final-structure"]], "initial_structure": [[152, "initial-structure"], [161, "initial-structure"], [207, "initial-structure"]], "parse_structure": [[153, "parse-structure"]], "structure": [[155, "structure"], [164, "structure"], [217, "structure"]], "structures": [[156, "structures"], [165, "structures"], [218, "structures"]], "pyprocar.io.qe.QEParser": [[157, "pyprocar-io-qe-qeparser"]], "getKpointLabels": [[160, "getkpointlabels"]], "kpoints_cart": [[162, "kpoints-cart"]], "pyprocar.io.siesta.SiestaParser": [[166, "pyprocar-io-siesta-siestaparser"]], "pyprocar.io.vasp.Kpoints": [[168, "pyprocar-io-vasp-kpoints"]], "pyprocar.io.vasp.Outcar": [[170, "pyprocar-io-vasp-outcar"]], "efermi": [[172, "efermi"]], "rotations": [[174, "rotations"]], "pyprocar.io.vasp.Poscar": [[175, "pyprocar-io-vasp-poscar"]], "pyprocar.io.vasp.Procar": [[177, "pyprocar-io-vasp-procar"]], "repair": [[181, "repair"], [291, "repair"]], "symmetrize": [[182, "symmetrize"]], "pyprocar.io.vasp.VaspXML": [[183, "pyprocar-io-vasp-vaspxml"]], "bands": [[185, "bands"]], "bands_projected": [[186, "bands-projected"]], "conv": [[187, "conv"]], "convergence": [[188, "convergence"]], "convergence_electronic": [[189, "convergence-electronic"]], "convergence_ionic": [[190, "convergence-ionic"]], "energies": [[195, "energies"]], "energy": [[196, "energy"]], "fermi": [[197, "fermi"]], "forces": [[199, "forces"]], "get_general": [[200, "get-general"]], "get_params": [[201, "get-params"]], "get_scstep": [[202, "get-scstep"]], "get_set": [[203, "get-set"]], "get_structure": [[204, "get-structure"]], "get_varray": [[205, "get-varray"]], "incar": [[206, "incar"]], "is_finished": [[208, "is-finished"]], "iteration_data": [[209, "iteration-data"]], "kpoints": [[210, "kpoints"]], "kpoints_list": [[211, "kpoints-list"]], "last_energy": [[212, "last-energy"]], "parse_vasprun": [[213, "parse-vasprun"]], "potcar_info": [[214, "potcar-info"]], "read": [[215, "read"]], "text_to_bool": [[219, "text-to-bool"]], "vasp_parameters": [[220, "vasp-parameters"]], "AbinitParser": [[221, "abinitparser"]], "BxsfParser": [[222, "bxsfparser"]], "IO API": [[223, "io-api"]], "LobsterParser": [[224, "lobsterparser"]], "QEParser": [[225, "qeparser"]], "SiestaParser": [[226, "siestaparser"]], "VaspParser": [[227, "vaspparser"]], "pyprocar.plotter.DOSPlot": [[228, "pyprocar-plotter-dosplot"]], "draw_fermi": [[230, "draw-fermi"], [249, "draw-fermi"]], "grid": [[231, "grid"], [250, "grid"]], "legend": [[232, "legend"], [251, "legend"]], "plot_dos": [[233, "plot-dos"]], "plot_parametric": [[234, "plot-parametric"]], "plot_parametric_line": [[235, "plot-parametric-line"]], "plot_stack": [[236, "plot-stack"]], "plot_stack_orbitals": [[237, "plot-stack-orbitals"]], "plot_stack_species": [[238, "plot-stack-species"]], "save": [[239, "save"], [256, "save"]], "set_xlabel": [[240, "set-xlabel"], [258, "set-xlabel"]], "set_xlim": [[241, "set-xlim"], [259, "set-xlim"]], "set_xticks": [[242, "set-xticks"], [260, "set-xticks"]], "set_ylabel": [[243, "set-ylabel"], [261, "set-ylabel"]], "set_ylim": [[244, "set-ylim"], [262, "set-ylim"]], "set_yticks": [[245, "set-yticks"], [263, "set-yticks"]], "show": [[246, "show"], [264, "show"]], "pyprocar.plotter.EBSPlot": [[247, "pyprocar-plotter-ebsplot"]], "plot_bands": [[252, "plot-bands"]], "plot_parameteric": [[253, "plot-parameteric"]], "plot_parameteric_overlay": [[254, "plot-parameteric-overlay"]], "plot_scatter": [[255, "plot-scatter"]], "set_title": [[257, "set-title"]], "pyprocar.plotter.ProcarPlot": [[265, "pyprocar-plotter-procarplot"]], "atomicPlot": [[267, "atomicplot"]], "parametricPlot": [[268, "parametricplot"]], "plotBands": [[269, "plotbands"]], "scatterPlot": [[270, "scatterplot"]], "EBSPlot": [[271, "ebsplot"]], "DosPlot": [[272, "dosplot"]], "Plotter API": [[273, "plotter-api"]], "ProcarPlot": [[274, "procarplot"]], "pyprocar.scripts.FermiHandler": [[275, "pyprocar-scripts-fermihandler"]], "create_isovalue_gif": [[277, "create-isovalue-gif"]], "plot_fermi_cross_section": [[278, "plot-fermi-cross-section"]], "plot_fermi_isoslider": [[279, "plot-fermi-isoslider"]], "plot_fermi_surface": [[280, "plot-fermi-surface"]], "plot_fermi_surface_area_vs_isovalue": [[281, "plot-fermi-surface-area-vs-isovalue"]], "bandgap": [[282, "bandgap"], [292, "bandgap"]], "bandsdosplot": [[283, "bandsdosplot"], [293, "bandsdosplot"]], "bandsplot": [[284, "bandsplot"], [294, "bandsplot"]], "bandsplot_2d": [[285, "bandsplot-2d"], [295, "bandsplot-2d"], [300, "bandsplot-2d"]], "cat": [[286, "cat"], [296, "cat"]], "dosplot": [[287, "dosplot"], [297, "dosplot"]], "fermi3D": [[288, "fermi3d"], [299, "fermi3d"]], "generate2dkmesh": [[289, "generate2dkmesh"], [301, "generate2dkmesh"]], "kpath": [[290, "kpath"], [303, "kpath"]], "FermiHandler": [[298, "fermihandler"]], "Scripts API": [[302, "scripts-api"]], "reapir": [[304, "reapir"]], "Abinit Perperation": [[305, "abinit-perperation"]], "Elk Perperation": [[306, "elk-perperation"]], "DFT Prep": [[307, "dft-prep"]], "Lobster Perperation": [[308, "lobster-perperation"]], "Quantum Espresso Preparation": [[309, "quantum-espresso-preparation"]], "Preparing Calculations": [[309, "preparing-calculations"], [311, "preparing-calculations"]], "Band Structure": [[309, "band-structure"], [311, "band-structure"], [312, "band-structure"], [345, "band-structure"]], "Density of States": [[309, "density-of-states"], [311, "density-of-states"], [319, "density-of-states"], [345, "density-of-states"], [355, "density-of-states"]], "Band Structure and Density of States": [[309, "band-structure-and-density-of-states"], [311, "band-structure-and-density-of-states"]], "Fermi": [[309, "fermi"], [311, "fermi"]], "K-Points Format": [[309, "k-points-format"], [311, "k-points-format"]], "Magnetic Calculations": [[309, "magnetic-calculations"], [311, "magnetic-calculations"]], "Siesta Perperation": [[310, "siesta-perperation"]], "VASP Preparation": [[311, "vasp-preparation"]], "Plotting band structure": [[313, "plotting-band-structure"]], "Plain mode": [[313, "plain-mode"], [315, "plain-mode"], [316, "plain-mode"], [317, "plain-mode"], [320, "plain-mode"], [323, "plain-mode"], [326, "plain-mode"], [329, "plain-mode"], [334, "plain-mode"], [335, "plain-mode"], [336, "plain-mode"], [337, "plain-mode"]], "Parametric mode": [[313, "parametric-mode"], [315, "parametric-mode"], [316, "parametric-mode"], [317, "parametric-mode"], [320, "parametric-mode"], [321, "parametric-mode"], [322, "parametric-mode"], [323, "parametric-mode"], [336, "parametric-mode"], [337, "parametric-mode"]], "parametric_linemode": [[313, "parametric-linemode"]], "Scatter mode": [[313, "scatter-mode"], [317, "scatter-mode"]], "overlay_species mode": [[313, "overlay-species-mode"]], "overlay_orbtials mode": [[313, "overlay-orbtials-mode"]], "overlay mode": [[313, "overlay-mode"], [320, "overlay-mode"]], "overlay mode by orbital names": [[313, "overlay-mode-by-orbital-names"]], "Comparing band structures": [[314, "comparing-band-structures"]], "Plotting non colinear band structures in Quantum Espresso": [[315, "plotting-non-colinear-band-structures-in-quantum-espresso"]], "Plotting non colinear band structures in VASP": [[316, "plotting-non-colinear-band-structures-in-vasp"]], "Plotting spin polarized band structures": [[317, "plotting-spin-polarized-band-structures"]], "Computation times": [[318, "computation-times"], [324, "computation-times"], [327, "computation-times"], [331, "computation-times"], [339, "computation-times"], [344, "computation-times"]], "Plotting density of states": [[320, "plotting-density-of-states"]], "parametric_line mode": [[320, "parametric-line-mode"], [323, "parametric-line-mode"]], "stack_species mode": [[320, "stack-species-mode"], [323, "stack-species-mode"]], "stack_orbtials mode": [[320, "stack-orbtials-mode"], [323, "stack-orbtials-mode"]], "Plotting non colinear dos in Quantum Espresso": [[321, "plotting-non-colinear-dos-in-quantum-espresso"]], "Plotting non colinear dos in VASP": [[322, "plotting-non-colinear-dos-in-vasp"]], "Plotting spin-polarized density of states": [[323, "plotting-spin-polarized-density-of-states"]], "stack mode": [[323, "stack-mode"]], "Bands and Dos plot": [[325, "bands-and-dos-plot"], [345, "bands-and-dos-plot"]], "Plotting bandsdosplot": [[326, "plotting-bandsdosplot"]], "Fermi 2D": [[328, "fermi-2d"], [345, "fermi-2d"]], "Plotting fermi2d": [[329, "plotting-fermi2d"]], "plain_bands mode": [[329, "plain-bands-mode"]], "parametric mode": [[329, "parametric-mode"]], "Selecting band indices": [[329, "selecting-band-indices"], [330, "selecting-band-indices"]], "Plotting fermi2d noncolinear": [[330, "plotting-fermi2d-noncolinear"]], "Spin Texture Projection": [[330, "spin-texture-projection"]], "Spin Texture single color": [[330, "spin-texture-single-color"]], "Fermi 3D": [[332, "fermi-3d"], [345, "fermi-3d"]], "Plotting fermi3d cross_section": [[333, "plotting-fermi3d-cross-section"]], "Cross section": [[333, "cross-section"]], "Cross section. Save slice": [[333, "cross-section-save-slice"]], "Plotting fermi3d isoslider": [[334, "plotting-fermi3d-isoslider"]], "Plotting fermi3d isovalue_gif": [[335, "plotting-fermi3d-isovalue-gif"]], "Plotting fermi3d plain": [[336, "plotting-fermi3d-plain"]], "Plotting fermi3d spin-polarized": [[337, "plotting-fermi3d-spin-polarized"]], "Plotting fermi3d spin_texture": [[338, "plotting-fermi3d-spin-texture"]], "Spin Texture mode": [[338, "spin-texture-mode"]], "Other": [[340, "other"], [345, "other"]], "Example of kmesh_generator": [[341, "example-of-kmesh-generator"]], "Plotting Kmesh": [[341, "plotting-kmesh"]], "Example of finding the bandgap": [[342, "example-of-finding-the-bandgap"]], "Example of kpath_generator": [[343, "example-of-kpath-generator"]], "Plotting K Path": [[343, "plotting-k-path"]], "Examples": [[345, "examples"], [358, "id1"]], "Authors & Citation": [[346, "authors-citation"]], "Citing PyProcar": [[346, "citing-pyprocar"], [347, "citing-pyprocar"]], "Authors": [[346, "authors"]], "Contributors": [[346, "contributors"]], "Developers": [[346, "developers"]], "License": [[346, "license"]], "Getting started": [[347, "getting-started"]], "Installation": [[347, "installation"], [348, "installation"]], "Paper": [[347, "paper"]], "Support": [[347, "support"]], "Installing with pip": [[348, "installing-with-pip"]], "Installing with conda": [[348, "installing-with-conda"]], "Cloning through GitHub": [[348, "cloning-through-github"]], "After Installation": [[348, "after-installation"]], "Why PyProcar?": [[349, "why-pyprocar"]], "PyProcar": [[350, "pyprocar"]], "Indices and tables": [[350, "indices-and-tables"]], "Atomic Projections": [[351, "atomic-projections"]], "1. Spin projection": [[351, "spin-projection"]], "2. Atom projection": [[351, "atom-projection"]], "3. Orbital projection": [[351, "orbital-projection"]], "Band structure": [[352, "band-structure"]], "1. Plain band structure": [[352, "plain-band-structure"]], "2. Spin projection": [[352, "spin-projection"]], "3. Atom projection": [[352, "atom-projection"]], "4. Orbital projection": [[352, "orbital-projection"]], "Export plot as a matplotlib.pyplot object": [[352, "export-plot-as-a-matplotlib-pyplot-object"], [357, "export-plot-as-a-matplotlib-pyplot-object"], [364, "export-plot-as-a-matplotlib-pyplot-object"]], "Converting k-points from reduced to cartesian coordinates": [[352, "converting-k-points-from-reduced-to-cartesian-coordinates"]], "Plotting band structures with a discontinuous k-path": [[352, "plotting-band-structures-with-a-discontinuous-k-path"]], "Concatenating multiple calculations": [[353, "concatenating-multiple-calculations"]], "Compare bands": [[354, "compare-bands"]], "1. mode='plain'": [[355, "mode-plain"]], "2. mode='parametric'": [[355, "mode-parametric"]], "3. mode='parametric_line'": [[355, "mode-parametric-line"]], "4. mode='stack'": [[355, "mode-stack"]], "5. mode='stack_species'": [[355, "mode-stack-species"]], "6. mode='stack_orbitals'": [[355, "mode-stack-orbitals"]], "2D spin-texture": [[357, "d-spin-texture"]], "Translate and Rotate the 2D KPOINT mesh": [[357, "translate-and-rotate-the-2d-kpoint-mesh"]], "3D Fermi surface": [[358, "d-fermi-surface"]], "3D surfaces": [[358, "d-surfaces"]], "1. Plain Fermi surface": [[358, "plain-fermi-surface"]], "2. Surface coloring based on properties from PROCAR": [[358, "surface-coloring-based-on-properties-from-procar"]], "3. Surface coloring based on properties obtained from an external file": [[358, "surface-coloring-based-on-properties-obtained-from-an-external-file"]], "Keyboard shortcuts": [[358, "keyboard-shortcuts"]], "Filtering data": [[359, "filtering-data"]], "To filter selected orbitals": [[359, "to-filter-selected-orbitals"]], "To filter selected k-points": [[359, "to-filter-selected-k-points"]], "To filter selected spins": [[359, "to-filter-selected-spins"]], "To filter selected atoms": [[359, "to-filter-selected-atoms"]], "User Guide": [[360, "user-guide"]], "Further Details": [[360, "further-details"]], "K Path": [[361, "k-path"]], "Repair": [[362, "repair"]], "Band unfolding": [[364, "band-unfolding"]]}, "indexentries": {"brillouinzone (class in pyprocar.core)": [[0, "pyprocar.core.BrillouinZone"]], "__init__() (pyprocar.core.brillouinzone method)": [[1, "pyprocar.core.BrillouinZone.__init__"]], "wigner_seitz() (pyprocar.core.brillouinzone method)": [[2, "pyprocar.core.BrillouinZone.wigner_seitz"]], "densityofstates (class in pyprocar.core)": [[3, "pyprocar.core.DensityOfStates"]], "__init__() (pyprocar.core.densityofstates method)": [[4, "pyprocar.core.DensityOfStates.__init__"]], "coupled_to_uncoupled_basis() (pyprocar.core.densityofstates method)": [[5, "pyprocar.core.DensityOfStates.coupled_to_uncoupled_basis"]], "dos_sum() (pyprocar.core.densityofstates method)": [[6, "pyprocar.core.DensityOfStates.dos_sum"]], "get_current_basis() (pyprocar.core.densityofstates method)": [[7, "pyprocar.core.DensityOfStates.get_current_basis"]], "is_non_collinear (pyprocar.core.densityofstates property)": [[8, "pyprocar.core.DensityOfStates.is_non_collinear"]], "n_dos (pyprocar.core.densityofstates property)": [[9, "pyprocar.core.DensityOfStates.n_dos"]], "n_energies (pyprocar.core.densityofstates property)": [[10, "pyprocar.core.DensityOfStates.n_energies"]], "n_spins (pyprocar.core.densityofstates property)": [[11, "pyprocar.core.DensityOfStates.n_spins"]], "electronicbandstructure (class in pyprocar.core)": [[12, "pyprocar.core.ElectronicBandStructure"]], "__init__() (pyprocar.core.electronicbandstructure method)": [[13, "pyprocar.core.ElectronicBandStructure.__init__"]], "bands_gradient_mesh (pyprocar.core.electronicbandstructure property)": [[14, "pyprocar.core.ElectronicBandStructure.bands_gradient_mesh"]], "bands_hessian_mesh (pyprocar.core.electronicbandstructure property)": [[15, "pyprocar.core.ElectronicBandStructure.bands_hessian_mesh"]], "bands_mesh (pyprocar.core.electronicbandstructure property)": [[16, "pyprocar.core.ElectronicBandStructure.bands_mesh"]], "calculate_scalar_gradient() (pyprocar.core.electronicbandstructure method)": [[17, "pyprocar.core.ElectronicBandStructure.calculate_scalar_gradient"]], "calculate_scalar_integral() (pyprocar.core.electronicbandstructure method)": [[18, "pyprocar.core.ElectronicBandStructure.calculate_scalar_integral"]], "create_nd_mesh() (pyprocar.core.electronicbandstructure method)": [[19, "pyprocar.core.ElectronicBandStructure.create_nd_mesh"]], "create_scaler_mesh() (pyprocar.core.electronicbandstructure method)": [[20, "pyprocar.core.ElectronicBandStructure.create_scaler_mesh"]], "create_vector_mesh() (pyprocar.core.electronicbandstructure method)": [[21, "pyprocar.core.ElectronicBandStructure.create_vector_mesh"]], "ebs_sum() (pyprocar.core.electronicbandstructure method)": [[22, "pyprocar.core.ElectronicBandStructure.ebs_sum"]], "ibz2fbz() (pyprocar.core.electronicbandstructure method)": [[23, "pyprocar.core.ElectronicBandStructure.ibz2fbz"]], "index_mesh (pyprocar.core.electronicbandstructure property)": [[24, "pyprocar.core.ElectronicBandStructure.index_mesh"]], "is_non_collinear (pyprocar.core.electronicbandstructure property)": [[25, "pyprocar.core.ElectronicBandStructure.is_non_collinear"]], "kpoints_cartesian (pyprocar.core.electronicbandstructure property)": [[26, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian"]], "kpoints_cartesian_mesh (pyprocar.core.electronicbandstructure property)": [[27, "pyprocar.core.ElectronicBandStructure.kpoints_cartesian_mesh"]], "kpoints_mesh (pyprocar.core.electronicbandstructure property)": [[28, "pyprocar.core.ElectronicBandStructure.kpoints_mesh"]], "kpoints_reduced (pyprocar.core.electronicbandstructure property)": [[29, "pyprocar.core.ElectronicBandStructure.kpoints_reduced"]], "n_kx (pyprocar.core.electronicbandstructure property)": [[30, "pyprocar.core.ElectronicBandStructure.n_kx"]], "n_ky (pyprocar.core.electronicbandstructure property)": [[31, "pyprocar.core.ElectronicBandStructure.n_ky"]], "n_kz (pyprocar.core.electronicbandstructure property)": [[32, "pyprocar.core.ElectronicBandStructure.n_kz"]], "natoms (pyprocar.core.electronicbandstructure property)": [[33, "pyprocar.core.ElectronicBandStructure.natoms"]], "nbands (pyprocar.core.electronicbandstructure property)": [[34, "pyprocar.core.ElectronicBandStructure.nbands"]], "nkpoints (pyprocar.core.electronicbandstructure property)": [[35, "pyprocar.core.ElectronicBandStructure.nkpoints"]], "norbitals (pyprocar.core.electronicbandstructure property)": [[36, "pyprocar.core.ElectronicBandStructure.norbitals"]], "nprincipals (pyprocar.core.electronicbandstructure property)": [[37, "pyprocar.core.ElectronicBandStructure.nprincipals"]], "nspins (pyprocar.core.electronicbandstructure property)": [[38, "pyprocar.core.ElectronicBandStructure.nspins"]], "plot_kpoints() (pyprocar.core.electronicbandstructure method)": [[39, "pyprocar.core.ElectronicBandStructure.plot_kpoints"]], "projected_mesh (pyprocar.core.electronicbandstructure property)": [[40, "pyprocar.core.ElectronicBandStructure.projected_mesh"]], "projected_phase_mesh (pyprocar.core.electronicbandstructure property)": [[41, "pyprocar.core.ElectronicBandStructure.projected_phase_mesh"]], "unfold() (pyprocar.core.electronicbandstructure method)": [[42, "pyprocar.core.ElectronicBandStructure.unfold"]], "update_bands_gradient_mesh() (pyprocar.core.electronicbandstructure method)": [[43, "pyprocar.core.ElectronicBandStructure.update_bands_gradient_mesh"]], "update_bands_hessian_mesh() (pyprocar.core.electronicbandstructure method)": [[44, "pyprocar.core.ElectronicBandStructure.update_bands_hessian_mesh"]], "update_bands_mesh() (pyprocar.core.electronicbandstructure method)": [[45, "pyprocar.core.ElectronicBandStructure.update_bands_mesh"]], "update_index_mesh() (pyprocar.core.electronicbandstructure method)": [[46, "pyprocar.core.ElectronicBandStructure.update_index_mesh"]], "update_kpoints_cartesian_mesh() (pyprocar.core.electronicbandstructure method)": [[47, "pyprocar.core.ElectronicBandStructure.update_kpoints_cartesian_mesh"]], "update_kpoints_mesh() (pyprocar.core.electronicbandstructure method)": [[48, "pyprocar.core.ElectronicBandStructure.update_kpoints_mesh"]], "update_projected_mesh() (pyprocar.core.electronicbandstructure method)": [[49, "pyprocar.core.ElectronicBandStructure.update_projected_mesh"]], "update_projected_phase_mesh() (pyprocar.core.electronicbandstructure method)": [[50, "pyprocar.core.ElectronicBandStructure.update_projected_phase_mesh"]], "update_weights() (pyprocar.core.electronicbandstructure method)": [[51, "pyprocar.core.ElectronicBandStructure.update_weights"]], "update_weights_mesh() (pyprocar.core.electronicbandstructure method)": [[52, "pyprocar.core.ElectronicBandStructure.update_weights_mesh"]], "weights_mesh (pyprocar.core.electronicbandstructure property)": [[53, "pyprocar.core.ElectronicBandStructure.weights_mesh"]], "fermisurface (class in pyprocar.core)": [[54, "pyprocar.core.FermiSurface"]], "__init__() (pyprocar.core.fermisurface method)": [[55, "pyprocar.core.FermiSurface.__init__"]], "add_axes_labels() (pyprocar.core.fermisurface method)": [[56, "pyprocar.core.FermiSurface.add_axes_labels"]], "add_legend() (pyprocar.core.fermisurface method)": [[57, "pyprocar.core.FermiSurface.add_legend"]], "find_energy() (pyprocar.core.fermisurface method)": [[58, "pyprocar.core.FermiSurface.find_energy"]], "plot() (pyprocar.core.fermisurface method)": [[59, "pyprocar.core.FermiSurface.plot"]], "spin_texture() (pyprocar.core.fermisurface method)": [[60, "pyprocar.core.FermiSurface.spin_texture"]], "fermisurface3d (class in pyprocar.core)": [[61, "pyprocar.core.FermiSurface3D"]], "__init__() (pyprocar.core.fermisurface3d method)": [[62, "pyprocar.core.FermiSurface3D.__init__"]], "calculate_effective_mass() (pyprocar.core.fermisurface3d method)": [[63, "pyprocar.core.FermiSurface3D.calculate_effective_mass"]], "calculate_fermi_speed() (pyprocar.core.fermisurface3d method)": [[64, "pyprocar.core.FermiSurface3D.calculate_fermi_speed"]], "calculate_fermi_velocity() (pyprocar.core.fermisurface3d method)": [[65, "pyprocar.core.FermiSurface3D.calculate_fermi_velocity"]], "calculate_first_and_second_derivative_energy() (pyprocar.core.fermisurface3d method)": [[66, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy"]], "calculate_first_and_second_derivative_energy_band() (pyprocar.core.fermisurface3d method)": [[67, "pyprocar.core.FermiSurface3D.calculate_first_and_second_derivative_energy_band"]], "create_spin_texture() (pyprocar.core.fermisurface3d method)": [[68, "pyprocar.core.FermiSurface3D.create_spin_texture"]], "create_vector_texture() (pyprocar.core.fermisurface3d method)": [[69, "pyprocar.core.FermiSurface3D.create_vector_texture"]], "extend_surface() (pyprocar.core.fermisurface3d method)": [[70, "pyprocar.core.FermiSurface3D.extend_surface"]], "project_atomic_projections() (pyprocar.core.fermisurface3d method)": [[71, "pyprocar.core.FermiSurface3D.project_atomic_projections"]], "project_color() (pyprocar.core.fermisurface3d method)": [[72, "pyprocar.core.FermiSurface3D.project_color"]], "project_spin_texture_atomic_projections() (pyprocar.core.fermisurface3d method)": [[73, "pyprocar.core.FermiSurface3D.project_spin_texture_atomic_projections"]], "isosurface (class in pyprocar.core)": [[74, "pyprocar.core.Isosurface"]], "__init__() (pyprocar.core.isosurface method)": [[75, "pyprocar.core.Isosurface.__init__"]], "dxyz (pyprocar.core.isosurface property)": [[76, "pyprocar.core.Isosurface.dxyz"]], "nx (pyprocar.core.isosurface property)": [[77, "pyprocar.core.Isosurface.nX"]], "ny (pyprocar.core.isosurface property)": [[78, "pyprocar.core.Isosurface.nY"]], "nz (pyprocar.core.isosurface property)": [[79, "pyprocar.core.Isosurface.nZ"]], "surface_boundaries (pyprocar.core.isosurface property)": [[80, "pyprocar.core.Isosurface.surface_boundaries"]], "kpath (class in pyprocar.core)": [[81, "pyprocar.core.KPath"]], "__init__() (pyprocar.core.kpath method)": [[82, "pyprocar.core.KPath.__init__"]], "get_kpoints_transformed() (pyprocar.core.kpath method)": [[83, "pyprocar.core.KPath.get_kpoints_transformed"]], "get_optimized_kpoints_transformed() (pyprocar.core.kpath method)": [[84, "pyprocar.core.KPath.get_optimized_kpoints_transformed"]], "kdistances (pyprocar.core.kpath property)": [[85, "pyprocar.core.KPath.kdistances"]], "nsegments (pyprocar.core.kpath property)": [[86, "pyprocar.core.KPath.nsegments"]], "tick_names (pyprocar.core.kpath property)": [[87, "pyprocar.core.KPath.tick_names"]], "tick_positions (pyprocar.core.kpath property)": [[88, "pyprocar.core.KPath.tick_positions"]], "write_to_file() (pyprocar.core.kpath method)": [[89, "pyprocar.core.KPath.write_to_file"]], "structure (class in pyprocar.core)": [[90, "pyprocar.core.Structure"]], "__init__() (pyprocar.core.structure method)": [[91, "pyprocar.core.Structure.__init__"]], "a (pyprocar.core.structure property)": [[92, "pyprocar.core.Structure.a"]], "alpha (pyprocar.core.structure property)": [[93, "pyprocar.core.Structure.alpha"]], "atomic_numbers (pyprocar.core.structure property)": [[94, "pyprocar.core.Structure.atomic_numbers"]], "b (pyprocar.core.structure property)": [[95, "pyprocar.core.Structure.b"]], "beta (pyprocar.core.structure property)": [[96, "pyprocar.core.Structure.beta"]], "c (pyprocar.core.structure property)": [[97, "pyprocar.core.Structure.c"]], "cell_convex_hull (pyprocar.core.structure property)": [[98, "pyprocar.core.Structure.cell_convex_hull"]], "density (pyprocar.core.structure property)": [[99, "pyprocar.core.Structure.density"]], "gamma (pyprocar.core.structure property)": [[100, "pyprocar.core.Structure.gamma"]], "get_space_group_international() (pyprocar.core.structure method)": [[101, "pyprocar.core.Structure.get_space_group_international"]], "get_space_group_number() (pyprocar.core.structure method)": [[102, "pyprocar.core.Structure.get_space_group_number"]], "get_spglib_symmetry_dataset() (pyprocar.core.structure method)": [[103, "pyprocar.core.Structure.get_spglib_symmetry_dataset"]], "get_wyckoff_positions() (pyprocar.core.structure method)": [[104, "pyprocar.core.Structure.get_wyckoff_positions"]], "is_point_inside() (pyprocar.core.structure method)": [[105, "pyprocar.core.Structure.is_point_inside"]], "lattice_corners (pyprocar.core.structure property)": [[106, "pyprocar.core.Structure.lattice_corners"]], "masses (pyprocar.core.structure property)": [[107, "pyprocar.core.Structure.masses"]], "natoms (pyprocar.core.structure property)": [[108, "pyprocar.core.Structure.natoms"]], "nspecies (pyprocar.core.structure property)": [[109, "pyprocar.core.Structure.nspecies"]], "plot_cell_convex_hull() (pyprocar.core.structure method)": [[110, "pyprocar.core.Structure.plot_cell_convex_hull"]], "reciprocal_lattice (pyprocar.core.structure property)": [[111, "pyprocar.core.Structure.reciprocal_lattice"]], "species (pyprocar.core.structure property)": [[112, "pyprocar.core.Structure.species"]], "supercell() (pyprocar.core.structure method)": [[113, "pyprocar.core.Structure.supercell"]], "transform() (pyprocar.core.structure method)": [[114, "pyprocar.core.Structure.transform"]], "volume (pyprocar.core.structure property)": [[115, "pyprocar.core.Structure.volume"]], "surface (class in pyprocar.core)": [[116, "pyprocar.core.Surface"]], "__init__() (pyprocar.core.surface method)": [[117, "pyprocar.core.Surface.__init__"]], "centers (pyprocar.core.surface property)": [[118, "pyprocar.core.Surface.centers"]], "export() (pyprocar.core.surface method)": [[119, "pyprocar.core.Surface.export"]], "faces_array (pyprocar.core.surface property)": [[120, "pyprocar.core.Surface.faces_array"]], "set_color_with_cmap() (pyprocar.core.surface method)": [[121, "pyprocar.core.Surface.set_color_with_cmap"]], "set_scalars() (pyprocar.core.surface method)": [[122, "pyprocar.core.Surface.set_scalars"]], "set_vectors() (pyprocar.core.surface method)": [[123, "pyprocar.core.Surface.set_vectors"]], "abinitkpoints (class in pyprocar.io.abinit)": [[135, "pyprocar.io.abinit.AbinitKpoints"]], "__init__() (pyprocar.io.abinit.abinitkpoints method)": [[136, "pyprocar.io.abinit.AbinitKpoints.__init__"]], "abinitprocar (class in pyprocar.io.abinit)": [[137, "pyprocar.io.abinit.AbinitProcar"]], "__init__() (pyprocar.io.abinit.abinitprocar method)": [[138, "pyprocar.io.abinit.AbinitProcar.__init__"]], "output (class in pyprocar.io.abinit)": [[139, "pyprocar.io.abinit.Output"]], "__init__() (pyprocar.io.abinit.output method)": [[140, "pyprocar.io.abinit.Output.__init__"]], "bxsfparser (class in pyprocar.io.bxsf)": [[141, "pyprocar.io.bxsf.BxsfParser"]], "__init__() (pyprocar.io.bxsf.bxsfparser method)": [[142, "pyprocar.io.bxsf.BxsfParser.__init__"]], "parse_bxsf() (pyprocar.io.bxsf.bxsfparser method)": [[143, "pyprocar.io.bxsf.BxsfParser.parse_bxsf"]], "lobsterparser (class in pyprocar.io.lobster)": [[144, "pyprocar.io.lobster.LobsterParser"]], "__init__() (pyprocar.io.lobster.lobsterparser method)": [[145, "pyprocar.io.lobster.LobsterParser.__init__"]], "dos (pyprocar.io.lobster.lobsterparser property)": [[146, "pyprocar.io.lobster.LobsterParser.dos"]], "dos_parametric() (pyprocar.io.lobster.lobsterparser method)": [[147, "pyprocar.io.lobster.LobsterParser.dos_parametric"]], "dos_projected (pyprocar.io.lobster.lobsterparser property)": [[148, "pyprocar.io.lobster.LobsterParser.dos_projected"]], "dos_to_dict (pyprocar.io.lobster.lobsterparser property)": [[149, "pyprocar.io.lobster.LobsterParser.dos_to_dict"]], "dos_total (pyprocar.io.lobster.lobsterparser property)": [[150, "pyprocar.io.lobster.LobsterParser.dos_total"]], "final_structure (pyprocar.io.lobster.lobsterparser property)": [[151, "pyprocar.io.lobster.LobsterParser.final_structure"]], "initial_structure (pyprocar.io.lobster.lobsterparser property)": [[152, "pyprocar.io.lobster.LobsterParser.initial_structure"]], "parse_structure() (pyprocar.io.lobster.lobsterparser method)": [[153, "pyprocar.io.lobster.LobsterParser.parse_structure"]], "species (pyprocar.io.lobster.lobsterparser property)": [[154, "pyprocar.io.lobster.LobsterParser.species"]], "structure (pyprocar.io.lobster.lobsterparser property)": [[155, "pyprocar.io.lobster.LobsterParser.structure"]], "structures (pyprocar.io.lobster.lobsterparser property)": [[156, "pyprocar.io.lobster.LobsterParser.structures"]], "qeparser (class in pyprocar.io.qe)": [[157, "pyprocar.io.qe.QEParser"]], "__init__() (pyprocar.io.qe.qeparser method)": [[158, "pyprocar.io.qe.QEParser.__init__"]], "final_structure (pyprocar.io.qe.qeparser property)": [[159, "pyprocar.io.qe.QEParser.final_structure"]], "getkpointlabels() (pyprocar.io.qe.qeparser method)": [[160, "pyprocar.io.qe.QEParser.getKpointLabels"]], "initial_structure (pyprocar.io.qe.qeparser property)": [[161, "pyprocar.io.qe.QEParser.initial_structure"]], "kpoints_cart() (pyprocar.io.qe.qeparser method)": [[162, "pyprocar.io.qe.QEParser.kpoints_cart"]], "species (pyprocar.io.qe.qeparser property)": [[163, "pyprocar.io.qe.QEParser.species"]], "structure (pyprocar.io.qe.qeparser property)": [[164, "pyprocar.io.qe.QEParser.structure"]], "structures (pyprocar.io.qe.qeparser property)": [[165, "pyprocar.io.qe.QEParser.structures"]], "siestaparser (class in pyprocar.io.siesta)": [[166, "pyprocar.io.siesta.SiestaParser"]], "__init__() (pyprocar.io.siesta.siestaparser method)": [[167, "pyprocar.io.siesta.SiestaParser.__init__"]], "kpoints (class in pyprocar.io.vasp)": [[168, "pyprocar.io.vasp.Kpoints"]], "__init__() (pyprocar.io.vasp.kpoints method)": [[169, "pyprocar.io.vasp.Kpoints.__init__"]], "outcar (class in pyprocar.io.vasp)": [[170, "pyprocar.io.vasp.Outcar"]], "__init__() (pyprocar.io.vasp.outcar method)": [[171, "pyprocar.io.vasp.Outcar.__init__"]], "efermi (pyprocar.io.vasp.outcar property)": [[172, "pyprocar.io.vasp.Outcar.efermi"]], "reciprocal_lattice (pyprocar.io.vasp.outcar property)": [[173, "pyprocar.io.vasp.Outcar.reciprocal_lattice"]], "rotations (pyprocar.io.vasp.outcar property)": [[174, "pyprocar.io.vasp.Outcar.rotations"]], "poscar (class in pyprocar.io.vasp)": [[175, "pyprocar.io.vasp.Poscar"]], "__init__() (pyprocar.io.vasp.poscar method)": [[176, "pyprocar.io.vasp.Poscar.__init__"]], "procar (class in pyprocar.io.vasp)": [[177, "pyprocar.io.vasp.Procar"]], "__init__() (pyprocar.io.vasp.procar method)": [[178, "pyprocar.io.vasp.Procar.__init__"]], "kpoints_cartesian (pyprocar.io.vasp.procar property)": [[179, "pyprocar.io.vasp.Procar.kpoints_cartesian"]], "kpoints_reduced (pyprocar.io.vasp.procar property)": [[180, "pyprocar.io.vasp.Procar.kpoints_reduced"]], "repair() (pyprocar.io.vasp.procar method)": [[181, "pyprocar.io.vasp.Procar.repair"]], "symmetrize() (pyprocar.io.vasp.procar method)": [[182, "pyprocar.io.vasp.Procar.symmetrize"]], "vaspxml (class in pyprocar.io.vasp)": [[183, "pyprocar.io.vasp.VaspXML"]], "__init__() (pyprocar.io.vasp.vaspxml method)": [[184, "pyprocar.io.vasp.VaspXML.__init__"]], "bands (pyprocar.io.vasp.vaspxml property)": [[185, "pyprocar.io.vasp.VaspXML.bands"]], "bands_projected (pyprocar.io.vasp.vaspxml property)": [[186, "pyprocar.io.vasp.VaspXML.bands_projected"]], "conv() (pyprocar.io.vasp.vaspxml method)": [[187, "pyprocar.io.vasp.VaspXML.conv"]], "convergence (pyprocar.io.vasp.vaspxml property)": [[188, "pyprocar.io.vasp.VaspXML.convergence"]], "convergence_electronic (pyprocar.io.vasp.vaspxml property)": [[189, "pyprocar.io.vasp.VaspXML.convergence_electronic"]], "convergence_ionic (pyprocar.io.vasp.vaspxml property)": [[190, "pyprocar.io.vasp.VaspXML.convergence_ionic"]], "dos (pyprocar.io.vasp.vaspxml property)": [[191, "pyprocar.io.vasp.VaspXML.dos"]], "dos_projected (pyprocar.io.vasp.vaspxml property)": [[192, "pyprocar.io.vasp.VaspXML.dos_projected"]], "dos_to_dict (pyprocar.io.vasp.vaspxml property)": [[193, "pyprocar.io.vasp.VaspXML.dos_to_dict"]], "dos_total (pyprocar.io.vasp.vaspxml property)": [[194, "pyprocar.io.vasp.VaspXML.dos_total"]], "energies (pyprocar.io.vasp.vaspxml property)": [[195, "pyprocar.io.vasp.VaspXML.energies"]], "energy (pyprocar.io.vasp.vaspxml property)": [[196, "pyprocar.io.vasp.VaspXML.energy"]], "fermi (pyprocar.io.vasp.vaspxml property)": [[197, "pyprocar.io.vasp.VaspXML.fermi"]], "final_structure (pyprocar.io.vasp.vaspxml property)": [[198, "pyprocar.io.vasp.VaspXML.final_structure"]], "forces (pyprocar.io.vasp.vaspxml property)": [[199, "pyprocar.io.vasp.VaspXML.forces"]], "get_general() (pyprocar.io.vasp.vaspxml method)": [[200, "pyprocar.io.vasp.VaspXML.get_general"]], "get_params() (pyprocar.io.vasp.vaspxml method)": [[201, "pyprocar.io.vasp.VaspXML.get_params"]], "get_scstep() (pyprocar.io.vasp.vaspxml method)": [[202, "pyprocar.io.vasp.VaspXML.get_scstep"]], "get_set() (pyprocar.io.vasp.vaspxml method)": [[203, "pyprocar.io.vasp.VaspXML.get_set"]], "get_structure() (pyprocar.io.vasp.vaspxml method)": [[204, "pyprocar.io.vasp.VaspXML.get_structure"]], "get_varray() (pyprocar.io.vasp.vaspxml method)": [[205, "pyprocar.io.vasp.VaspXML.get_varray"]], "incar (pyprocar.io.vasp.vaspxml property)": [[206, "pyprocar.io.vasp.VaspXML.incar"]], "initial_structure (pyprocar.io.vasp.vaspxml property)": [[207, "pyprocar.io.vasp.VaspXML.initial_structure"]], "is_finished (pyprocar.io.vasp.vaspxml property)": [[208, "pyprocar.io.vasp.VaspXML.is_finished"]], "iteration_data (pyprocar.io.vasp.vaspxml property)": [[209, "pyprocar.io.vasp.VaspXML.iteration_data"]], "kpoints (pyprocar.io.vasp.vaspxml property)": [[210, "pyprocar.io.vasp.VaspXML.kpoints"]], "kpoints_list (pyprocar.io.vasp.vaspxml property)": [[211, "pyprocar.io.vasp.VaspXML.kpoints_list"]], "last_energy (pyprocar.io.vasp.vaspxml property)": [[212, "pyprocar.io.vasp.VaspXML.last_energy"]], "parse_vasprun() (pyprocar.io.vasp.vaspxml method)": [[213, "pyprocar.io.vasp.VaspXML.parse_vasprun"]], "potcar_info (pyprocar.io.vasp.vaspxml property)": [[214, "pyprocar.io.vasp.VaspXML.potcar_info"]], "read() (pyprocar.io.vasp.vaspxml method)": [[215, "pyprocar.io.vasp.VaspXML.read"]], "species (pyprocar.io.vasp.vaspxml property)": [[216, "pyprocar.io.vasp.VaspXML.species"]], "structure (pyprocar.io.vasp.vaspxml property)": [[217, "pyprocar.io.vasp.VaspXML.structure"]], "structures (pyprocar.io.vasp.vaspxml property)": [[218, "pyprocar.io.vasp.VaspXML.structures"]], "text_to_bool() (pyprocar.io.vasp.vaspxml method)": [[219, "pyprocar.io.vasp.VaspXML.text_to_bool"]], "vasp_parameters (pyprocar.io.vasp.vaspxml property)": [[220, "pyprocar.io.vasp.VaspXML.vasp_parameters"]], "dosplot (class in pyprocar.plotter)": [[228, "pyprocar.plotter.DOSPlot"]], "__init__() (pyprocar.plotter.dosplot method)": [[229, "pyprocar.plotter.DOSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.dosplot method)": [[230, "pyprocar.plotter.DOSPlot.draw_fermi"]], "grid() (pyprocar.plotter.dosplot method)": [[231, "pyprocar.plotter.DOSPlot.grid"]], "legend() (pyprocar.plotter.dosplot method)": [[232, "pyprocar.plotter.DOSPlot.legend"]], "plot_dos() (pyprocar.plotter.dosplot method)": [[233, "pyprocar.plotter.DOSPlot.plot_dos"]], "plot_parametric() (pyprocar.plotter.dosplot method)": [[234, "pyprocar.plotter.DOSPlot.plot_parametric"]], "plot_parametric_line() (pyprocar.plotter.dosplot method)": [[235, "pyprocar.plotter.DOSPlot.plot_parametric_line"]], "plot_stack() (pyprocar.plotter.dosplot method)": [[236, "pyprocar.plotter.DOSPlot.plot_stack"]], "plot_stack_orbitals() (pyprocar.plotter.dosplot method)": [[237, "pyprocar.plotter.DOSPlot.plot_stack_orbitals"]], "plot_stack_species() (pyprocar.plotter.dosplot method)": [[238, "pyprocar.plotter.DOSPlot.plot_stack_species"]], "save() (pyprocar.plotter.dosplot method)": [[239, "pyprocar.plotter.DOSPlot.save"]], "set_xlabel() (pyprocar.plotter.dosplot method)": [[240, "pyprocar.plotter.DOSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.dosplot method)": [[241, "pyprocar.plotter.DOSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.dosplot method)": [[242, "pyprocar.plotter.DOSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.dosplot method)": [[243, "pyprocar.plotter.DOSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.dosplot method)": [[244, "pyprocar.plotter.DOSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.dosplot method)": [[245, "pyprocar.plotter.DOSPlot.set_yticks"]], "show() (pyprocar.plotter.dosplot method)": [[246, "pyprocar.plotter.DOSPlot.show"]], "ebsplot (class in pyprocar.plotter)": [[247, "pyprocar.plotter.EBSPlot"]], "__init__() (pyprocar.plotter.ebsplot method)": [[248, "pyprocar.plotter.EBSPlot.__init__"]], "draw_fermi() (pyprocar.plotter.ebsplot method)": [[249, "pyprocar.plotter.EBSPlot.draw_fermi"]], "grid() (pyprocar.plotter.ebsplot method)": [[250, "pyprocar.plotter.EBSPlot.grid"]], "legend() (pyprocar.plotter.ebsplot method)": [[251, "pyprocar.plotter.EBSPlot.legend"]], "plot_bands() (pyprocar.plotter.ebsplot method)": [[252, "pyprocar.plotter.EBSPlot.plot_bands"]], "plot_parameteric() (pyprocar.plotter.ebsplot method)": [[253, "pyprocar.plotter.EBSPlot.plot_parameteric"]], "plot_parameteric_overlay() (pyprocar.plotter.ebsplot method)": [[254, "pyprocar.plotter.EBSPlot.plot_parameteric_overlay"]], "plot_scatter() (pyprocar.plotter.ebsplot method)": [[255, "pyprocar.plotter.EBSPlot.plot_scatter"]], "save() (pyprocar.plotter.ebsplot method)": [[256, "pyprocar.plotter.EBSPlot.save"]], "set_title() (pyprocar.plotter.ebsplot method)": [[257, "pyprocar.plotter.EBSPlot.set_title"]], "set_xlabel() (pyprocar.plotter.ebsplot method)": [[258, "pyprocar.plotter.EBSPlot.set_xlabel"]], "set_xlim() (pyprocar.plotter.ebsplot method)": [[259, "pyprocar.plotter.EBSPlot.set_xlim"]], "set_xticks() (pyprocar.plotter.ebsplot method)": [[260, "pyprocar.plotter.EBSPlot.set_xticks"]], "set_ylabel() (pyprocar.plotter.ebsplot method)": [[261, "pyprocar.plotter.EBSPlot.set_ylabel"]], "set_ylim() (pyprocar.plotter.ebsplot method)": [[262, "pyprocar.plotter.EBSPlot.set_ylim"]], "set_yticks() (pyprocar.plotter.ebsplot method)": [[263, "pyprocar.plotter.EBSPlot.set_yticks"]], "show() (pyprocar.plotter.ebsplot method)": [[264, "pyprocar.plotter.EBSPlot.show"]], "procarplot (class in pyprocar.plotter)": [[265, "pyprocar.plotter.ProcarPlot"]], "__init__() (pyprocar.plotter.procarplot method)": [[266, "pyprocar.plotter.ProcarPlot.__init__"]], "atomicplot() (pyprocar.plotter.procarplot method)": [[267, "pyprocar.plotter.ProcarPlot.atomicPlot"]], "parametricplot() (pyprocar.plotter.procarplot method)": [[268, "pyprocar.plotter.ProcarPlot.parametricPlot"]], "plotbands() (pyprocar.plotter.procarplot method)": [[269, "pyprocar.plotter.ProcarPlot.plotBands"]], "scatterplot() (pyprocar.plotter.procarplot method)": [[270, "pyprocar.plotter.ProcarPlot.scatterPlot"]], "fermihandler (class in pyprocar.scripts)": [[275, "pyprocar.scripts.FermiHandler"]], "__init__() (pyprocar.scripts.fermihandler method)": [[276, "pyprocar.scripts.FermiHandler.__init__"]], "create_isovalue_gif() (pyprocar.scripts.fermihandler method)": [[277, "pyprocar.scripts.FermiHandler.create_isovalue_gif"]], "plot_fermi_cross_section() (pyprocar.scripts.fermihandler method)": [[278, "pyprocar.scripts.FermiHandler.plot_fermi_cross_section"]], "plot_fermi_isoslider() (pyprocar.scripts.fermihandler method)": [[279, "pyprocar.scripts.FermiHandler.plot_fermi_isoslider"]], "plot_fermi_surface() (pyprocar.scripts.fermihandler method)": [[280, "pyprocar.scripts.FermiHandler.plot_fermi_surface"]], "plot_fermi_surface_area_vs_isovalue() (pyprocar.scripts.fermihandler method)": [[281, "pyprocar.scripts.FermiHandler.plot_fermi_surface_area_vs_isovalue"]], "bandgap() (in module pyprocar.scripts)": [[282, "pyprocar.scripts.bandgap"]], "bandsdosplot() (in module pyprocar.scripts)": [[283, "pyprocar.scripts.bandsdosplot"]], "bandsplot() (in module pyprocar.scripts)": [[284, "pyprocar.scripts.bandsplot"]], "bandsplot_2d() (in module pyprocar.scripts)": [[285, "pyprocar.scripts.bandsplot_2d"]], "cat() (in module pyprocar.scripts)": [[286, "pyprocar.scripts.cat"]], "dosplot() (in module pyprocar.scripts)": [[287, "pyprocar.scripts.dosplot"]], "fermi3d() (in module pyprocar.scripts)": [[288, "pyprocar.scripts.fermi3D"]], "generate2dkmesh() (in module pyprocar.scripts)": [[289, "pyprocar.scripts.generate2dkmesh"]], "kpath() (in module pyprocar.scripts)": [[290, "pyprocar.scripts.kpath"]], "repair() (in module pyprocar.scripts)": [[291, "pyprocar.scripts.repair"]], "bandsplot() (in module pyprocar.scripts.scriptbandsplot)": [[352, "pyprocar.scripts.scriptBandsplot.bandsplot"]], "module": [[352, "module-pyprocar.scripts.scriptBandsplot"], [353, "module-pyprocar.scripts.scriptCat"], [355, "module-pyprocar.scriptDosplot"], [357, "module-pyprocar.scripts.scriptFermi2D"], [358, "module-pyprocar.scripts.scriptFermi3D"], [359, "module-pyprocar.scripts.scriptFilter"], [362, "module-pyprocar.scripts.scriptRepair"], [364, "module-pyprocar.scripts.scriptUnfold"]], "pyprocar.scripts.scriptbandsplot": [[352, "module-pyprocar.scripts.scriptBandsplot"]], "cat() (in module pyprocar.scripts.scriptcat)": [[353, "pyprocar.scripts.scriptCat.cat"]], "pyprocar.scripts.scriptcat": [[353, "module-pyprocar.scripts.scriptCat"]], "pyprocar.scriptdosplot": [[355, "module-pyprocar.scriptDosplot"]], "fermi2d() (in module pyprocar.scripts.scriptfermi2d)": [[357, "pyprocar.scripts.scriptFermi2D.fermi2D"]], "pyprocar.scripts.scriptfermi2d": [[357, "module-pyprocar.scripts.scriptFermi2D"]], "fermi3d() (in module pyprocar.scripts.scriptfermi3d)": [[358, "pyprocar.scripts.scriptFermi3D.fermi3D"]], "pyprocar.scripts.scriptfermi3d": [[358, "module-pyprocar.scripts.scriptFermi3D"]], "filter() (in module pyprocar.scripts.scriptfilter)": [[359, "pyprocar.scripts.scriptFilter.filter"]], "pyprocar.scripts.scriptfilter": [[359, "module-pyprocar.scripts.scriptFilter"]], "pyprocar.scripts.scriptrepair": [[362, "module-pyprocar.scripts.scriptRepair"]], "repair() (in module pyprocar.scripts.scriptrepair)": [[362, "pyprocar.scripts.scriptRepair.repair"]], "pyprocar.scripts.scriptunfold": [[364, "module-pyprocar.scripts.scriptUnfold"]], "unfold() (in module pyprocar.scripts.scriptunfold)": [[364, "pyprocar.scripts.scriptUnfold.unfold"]]}})